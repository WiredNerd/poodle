<?xml version="1.0" ?>
<testsuites disabled="0" errors="0" failures="158" tests="716" time="0.0">
	<testsuite disabled="0" errors="0" failures="158" name="mutmut" skipped="0" tests="716" time="0">
		<testcase name="Mutant #1" file="src/poodle/report.py" line="16">
			<system-out>logger = logging.getLogger(__name__)</system-out>
		</testcase>
		<testcase name="Mutant #2" file="src/poodle/report.py" line="19">
			<system-out>    &quot;summary&quot;: report_summary,</system-out>
		</testcase>
		<testcase name="Mutant #3" file="src/poodle/report.py" line="20">
			<system-out>    &quot;not_found&quot;: report_not_found,</system-out>
		</testcase>
		<testcase name="Mutant #4" file="src/poodle/report.py" line="21">
			<system-out>}</system-out>
		</testcase>
		<testcase name="Mutant #5" file="src/poodle/report.py" line="26">
			<system-out>    logger.debug(&quot;Reporters: %s&quot;, config.reporters)</system-out>
		</testcase>
		<testcase name="Mutant #6" file="src/poodle/report.py" line="30">
			<system-out>            if reporter_name in builtin_reporters:</system-out>
		</testcase>
		<testcase name="Mutant #7" file="src/poodle/core.py" line="21">
			<system-out>logger = logging.getLogger(__name__)</system-out>
		</testcase>
		<testcase name="Mutant #8" file="src/poodle/core.py" line="27">
			<system-out>        work = PoodleWork(config)  # sets logging defaults</system-out>
		</testcase>
		<testcase name="Mutant #9" file="src/poodle/core.py" line="28">
			<system-out>        logger.info(&quot;\n%s&quot;, pprint_str(config))</system-out>
		</testcase>
		<testcase name="Mutant #10" file="src/poodle/core.py" line="31">
			<system-out>            logger.info(&quot;delete %s&quot;, config.work_folder)</system-out>
		</testcase>
		<testcase name="Mutant #11" file="src/poodle/core.py" line="34">
			<system-out>        create_temp_zips(work)</system-out>
		</testcase>
		<testcase name="Mutant #12" file="src/poodle/core.py" line="36">
			<system-out>        work.mutators = initialize_mutators(work)</system-out>
		</testcase>
		<testcase name="Mutant #13" file="src/poodle/core.py" line="37">
			<system-out>        work.runner = get_runner(config)</system-out>
		</testcase>
		<testcase name="Mutant #14" file="src/poodle/core.py" line="38">
			<system-out>        work.reporters = list(generate_reporters(config))</system-out>
		</testcase>
		<testcase name="Mutant #15" file="src/poodle/core.py" line="40">
			<system-out>        mutants = create_mutants_for_all_mutators(work)</system-out>
		</testcase>
		<testcase name="Mutant #16" file="src/poodle/core.py" line="41">
			<system-out>        work.echo(f&quot;Identified {len(mutants)} mutants&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #17" file="src/poodle/core.py" line="43">
			<system-out>        clean_run_results = clean_run_each_source_folder(work)</system-out>
		</testcase>
		<testcase name="Mutant #18" file="src/poodle/core.py" line="44">
			<system-out>        timeout = calc_timeout(config, clean_run_results)</system-out>
		</testcase>
		<testcase name="Mutant #19" file="src/poodle/core.py" line="45">
			<system-out>        results = run_mutant_trails(work, mutants, timeout)</system-out>
		</testcase>
		<testcase name="Mutant #20" file="src/poodle/core.py" line="50">
			<system-out>        logger.info(&quot;delete %s&quot;, config.work_folder)</system-out>
		</testcase>
		<testcase name="Mutant #21" file="src/poodle/core.py" line="62">
			<system-out>    max_clean_run = max([trial.duration for trial in clean_run_results.values()])</system-out>
		</testcase>
		<testcase name="Mutant #22" file="src/poodle/core.py" line="63">
			<system-out>    return max(float(max_clean_run) * config.timeout_multiplier, config.min_timeout)</system-out>
		</testcase>
		<testcase name="Mutant #23" file="src/poodle/util.py" line="17">
			<system-out>logger = logging.getLogger(__name__)</system-out>
		</testcase>
		<testcase name="Mutant #24" file="src/poodle/util.py" line="26">
			<system-out>    logger.debug(&quot;files_list_for_folder glob=%s filter_regex=%s folder=%s&quot;, glob, filter_regex, folder)</system-out>
		</testcase>
		<testcase name="Mutant #25" file="src/poodle/util.py" line="28">
			<system-out>    files = list(folder.rglob(glob))</system-out>
		</testcase>
		<testcase name="Mutant #26" file="src/poodle/util.py" line="31">
			<system-out>        files = [file for file in files if not any(re.search(regex, part) for part in file.parts)]</system-out>
		</testcase>
		<testcase name="Mutant #27" file="src/poodle/util.py" line="31">
			<system-out>        files = [file for file in files if not any(re.search(regex, part) for part in file.parts)]</system-out>
		</testcase>
		<testcase name="Mutant #28" file="src/poodle/util.py" line="33">
			<system-out>    logger.debug(&quot;files_list_for_folder results: folder=%s files=%s&quot;, folder, files)</system-out>
		</testcase>
		<testcase name="Mutant #29" file="src/poodle/util.py" line="41">
			<system-out>            &quot;*&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #30" file="src/poodle/util.py" line="51">
			<system-out>    work.config.work_folder.mkdir(parents=True, exist_ok=True)</system-out>
		</testcase>
		<testcase name="Mutant #31" file="src/poodle/util.py" line="51">
			<system-out>    work.config.work_folder.mkdir(parents=True, exist_ok=True)</system-out>
		</testcase>
		<testcase name="Mutant #32" file="src/poodle/util.py" line="53">
			<system-out>        zip_file = work.config.work_folder / (&quot;src-&quot; + work.next_num() + &quot;.zip&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #33" file="src/poodle/util.py" line="53">
			<system-out>        zip_file = work.config.work_folder / (&quot;src-&quot; + work.next_num() + &quot;.zip&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #34" file="src/poodle/util.py" line="53">
			<system-out>        zip_file = work.config.work_folder / (&quot;src-&quot; + work.next_num() + &quot;.zip&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #35" file="src/poodle/util.py" line="53">
			<system-out>        zip_file = work.config.work_folder / (&quot;src-&quot; + work.next_num() + &quot;.zip&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #36" file="src/poodle/util.py" line="53">
			<system-out>        zip_file = work.config.work_folder / (&quot;src-&quot; + work.next_num() + &quot;.zip&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #37" file="src/poodle/util.py" line="53">
			<system-out>        zip_file = work.config.work_folder / (&quot;src-&quot; + work.next_num() + &quot;.zip&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #38" file="src/poodle/util.py" line="54">
			<system-out>        logger.info(&quot;Creating zip file: %s&quot;, zip_file)</system-out>
		</testcase>
		<testcase name="Mutant #39" file="src/poodle/util.py" line="55">
			<system-out>        work.folder_zips[folder] = zip_file</system-out>
		</testcase>
		<testcase name="Mutant #40" file="src/poodle/util.py" line="56">
			<system-out>        with ZipFile(zip_file, &quot;w&quot;) as target_zip:</system-out>
		</testcase>
		<testcase name="Mutant #41" file="src/poodle/util.py" line="63">
			<system-out>    logger.debug(&quot;Import object: %s&quot;, object_to_import)</system-out>
		</testcase>
		<testcase name="Mutant #42" file="src/poodle/util.py" line="64">
			<system-out>    parts = object_to_import.split(&quot;.&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #43" file="src/poodle/util.py" line="64">
			<system-out>    parts = object_to_import.split(&quot;.&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #44" file="src/poodle/util.py" line="65">
			<system-out>    module_str = &quot;.&quot;.join(parts[:-1])</system-out>
		</testcase>
		<testcase name="Mutant #45" file="src/poodle/util.py" line="65">
			<system-out>    module_str = &quot;.&quot;.join(parts[:-1])</system-out>
		</testcase>
		<testcase name="Mutant #46" file="src/poodle/util.py" line="65">
			<system-out>    module_str = &quot;.&quot;.join(parts[:-1])</system-out>
		</testcase>
		<testcase name="Mutant #47" file="src/poodle/util.py" line="65">
			<system-out>    module_str = &quot;.&quot;.join(parts[:-1])</system-out>
		</testcase>
		<testcase name="Mutant #48" file="src/poodle/util.py" line="66">
			<system-out>    obj_def = parts[-1:][0]</system-out>
		</testcase>
		<testcase name="Mutant #49" file="src/poodle/util.py" line="66">
			<system-out>    obj_def = parts[-1:][0]</system-out>
		</testcase>
		<testcase name="Mutant #50" file="src/poodle/util.py" line="66">
			<system-out>    obj_def = parts[-1:][0]</system-out>
		</testcase>
		<testcase name="Mutant #51" file="src/poodle/util.py" line="66">
			<system-out>    obj_def = parts[-1:][0]</system-out>
		</testcase>
		<testcase name="Mutant #52" file="src/poodle/util.py" line="67">
			<system-out>    module = __import__(module_str, fromlist=[obj_def])</system-out>
		</testcase>
		<testcase name="Mutant #53" file="src/poodle/util.py" line="73">
			<system-out>    out = StringIO()</system-out>
		</testcase>
		<testcase name="Mutant #54" file="src/poodle/util.py" line="74">
			<system-out>    pprint(obj, stream=out, width=150)  # noqa: T203</system-out>
		</testcase>
		<testcase name="Mutant #55" file="src/poodle/run.py" line="21">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -18,7 +18,7 @@
 from .runners import command_line
 from .util import dynamic_import
 
-logger = logging.getLogger(__name__)
+logger = None
 
 builtin_runners = {
     &quot;command_line&quot;: command_line.runner,
</failure>
			<system-out>logger = logging.getLogger(__name__)</system-out>
		</testcase>
		<testcase name="Mutant #56" file="src/poodle/run.py" line="24">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -21,7 +21,7 @@
 logger = logging.getLogger(__name__)
 
 builtin_runners = {
-    &quot;command_line&quot;: command_line.runner,
+    &quot;XXcommand_lineXX&quot;: command_line.runner,
 }
 
 
</failure>
			<system-out>    &quot;command_line&quot;: command_line.runner,</system-out>
		</testcase>
		<testcase name="Mutant #57" file="src/poodle/run.py" line="25">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -20,9 +20,7 @@
 
 logger = logging.getLogger(__name__)
 
-builtin_runners = {
-    &quot;command_line&quot;: command_line.runner,
-}
+builtin_runners = None
 
 
 def get_runner(config: PoodleConfig) -&gt; Callable:
</failure>
			<system-out>}</system-out>
		</testcase>
		<testcase name="Mutant #58" file="src/poodle/run.py" line="30">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -27,7 +27,7 @@
 
 def get_runner(config: PoodleConfig) -&gt; Callable:
     &quot;&quot;&quot;Retrieve runner callable given internal runner name or external runner python name.&quot;&quot;&quot;
-    logger.debug(&quot;Runner: %s&quot;, config.runner)
+    logger.debug(&quot;XXRunner: %sXX&quot;, config.runner)
 
     if config.runner in builtin_runners:
         return builtin_runners[config.runner]
</failure>
			<system-out>    logger.debug(&quot;Runner: %s&quot;, config.runner)</system-out>
		</testcase>
		<testcase name="Mutant #59" file="src/poodle/run.py" line="32">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -29,7 +29,7 @@
     &quot;&quot;&quot;Retrieve runner callable given internal runner name or external runner python name.&quot;&quot;&quot;
     logger.debug(&quot;Runner: %s&quot;, config.runner)
 
-    if config.runner in builtin_runners:
+    if config.runner not in builtin_runners:
         return builtin_runners[config.runner]
 
     return dynamic_import(config.runner)
</failure>
			<system-out>    if config.runner in builtin_runners:</system-out>
		</testcase>
		<testcase name="Mutant #60" file="src/poodle/run.py" line="45">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -42,7 +42,7 @@
 
 def clean_run_trial(work: PoodleWork, folder: Path) -&gt; MutantTrial:
     &quot;&quot;&quot;Run a trial with no mutation.&quot;&quot;&quot;
-    start = time.time()
+    start = None
     work.echo(f&quot;Testing clean run of folder '{folder}'...&quot;, nl=False)
     mutant_trial = run_mutant_trial(
         work.config,
</failure>
			<system-out>    start = time.time()</system-out>
		</testcase>
		<testcase name="Mutant #61" file="src/poodle/run.py" line="46">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -43,7 +43,7 @@
 def clean_run_trial(work: PoodleWork, folder: Path) -&gt; MutantTrial:
     &quot;&quot;&quot;Run a trial with no mutation.&quot;&quot;&quot;
     start = time.time()
-    work.echo(f&quot;Testing clean run of folder '{folder}'...&quot;, nl=False)
+    work.echo(f&quot;XXTesting clean run of folder '{folder}'...XX&quot;, nl=False)
     mutant_trial = run_mutant_trial(
         work.config,
         work.echo,
</failure>
			<system-out>    work.echo(f&quot;Testing clean run of folder '{folder}'...&quot;, nl=False)</system-out>
		</testcase>
		<testcase name="Mutant #62" file="src/poodle/run.py" line="46">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -43,7 +43,7 @@
 def clean_run_trial(work: PoodleWork, folder: Path) -&gt; MutantTrial:
     &quot;&quot;&quot;Run a trial with no mutation.&quot;&quot;&quot;
     start = time.time()
-    work.echo(f&quot;Testing clean run of folder '{folder}'...&quot;, nl=False)
+    work.echo(f&quot;Testing clean run of folder '{folder}'...&quot;, nl=True)
     mutant_trial = run_mutant_trial(
         work.config,
         work.echo,
</failure>
			<system-out>    work.echo(f&quot;Testing clean run of folder '{folder}'...&quot;, nl=False)</system-out>
		</testcase>
		<testcase name="Mutant #63" file="src/poodle/run.py" line="52">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -49,7 +49,7 @@
         work.echo,
         work.folder_zips[folder],
         Mutant(
-            mutator_name=&quot;&quot;,
+            mutator_name=&quot;XXXX&quot;,
             source_folder=folder,
             source_file=None,
             lineno=0,
</failure>
			<system-out>            mutator_name=&quot;&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #64" file="src/poodle/run.py" line="55">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -52,7 +52,7 @@
             mutator_name=&quot;&quot;,
             source_folder=folder,
             source_file=None,
-            lineno=0,
+            lineno=1,
             col_offset=0,
             end_lineno=0,
             end_col_offset=0,
</failure>
			<system-out>            lineno=0,</system-out>
		</testcase>
		<testcase name="Mutant #65" file="src/poodle/run.py" line="56">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -53,7 +53,7 @@
             source_folder=folder,
             source_file=None,
             lineno=0,
-            col_offset=0,
+            col_offset=1,
             end_lineno=0,
             end_col_offset=0,
             text=&quot;&quot;,
</failure>
			<system-out>            col_offset=0,</system-out>
		</testcase>
		<testcase name="Mutant #66" file="src/poodle/run.py" line="57">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -54,7 +54,7 @@
             source_file=None,
             lineno=0,
             col_offset=0,
-            end_lineno=0,
+            end_lineno=1,
             end_col_offset=0,
             text=&quot;&quot;,
         ),
</failure>
			<system-out>            end_lineno=0,</system-out>
		</testcase>
		<testcase name="Mutant #67" file="src/poodle/run.py" line="58">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -55,7 +55,7 @@
             lineno=0,
             col_offset=0,
             end_lineno=0,
-            end_col_offset=0,
+            end_col_offset=1,
             text=&quot;&quot;,
         ),
         work.next_num(),
</failure>
			<system-out>            end_col_offset=0,</system-out>
		</testcase>
		<testcase name="Mutant #68" file="src/poodle/run.py" line="59">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -56,7 +56,7 @@
             col_offset=0,
             end_lineno=0,
             end_col_offset=0,
-            text=&quot;&quot;,
+            text=&quot;XXXX&quot;,
         ),
         work.next_num(),
         work.runner,
</failure>
			<system-out>            text=&quot;&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #69" file="src/poodle/run.py" line="64">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -44,24 +44,7 @@
     &quot;&quot;&quot;Run a trial with no mutation.&quot;&quot;&quot;
     start = time.time()
     work.echo(f&quot;Testing clean run of folder '{folder}'...&quot;, nl=False)
-    mutant_trial = run_mutant_trial(
-        work.config,
-        work.echo,
-        work.folder_zips[folder],
-        Mutant(
-            mutator_name=&quot;&quot;,
-            source_folder=folder,
-            source_file=None,
-            lineno=0,
-            col_offset=0,
-            end_lineno=0,
-            end_col_offset=0,
-            text=&quot;&quot;,
-        ),
-        work.next_num(),
-        work.runner,
-        timeout=None,
-    )
+    mutant_trial = None
     if mutant_trial.result.passed:  # not expected
         work.echo(style(&quot;FAILED&quot;, fg=&quot;red&quot;))
         raise PoodleTrialRunError(&quot;Clean Run Failed&quot;, mutant_trial.result.reason_desc)
</failure>
			<system-out>    )</system-out>
		</testcase>
		<testcase name="Mutant #70" file="src/poodle/run.py" line="66">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -63,7 +63,7 @@
         timeout=None,
     )
     if mutant_trial.result.passed:  # not expected
-        work.echo(style(&quot;FAILED&quot;, fg=&quot;red&quot;))
+        work.echo(style(&quot;XXFAILEDXX&quot;, fg=&quot;red&quot;))
         raise PoodleTrialRunError(&quot;Clean Run Failed&quot;, mutant_trial.result.reason_desc)
 
     work.echo(&quot;PASSED&quot;)
</failure>
			<system-out>        work.echo(style(&quot;FAILED&quot;, fg=&quot;red&quot;))</system-out>
		</testcase>
		<testcase name="Mutant #71" file="src/poodle/run.py" line="66">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -63,7 +63,7 @@
         timeout=None,
     )
     if mutant_trial.result.passed:  # not expected
-        work.echo(style(&quot;FAILED&quot;, fg=&quot;red&quot;))
+        work.echo(style(&quot;FAILED&quot;, fg=&quot;XXredXX&quot;))
         raise PoodleTrialRunError(&quot;Clean Run Failed&quot;, mutant_trial.result.reason_desc)
 
     work.echo(&quot;PASSED&quot;)
</failure>
			<system-out>        work.echo(style(&quot;FAILED&quot;, fg=&quot;red&quot;))</system-out>
		</testcase>
		<testcase name="Mutant #72" file="src/poodle/run.py" line="67">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -64,7 +64,7 @@
     )
     if mutant_trial.result.passed:  # not expected
         work.echo(style(&quot;FAILED&quot;, fg=&quot;red&quot;))
-        raise PoodleTrialRunError(&quot;Clean Run Failed&quot;, mutant_trial.result.reason_desc)
+        raise PoodleTrialRunError(&quot;XXClean Run FailedXX&quot;, mutant_trial.result.reason_desc)
 
     work.echo(&quot;PASSED&quot;)
     logger.info(&quot;Elapsed Time %.2f s&quot;, time.time() - start)
</failure>
			<system-out>        raise PoodleTrialRunError(&quot;Clean Run Failed&quot;, mutant_trial.result.reason_desc)</system-out>
		</testcase>
		<testcase name="Mutant #73" file="src/poodle/run.py" line="69">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -66,7 +66,7 @@
         work.echo(style(&quot;FAILED&quot;, fg=&quot;red&quot;))
         raise PoodleTrialRunError(&quot;Clean Run Failed&quot;, mutant_trial.result.reason_desc)
 
-    work.echo(&quot;PASSED&quot;)
+    work.echo(&quot;XXPASSEDXX&quot;)
     logger.info(&quot;Elapsed Time %.2f s&quot;, time.time() - start)
 
     return mutant_trial
</failure>
			<system-out>    work.echo(&quot;PASSED&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #74" file="src/poodle/run.py" line="70">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -67,7 +67,7 @@
         raise PoodleTrialRunError(&quot;Clean Run Failed&quot;, mutant_trial.result.reason_desc)
 
     work.echo(&quot;PASSED&quot;)
-    logger.info(&quot;Elapsed Time %.2f s&quot;, time.time() - start)
+    logger.info(&quot;XXElapsed Time %.2f sXX&quot;, time.time() - start)
 
     return mutant_trial
 
</failure>
			<system-out>    logger.info(&quot;Elapsed Time %.2f s&quot;, time.time() - start)</system-out>
		</testcase>
		<testcase name="Mutant #75" file="src/poodle/run.py" line="70">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -67,7 +67,7 @@
         raise PoodleTrialRunError(&quot;Clean Run Failed&quot;, mutant_trial.result.reason_desc)
 
     work.echo(&quot;PASSED&quot;)
-    logger.info(&quot;Elapsed Time %.2f s&quot;, time.time() - start)
+    logger.info(&quot;Elapsed Time %.2f s&quot;, time.time() + start)
 
     return mutant_trial
 
</failure>
			<system-out>    logger.info(&quot;Elapsed Time %.2f s&quot;, time.time() - start)</system-out>
		</testcase>
		<testcase name="Mutant #76" file="src/poodle/run.py" line="80">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -77,7 +77,7 @@
 
     Report status as execution proceeds.
     &quot;&quot;&quot;
-    start = time.time()
+    start = None
     work.echo(&quot;Testing mutants&quot;)
     with concurrent.futures.ProcessPoolExecutor(max_workers=work.config.max_workers) as executor:
         try:
</failure>
			<system-out>    start = time.time()</system-out>
		</testcase>
		<testcase name="Mutant #77" file="src/poodle/run.py" line="81">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -78,7 +78,7 @@
     Report status as execution proceeds.
     &quot;&quot;&quot;
     start = time.time()
-    work.echo(&quot;Testing mutants&quot;)
+    work.echo(&quot;XXTesting mutantsXX&quot;)
     with concurrent.futures.ProcessPoolExecutor(max_workers=work.config.max_workers) as executor:
         try:
             futures = [
</failure>
			<system-out>    work.echo(&quot;Testing mutants&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #78" file="src/poodle/run.py" line="96">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -81,19 +81,7 @@
     work.echo(&quot;Testing mutants&quot;)
     with concurrent.futures.ProcessPoolExecutor(max_workers=work.config.max_workers) as executor:
         try:
-            futures = [
-                executor.submit(
-                    run_mutant_trial,
-                    work.config,
-                    work.echo,
-                    work.folder_zips[mutant.source_folder],
-                    mutant,
-                    work.next_num(),
-                    work.runner,
-                    timeout,
-                )
-                for mutant in mutants
-            ]
+            futures = None
 
             summary = TestingSummary()
             summary.trials = len(mutants)
</failure>
			<system-out>            ]</system-out>
		</testcase>
		<testcase name="Mutant #79" file="src/poodle/run.py" line="98">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -95,7 +95,7 @@
                 for mutant in mutants
             ]
 
-            summary = TestingSummary()
+            summary = None
             summary.trials = len(mutants)
             for future in concurrent.futures.as_completed(futures):
                 if future.cancelled():
</failure>
			<system-out>            summary = TestingSummary()</system-out>
		</testcase>
		<testcase name="Mutant #80" file="src/poodle/run.py" line="99">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -96,7 +96,7 @@
             ]
 
             summary = TestingSummary()
-            summary.trials = len(mutants)
+            summary.trials = None
             for future in concurrent.futures.as_completed(futures):
                 if future.cancelled():
                     work.echo(&quot;Canceled&quot;)
</failure>
			<system-out>            summary.trials = len(mutants)</system-out>
		</testcase>
		<testcase name="Mutant #81" file="src/poodle/run.py" line="102">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -99,7 +99,7 @@
             summary.trials = len(mutants)
             for future in concurrent.futures.as_completed(futures):
                 if future.cancelled():
-                    work.echo(&quot;Canceled&quot;)
+                    work.echo(&quot;XXCanceledXX&quot;)
                 else:
                     mutant_trial: MutantTrial = future.result()
                     summary += mutant_trial.result
</failure>
			<system-out>                    work.echo(&quot;Canceled&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #82" file="src/poodle/run.py" line="104">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -101,7 +101,7 @@
                 if future.cancelled():
                     work.echo(&quot;Canceled&quot;)
                 else:
-                    mutant_trial: MutantTrial = future.result()
+                    mutant_trial: MutantTrial = None
                     summary += mutant_trial.result
                 work.echo(
                     f&quot;COMPLETED {summary.tested:&gt;4}/{summary.trials:&lt;4}&quot;
</failure>
			<system-out>                    mutant_trial: MutantTrial = future.result()</system-out>
		</testcase>
		<testcase name="Mutant #83" file="src/poodle/run.py" line="105">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -102,7 +102,7 @@
                     work.echo(&quot;Canceled&quot;)
                 else:
                     mutant_trial: MutantTrial = future.result()
-                    summary += mutant_trial.result
+                    summary = mutant_trial.result
                 work.echo(
                     f&quot;COMPLETED {summary.tested:&gt;4}/{summary.trials:&lt;4}&quot;
                     f&quot;\tFOUND {summary.found:&gt;4}&quot;
</failure>
			<system-out>                    summary += mutant_trial.result</system-out>
		</testcase>
		<testcase name="Mutant #84" file="src/poodle/run.py" line="105">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -102,7 +102,7 @@
                     work.echo(&quot;Canceled&quot;)
                 else:
                     mutant_trial: MutantTrial = future.result()
-                    summary += mutant_trial.result
+                    summary -= mutant_trial.result
                 work.echo(
                     f&quot;COMPLETED {summary.tested:&gt;4}/{summary.trials:&lt;4}&quot;
                     f&quot;\tFOUND {summary.found:&gt;4}&quot;
</failure>
			<system-out>                    summary += mutant_trial.result</system-out>
		</testcase>
		<testcase name="Mutant #85" file="src/poodle/run.py" line="107">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -104,7 +104,7 @@
                     mutant_trial: MutantTrial = future.result()
                     summary += mutant_trial.result
                 work.echo(
-                    f&quot;COMPLETED {summary.tested:&gt;4}/{summary.trials:&lt;4}&quot;
+                    f&quot;XXCOMPLETED {summary.tested:&gt;4}/{summary.trials:&lt;4}XX&quot;
                     f&quot;\tFOUND {summary.found:&gt;4}&quot;
                     f&quot;\tNOT FOUND {summary.not_found:&gt;4}&quot;
                     f&quot;\tTIMEOUT {summary.timeout:&gt;4}&quot;
</failure>
			<system-out>                    f&quot;COMPLETED {summary.tested:&gt;4}/{summary.trials:&lt;4}&quot;</system-out>
		</testcase>
		<testcase name="Mutant #86" file="src/poodle/run.py" line="108">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -105,7 +105,7 @@
                     summary += mutant_trial.result
                 work.echo(
                     f&quot;COMPLETED {summary.tested:&gt;4}/{summary.trials:&lt;4}&quot;
-                    f&quot;\tFOUND {summary.found:&gt;4}&quot;
+                    f&quot;XX\tFOUND {summary.found:&gt;4}XX&quot;
                     f&quot;\tNOT FOUND {summary.not_found:&gt;4}&quot;
                     f&quot;\tTIMEOUT {summary.timeout:&gt;4}&quot;
                     f&quot;\tERRORS {summary.errors:&gt;4}&quot;,
</failure>
			<system-out>                    f&quot;\tFOUND {summary.found:&gt;4}&quot;</system-out>
		</testcase>
		<testcase name="Mutant #87" file="src/poodle/run.py" line="109">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -106,7 +106,7 @@
                 work.echo(
                     f&quot;COMPLETED {summary.tested:&gt;4}/{summary.trials:&lt;4}&quot;
                     f&quot;\tFOUND {summary.found:&gt;4}&quot;
-                    f&quot;\tNOT FOUND {summary.not_found:&gt;4}&quot;
+                    f&quot;XX\tNOT FOUND {summary.not_found:&gt;4}XX&quot;
                     f&quot;\tTIMEOUT {summary.timeout:&gt;4}&quot;
                     f&quot;\tERRORS {summary.errors:&gt;4}&quot;,
                 )
</failure>
			<system-out>                    f&quot;\tNOT FOUND {summary.not_found:&gt;4}&quot;</system-out>
		</testcase>
		<testcase name="Mutant #88" file="src/poodle/run.py" line="110">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -107,7 +107,7 @@
                     f&quot;COMPLETED {summary.tested:&gt;4}/{summary.trials:&lt;4}&quot;
                     f&quot;\tFOUND {summary.found:&gt;4}&quot;
                     f&quot;\tNOT FOUND {summary.not_found:&gt;4}&quot;
-                    f&quot;\tTIMEOUT {summary.timeout:&gt;4}&quot;
+                    f&quot;XX\tTIMEOUT {summary.timeout:&gt;4}XX&quot;
                     f&quot;\tERRORS {summary.errors:&gt;4}&quot;,
                 )
         except KeyboardInterrupt:
</failure>
			<system-out>                    f&quot;\tTIMEOUT {summary.timeout:&gt;4}&quot;</system-out>
		</testcase>
		<testcase name="Mutant #89" file="src/poodle/run.py" line="111">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -108,7 +108,7 @@
                     f&quot;\tFOUND {summary.found:&gt;4}&quot;
                     f&quot;\tNOT FOUND {summary.not_found:&gt;4}&quot;
                     f&quot;\tTIMEOUT {summary.timeout:&gt;4}&quot;
-                    f&quot;\tERRORS {summary.errors:&gt;4}&quot;,
+                    f&quot;XX\tERRORS {summary.errors:&gt;4}XX&quot;,
                 )
         except KeyboardInterrupt:
             work.echo(&quot;Received Keyboard Interrupt.  Cancelling Remaining Trials.&quot;)
</failure>
			<system-out>                    f&quot;\tERRORS {summary.errors:&gt;4}&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #90" file="src/poodle/run.py" line="114">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -111,7 +111,7 @@
                     f&quot;\tERRORS {summary.errors:&gt;4}&quot;,
                 )
         except KeyboardInterrupt:
-            work.echo(&quot;Received Keyboard Interrupt.  Cancelling Remaining Trials.&quot;)
+            work.echo(&quot;XXReceived Keyboard Interrupt.  Cancelling Remaining Trials.XX&quot;)
             executor.shutdown(wait=True, cancel_futures=True)
             raise
 
</failure>
			<system-out>            work.echo(&quot;Received Keyboard Interrupt.  Cancelling Remaining Trials.&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #91" file="src/poodle/run.py" line="115">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -112,7 +112,7 @@
                 )
         except KeyboardInterrupt:
             work.echo(&quot;Received Keyboard Interrupt.  Cancelling Remaining Trials.&quot;)
-            executor.shutdown(wait=True, cancel_futures=True)
+            executor.shutdown(wait=False, cancel_futures=True)
             raise
 
     logger.info(&quot;Elapsed Time %.2f s&quot;, time.time() - start)
</failure>
			<system-out>            executor.shutdown(wait=True, cancel_futures=True)</system-out>
		</testcase>
		<testcase name="Mutant #92" file="src/poodle/run.py" line="115">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -112,7 +112,7 @@
                 )
         except KeyboardInterrupt:
             work.echo(&quot;Received Keyboard Interrupt.  Cancelling Remaining Trials.&quot;)
-            executor.shutdown(wait=True, cancel_futures=True)
+            executor.shutdown(wait=True, cancel_futures=False)
             raise
 
     logger.info(&quot;Elapsed Time %.2f s&quot;, time.time() - start)
</failure>
			<system-out>            executor.shutdown(wait=True, cancel_futures=True)</system-out>
		</testcase>
		<testcase name="Mutant #93" file="src/poodle/run.py" line="118">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -115,7 +115,7 @@
             executor.shutdown(wait=True, cancel_futures=True)
             raise
 
-    logger.info(&quot;Elapsed Time %.2f s&quot;, time.time() - start)
+    logger.info(&quot;XXElapsed Time %.2f sXX&quot;, time.time() - start)
 
     return TestingResults(
         mutant_trials=[future.result() for future in futures],
</failure>
			<system-out>    logger.info(&quot;Elapsed Time %.2f s&quot;, time.time() - start)</system-out>
		</testcase>
		<testcase name="Mutant #94" file="src/poodle/run.py" line="118">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -115,7 +115,7 @@
             executor.shutdown(wait=True, cancel_futures=True)
             raise
 
-    logger.info(&quot;Elapsed Time %.2f s&quot;, time.time() - start)
+    logger.info(&quot;Elapsed Time %.2f s&quot;, time.time() + start)
 
     return TestingResults(
         mutant_trials=[future.result() for future in futures],
</failure>
			<system-out>    logger.info(&quot;Elapsed Time %.2f s&quot;, time.time() - start)</system-out>
		</testcase>
		<testcase name="Mutant #95" file="src/poodle/run.py" line="144">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -141,7 +141,7 @@
     Delete the Run Folder.
     Return MutantTrial with result data.
     &quot;&quot;&quot;
-    start = time.time()
+    start = None
     logging.basicConfig(format=config.log_format, level=config.log_level)
 
     logger.debug(
</failure>
			<system-out>    start = time.time()</system-out>
		</testcase>
		<testcase name="Mutant #96" file="src/poodle/run.py" line="148">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -145,7 +145,7 @@
     logging.basicConfig(format=config.log_format, level=config.log_level)
 
     logger.debug(
-        &quot;SETUP: run_id=%s folder_zip=%s file=%s:%s text='%s'&quot;,
+        &quot;XXSETUP: run_id=%s folder_zip=%s file=%s:%s text='%s'XX&quot;,
         run_id,
         folder_zip,
         mutant.source_file,
</failure>
			<system-out>        &quot;SETUP: run_id=%s folder_zip=%s file=%s:%s text='%s'&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #97" file="src/poodle/run.py" line="156">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -153,7 +153,7 @@
         mutant.text,
     )
 
-    run_folder = config.work_folder / (&quot;run-&quot; + run_id)
+    run_folder = config.work_folder * (&quot;run-&quot; + run_id)
     run_folder.mkdir()
 
     with ZipFile(folder_zip, &quot;r&quot;) as zip_file:
</failure>
			<system-out>    run_folder = config.work_folder / (&quot;run-&quot; + run_id)</system-out>
		</testcase>
		<testcase name="Mutant #98" file="src/poodle/run.py" line="156">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -153,7 +153,7 @@
         mutant.text,
     )
 
-    run_folder = config.work_folder / (&quot;run-&quot; + run_id)
+    run_folder = config.work_folder / (&quot;XXrun-XX&quot; + run_id)
     run_folder.mkdir()
 
     with ZipFile(folder_zip, &quot;r&quot;) as zip_file:
</failure>
			<system-out>    run_folder = config.work_folder / (&quot;run-&quot; + run_id)</system-out>
		</testcase>
		<testcase name="Mutant #99" file="src/poodle/run.py" line="156">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -153,7 +153,7 @@
         mutant.text,
     )
 
-    run_folder = config.work_folder / (&quot;run-&quot; + run_id)
+    run_folder = config.work_folder / (&quot;run-&quot; - run_id)
     run_folder.mkdir()
 
     with ZipFile(folder_zip, &quot;r&quot;) as zip_file:
</failure>
			<system-out>    run_folder = config.work_folder / (&quot;run-&quot; + run_id)</system-out>
		</testcase>
		<testcase name="Mutant #100" file="src/poodle/run.py" line="156">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -153,7 +153,7 @@
         mutant.text,
     )
 
-    run_folder = config.work_folder / (&quot;run-&quot; + run_id)
+    run_folder = None
     run_folder.mkdir()
 
     with ZipFile(folder_zip, &quot;r&quot;) as zip_file:
</failure>
			<system-out>    run_folder = config.work_folder / (&quot;run-&quot; + run_id)</system-out>
		</testcase>
		<testcase name="Mutant #101" file="src/poodle/run.py" line="159">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -156,7 +156,7 @@
     run_folder = config.work_folder / (&quot;run-&quot; + run_id)
     run_folder.mkdir()
 
-    with ZipFile(folder_zip, &quot;r&quot;) as zip_file:
+    with ZipFile(folder_zip, &quot;XXrXX&quot;) as zip_file:
         zip_file.extractall(run_folder)
 
     if mutant.source_file:
</failure>
			<system-out>    with ZipFile(folder_zip, &quot;r&quot;) as zip_file:</system-out>
		</testcase>
		<testcase name="Mutant #102" file="src/poodle/run.py" line="163">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -160,7 +160,7 @@
         zip_file.extractall(run_folder)
 
     if mutant.source_file:
-        target_file = Path(run_folder / mutant.source_file)
+        target_file = Path(run_folder * mutant.source_file)
         file_lines = target_file.read_text(&quot;utf-8&quot;).splitlines(keepends=True)
         file_lines = mutate_lines(mutant, file_lines)
         target_file.write_text(data=&quot;&quot;.join(file_lines), encoding=&quot;utf-8&quot;)
</failure>
			<system-out>        target_file = Path(run_folder / mutant.source_file)</system-out>
		</testcase>
		<testcase name="Mutant #103" file="src/poodle/run.py" line="163">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -160,7 +160,7 @@
         zip_file.extractall(run_folder)
 
     if mutant.source_file:
-        target_file = Path(run_folder / mutant.source_file)
+        target_file = None
         file_lines = target_file.read_text(&quot;utf-8&quot;).splitlines(keepends=True)
         file_lines = mutate_lines(mutant, file_lines)
         target_file.write_text(data=&quot;&quot;.join(file_lines), encoding=&quot;utf-8&quot;)
</failure>
			<system-out>        target_file = Path(run_folder / mutant.source_file)</system-out>
		</testcase>
		<testcase name="Mutant #104" file="src/poodle/run.py" line="164">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -161,7 +161,7 @@
 
     if mutant.source_file:
         target_file = Path(run_folder / mutant.source_file)
-        file_lines = target_file.read_text(&quot;utf-8&quot;).splitlines(keepends=True)
+        file_lines = target_file.read_text(&quot;XXutf-8XX&quot;).splitlines(keepends=True)
         file_lines = mutate_lines(mutant, file_lines)
         target_file.write_text(data=&quot;&quot;.join(file_lines), encoding=&quot;utf-8&quot;)
 
</failure>
			<system-out>        file_lines = target_file.read_text(&quot;utf-8&quot;).splitlines(keepends=True)</system-out>
		</testcase>
		<testcase name="Mutant #105" file="src/poodle/run.py" line="164">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -161,7 +161,7 @@
 
     if mutant.source_file:
         target_file = Path(run_folder / mutant.source_file)
-        file_lines = target_file.read_text(&quot;utf-8&quot;).splitlines(keepends=True)
+        file_lines = target_file.read_text(&quot;utf-8&quot;).splitlines(keepends=False)
         file_lines = mutate_lines(mutant, file_lines)
         target_file.write_text(data=&quot;&quot;.join(file_lines), encoding=&quot;utf-8&quot;)
 
</failure>
			<system-out>        file_lines = target_file.read_text(&quot;utf-8&quot;).splitlines(keepends=True)</system-out>
		</testcase>
		<testcase name="Mutant #106" file="src/poodle/run.py" line="164">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -161,7 +161,7 @@
 
     if mutant.source_file:
         target_file = Path(run_folder / mutant.source_file)
-        file_lines = target_file.read_text(&quot;utf-8&quot;).splitlines(keepends=True)
+        file_lines = None
         file_lines = mutate_lines(mutant, file_lines)
         target_file.write_text(data=&quot;&quot;.join(file_lines), encoding=&quot;utf-8&quot;)
 
</failure>
			<system-out>        file_lines = target_file.read_text(&quot;utf-8&quot;).splitlines(keepends=True)</system-out>
		</testcase>
		<testcase name="Mutant #107" file="src/poodle/run.py" line="165">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -162,7 +162,7 @@
     if mutant.source_file:
         target_file = Path(run_folder / mutant.source_file)
         file_lines = target_file.read_text(&quot;utf-8&quot;).splitlines(keepends=True)
-        file_lines = mutate_lines(mutant, file_lines)
+        file_lines = None
         target_file.write_text(data=&quot;&quot;.join(file_lines), encoding=&quot;utf-8&quot;)
 
     logger.debug(&quot;START: run_id=%s&quot;, run_id)
</failure>
			<system-out>        file_lines = mutate_lines(mutant, file_lines)</system-out>
		</testcase>
		<testcase name="Mutant #108" file="src/poodle/run.py" line="166">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -163,7 +163,7 @@
         target_file = Path(run_folder / mutant.source_file)
         file_lines = target_file.read_text(&quot;utf-8&quot;).splitlines(keepends=True)
         file_lines = mutate_lines(mutant, file_lines)
-        target_file.write_text(data=&quot;&quot;.join(file_lines), encoding=&quot;utf-8&quot;)
+        target_file.write_text(data=&quot;XXXX&quot;.join(file_lines), encoding=&quot;utf-8&quot;)
 
     logger.debug(&quot;START: run_id=%s&quot;, run_id)
 
</failure>
			<system-out>        target_file.write_text(data=&quot;&quot;.join(file_lines), encoding=&quot;utf-8&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #109" file="src/poodle/run.py" line="166">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -163,7 +163,7 @@
         target_file = Path(run_folder / mutant.source_file)
         file_lines = target_file.read_text(&quot;utf-8&quot;).splitlines(keepends=True)
         file_lines = mutate_lines(mutant, file_lines)
-        target_file.write_text(data=&quot;&quot;.join(file_lines), encoding=&quot;utf-8&quot;)
+        target_file.write_text(data=&quot;&quot;.join(file_lines), encoding=&quot;XXutf-8XX&quot;)
 
     logger.debug(&quot;START: run_id=%s&quot;, run_id)
 
</failure>
			<system-out>        target_file.write_text(data=&quot;&quot;.join(file_lines), encoding=&quot;utf-8&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #110" file="src/poodle/run.py" line="168">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -165,7 +165,7 @@
         file_lines = mutate_lines(mutant, file_lines)
         target_file.write_text(data=&quot;&quot;.join(file_lines), encoding=&quot;utf-8&quot;)
 
-    logger.debug(&quot;START: run_id=%s&quot;, run_id)
+    logger.debug(&quot;XXSTART: run_id=%sXX&quot;, run_id)
 
     result: MutantTrialResult = runner(
         config=config,
</failure>
			<system-out>    logger.debug(&quot;START: run_id=%s&quot;, run_id)</system-out>
		</testcase>
		<testcase name="Mutant #111" file="src/poodle/run.py" line="176">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -167,13 +167,7 @@
 
     logger.debug(&quot;START: run_id=%s&quot;, run_id)
 
-    result: MutantTrialResult = runner(
-        config=config,
-        echo=echo,
-        run_folder=run_folder,
-        mutant=mutant,
-        timeout=timeout,
-    )
+    result: MutantTrialResult = None
 
     shutil.rmtree(run_folder)
 
</failure>
			<system-out>    )</system-out>
		</testcase>
		<testcase name="Mutant #112" file="src/poodle/run.py" line="180">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -177,7 +177,7 @@
 
     shutil.rmtree(run_folder)
 
-    duration = time.time() - start
+    duration = time.time() + start
     logger.debug(&quot;END: run_id=%s - Elapsed Time %.2f s&quot;, run_id, duration)
 
     return MutantTrial(mutant=mutant, result=result, duration=duration)
</failure>
			<system-out>    duration = time.time() - start</system-out>
		</testcase>
		<testcase name="Mutant #113" file="src/poodle/run.py" line="180">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -177,7 +177,7 @@
 
     shutil.rmtree(run_folder)
 
-    duration = time.time() - start
+    duration = None
     logger.debug(&quot;END: run_id=%s - Elapsed Time %.2f s&quot;, run_id, duration)
 
     return MutantTrial(mutant=mutant, result=result, duration=duration)
</failure>
			<system-out>    duration = time.time() - start</system-out>
		</testcase>
		<testcase name="Mutant #114" file="src/poodle/run.py" line="181">
			<failure type="failure" message="bad_survived">--- src/poodle/run.py
+++ src/poodle/run.py
@@ -178,7 +178,7 @@
     shutil.rmtree(run_folder)
 
     duration = time.time() - start
-    logger.debug(&quot;END: run_id=%s - Elapsed Time %.2f s&quot;, run_id, duration)
+    logger.debug(&quot;XXEND: run_id=%s - Elapsed Time %.2f sXX&quot;, run_id, duration)
 
     return MutantTrial(mutant=mutant, result=result, duration=duration)
 
</failure>
			<system-out>    logger.debug(&quot;END: run_id=%s - Elapsed Time %.2f s&quot;, run_id, duration)</system-out>
		</testcase>
		<testcase name="Mutant #115" file="src/poodle/__init__.py" line="26">
			<failure type="failure" message="bad_survived">--- src/poodle/__init__.py
+++ src/poodle/__init__.py
@@ -23,7 +23,7 @@
     import tomli as tomllib  # type: ignore [no-redef]
 
 
-poodle_config: Any = None
+poodle_config: Any = &quot;&quot;
 with suppress(ImportError):
     sys.path.append(str(Path.cwd()))
     poodle_config = importlib.import_module(&quot;poodle_config&quot;)
</failure>
			<system-out>poodle_config: Any = None</system-out>
		</testcase>
		<testcase name="Mutant #116" file="src/poodle/__init__.py" line="29">
			<failure type="failure" message="bad_survived">--- src/poodle/__init__.py
+++ src/poodle/__init__.py
@@ -26,5 +26,5 @@
 poodle_config: Any = None
 with suppress(ImportError):
     sys.path.append(str(Path.cwd()))
-    poodle_config = importlib.import_module(&quot;poodle_config&quot;)
+    poodle_config = importlib.import_module(&quot;XXpoodle_configXX&quot;)
 
</failure>
			<system-out>    poodle_config = importlib.import_module(&quot;poodle_config&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #117" file="src/poodle/__init__.py" line="29">
			<failure type="failure" message="bad_survived">--- src/poodle/__init__.py
+++ src/poodle/__init__.py
@@ -26,5 +26,5 @@
 poodle_config: Any = None
 with suppress(ImportError):
     sys.path.append(str(Path.cwd()))
-    poodle_config = importlib.import_module(&quot;poodle_config&quot;)
+    poodle_config = None
 
</failure>
			<system-out>    poodle_config = importlib.import_module(&quot;poodle_config&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #118" file="src/poodle/mutate.py" line="32">
			<system-out>logger = logging.getLogger(__name__)</system-out>
		</testcase>
		<testcase name="Mutant #119" file="src/poodle/mutate.py" line="47">
			<failure type="failure" message="bad_survived">--- src/poodle/mutate.py
+++ src/poodle/mutate.py
@@ -31,20 +31,7 @@
 
 logger = logging.getLogger(__name__)
 
-builtin_mutators = {
-    BinaryOperationMutator.mutator_name: BinaryOperationMutator,
-    AugAssignMutator.mutator_name: AugAssignMutator,
-    UnaryOperationMutator.mutator_name: UnaryOperationMutator,
-    ComparisonMutator.mutator_name: ComparisonMutator,
-    KeywordMutator.mutator_name: KeywordMutator,
-    NumberMutator.mutator_name: NumberMutator,
-    StringMutator.mutator_name: StringMutator,
-    FunctionCallMutator.mutator_name: FunctionCallMutator,
-    DictArrayCallMutator.mutator_name: DictArrayCallMutator,
-    LambdaReturnMutator.mutator_name: LambdaReturnMutator,
-    ReturnMutator.mutator_name: ReturnMutator,
-    DecoratorMutator.mutator_name: DecoratorMutator,
-}
+builtin_mutators = None
 
 
 def initialize_mutators(work: PoodleWork) -&gt; list[Callable | Mutator]:
</failure>
			<system-out>}</system-out>
		</testcase>
		<testcase name="Mutant #120" file="src/poodle/mutate.py" line="53">
			<system-out>        mutator for name, mutator in builtin_mutators.items() if name not in work.config.skip_mutators</system-out>
		</testcase>
		<testcase name="Mutant #121" file="src/poodle/mutate.py" line="54">
			<system-out>    ]</system-out>
		</testcase>
		<testcase name="Mutant #122" file="src/poodle/mutate.py" line="69">
			<system-out>            mutator_def = dynamic_import(mutator_def)</system-out>
		</testcase>
		<testcase name="Mutant #123" file="src/poodle/mutate.py" line="71">
			<system-out>            msg = f&quot;Import failed for mutator '{mutator_def}'&quot;</system-out>
		</testcase>
		<testcase name="Mutant #124" file="src/poodle/mutate.py" line="71">
			<system-out>            msg = f&quot;Import failed for mutator '{mutator_def}'&quot;</system-out>
		</testcase>
		<testcase name="Mutant #125" file="src/poodle/mutate.py" line="74">
			<system-out>    if isinstance(mutator_def, type) and issubclass(mutator_def, Mutator):</system-out>
		</testcase>
		<testcase name="Mutant #126" file="src/poodle/mutate.py" line="77">
			<system-out>    if callable(mutator_def) or isinstance(mutator_def, Mutator):</system-out>
		</testcase>
		<testcase name="Mutant #127" file="src/poodle/mutate.py" line="81">
			<system-out>        f&quot;Unable to create mutator '{mutator_def}' of type={type(mutator_def)}. &quot;</system-out>
		</testcase>
		<testcase name="Mutant #128" file="src/poodle/mutate.py" line="82">
			<system-out>        &quot;Expected String, Callable, Mutator subclass or Mutator subclass instance.&quot;</system-out>
		</testcase>
		<testcase name="Mutant #129" file="src/poodle/mutate.py" line="83">
			<system-out>    )</system-out>
		</testcase>
		<testcase name="Mutant #130" file="src/poodle/mutate.py" line="104">
			<failure type="failure" message="bad_survived">--- src/poodle/mutate.py
+++ src/poodle/mutate.py
@@ -101,7 +101,7 @@
 def get_target_files(work: PoodleWork) -&gt; dict[Path, list[Path]]:
     &quot;&quot;&quot;Create mapping from each source folder to all mutable files in that folder.&quot;&quot;&quot;
     logger.debug(
-        &quot;get_target_files source_folders=%s only_files=%s file_filters=%s&quot;,
+        &quot;XXget_target_files source_folders=%s only_files=%s file_filters=%sXX&quot;,
         work.config.source_folders,
         work.config.only_files,
         work.config.source_folders,
</failure>
			<system-out>        &quot;get_target_files source_folders=%s only_files=%s file_filters=%s&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #131" file="src/poodle/mutate.py" line="110">
			<system-out>        out: dict[Path, list[Path]] = {}</system-out>
		</testcase>
		<testcase name="Mutant #132" file="src/poodle/mutate.py" line="112">
			<system-out>            out[folder] = []</system-out>
		</testcase>
		<testcase name="Mutant #133" file="src/poodle/mutate.py" line="114">
			<system-out>                out[folder] += list(folder.rglob(glob))</system-out>
		</testcase>
		<testcase name="Mutant #134" file="src/poodle/mutate.py" line="114">
			<system-out>                out[folder] += list(folder.rglob(glob))</system-out>
		</testcase>
		<testcase name="Mutant #135" file="src/poodle/mutate.py" line="118">
			<system-out>            &quot;*.py&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #136" file="src/poodle/mutate.py" line="134">
			<system-out>    logger.debug(&quot;Create Mutants for file %s&quot;, file)</system-out>
		</testcase>
		<testcase name="Mutant #137" file="src/poodle/mutate.py" line="136">
			<system-out>    parsed_ast = ast.parse(file.read_bytes(), file)</system-out>
		</testcase>
		<testcase name="Mutant #138" file="src/poodle/mutate.py" line="137">
			<failure type="failure" message="bad_survived">--- src/poodle/mutate.py
+++ src/poodle/mutate.py
@@ -134,7 +134,7 @@
     logger.debug(&quot;Create Mutants for file %s&quot;, file)
 
     parsed_ast = ast.parse(file.read_bytes(), file)
-    file_lines = file.read_text(&quot;utf-8&quot;).splitlines()
+    file_lines = file.read_text(&quot;XXutf-8XX&quot;).splitlines()
 
     def call_mutator(mutator: Callable | Mutator) -&gt; list[FileMutation]:
         if isinstance(mutator, Mutator):
</failure>
			<system-out>    file_lines = file.read_text(&quot;utf-8&quot;).splitlines()</system-out>
		</testcase>
		<testcase name="Mutant #139" file="src/poodle/mutate.py" line="137">
			<system-out>    file_lines = file.read_text(&quot;utf-8&quot;).splitlines()</system-out>
		</testcase>
		<testcase name="Mutant #140" file="src/poodle/mutate.py" line="141">
			<system-out>            return mutator.create_mutations(parsed_ast=deepcopy(parsed_ast), file_lines=deepcopy(file_lines))</system-out>
		</testcase>
		<testcase name="Mutant #141" file="src/poodle/mutate.py" line="141">
			<system-out>            return mutator.create_mutations(parsed_ast=deepcopy(parsed_ast), file_lines=deepcopy(file_lines))</system-out>
		</testcase>
		<testcase name="Mutant #142" file="src/poodle/mutate.py" line="142">
			<system-out>        return mutator(config=work.config, parsed_ast=deepcopy(parsed_ast), file_lines=deepcopy(file_lines))</system-out>
		</testcase>
		<testcase name="Mutant #143" file="src/poodle/mutate.py" line="142">
			<system-out>        return mutator(config=work.config, parsed_ast=deepcopy(parsed_ast), file_lines=deepcopy(file_lines))</system-out>
		</testcase>
		<testcase name="Mutant #144" file="src/poodle/mutate.py" line="144">
			<system-out>    mutant_nested_list = [call_mutator(mutator) for mutator in work.mutators]</system-out>
		</testcase>
		<testcase name="Mutant #145" file="src/poodle/mutate.py" line="145">
			<system-out>    file_mutants = [mutant for mutant_list in mutant_nested_list if mutant_list for mutant in mutant_list]</system-out>
		</testcase>
		<testcase name="Mutant #146" file="src/poodle/mutate.py" line="147">
			<system-out>    line_filters = parse_filters(file_lines)</system-out>
		</testcase>
		<testcase name="Mutant #147" file="src/poodle/mutate.py" line="148">
			<system-out>    file_mutants = [mut for mut in file_mutants if not is_filtered(line_filters, mut)]</system-out>
		</testcase>
		<testcase name="Mutant #148" file="src/poodle/mutate.py" line="148">
			<system-out>    file_mutants = [mut for mut in file_mutants if not is_filtered(line_filters, mut)]</system-out>
		</testcase>
		<testcase name="Mutant #149" file="src/poodle/mutate.py" line="166">
			<system-out>    line_filters: dict[int, set[str]] = {}</system-out>
		</testcase>
		<testcase name="Mutant #150" file="src/poodle/mutate.py" line="168">
			<system-out>    for lineno, line in enumerate(file_lines, start=1):</system-out>
		</testcase>
		<testcase name="Mutant #151" file="src/poodle/mutate.py" line="169">
			<system-out>        if re.search(r&quot;#\s*pragma:\s*no mutate[\s#$]*&quot;, line):</system-out>
		</testcase>
		<testcase name="Mutant #152" file="src/poodle/mutate.py" line="170">
			<system-out>            add_line_filter(line_filters, lineno, &quot;all&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #153" file="src/poodle/mutate.py" line="171">
			<system-out>        no_mut_filter: list[str] = re.findall(r&quot;#\s*nomut:?\s*([A-Za-z0-9,\s]*)[#$]*&quot;, line)</system-out>
		</testcase>
		<testcase name="Mutant #154" file="src/poodle/mutate.py" line="171">
			<system-out>        no_mut_filter: list[str] = re.findall(r&quot;#\s*nomut:?\s*([A-Za-z0-9,\s]*)[#$]*&quot;, line)</system-out>
		</testcase>
		<testcase name="Mutant #155" file="src/poodle/mutate.py" line="173">
			<system-out>            for mutator in mutators.split(&quot;,&quot;):</system-out>
		</testcase>
		<testcase name="Mutant #156" file="src/poodle/mutate.py" line="181">
			<system-out>    if lineno not in line_filters:</system-out>
		</testcase>
		<testcase name="Mutant #157" file="src/poodle/mutate.py" line="182">
			<system-out>        line_filters[lineno] = set()</system-out>
		</testcase>
		<testcase name="Mutant #158" file="src/poodle/mutate.py" line="183">
			<system-out>    line_filters[lineno].add(&quot;all&quot; if mutator == &quot;&quot; else mutator.lower())</system-out>
		</testcase>
		<testcase name="Mutant #159" file="src/poodle/mutate.py" line="183">
			<system-out>    line_filters[lineno].add(&quot;all&quot; if mutator == &quot;&quot; else mutator.lower())</system-out>
		</testcase>
		<testcase name="Mutant #160" file="src/poodle/mutate.py" line="183">
			<system-out>    line_filters[lineno].add(&quot;all&quot; if mutator == &quot;&quot; else mutator.lower())</system-out>
		</testcase>
		<testcase name="Mutant #161" file="src/poodle/mutate.py" line="188">
			<system-out>    for lineno in range(file_mutant.lineno, file_mutant.end_lineno + 1):</system-out>
		</testcase>
		<testcase name="Mutant #162" file="src/poodle/mutate.py" line="188">
			<system-out>    for lineno in range(file_mutant.lineno, file_mutant.end_lineno + 1):</system-out>
		</testcase>
		<testcase name="Mutant #163" file="src/poodle/mutate.py" line="189">
			<system-out>        if lineno in line_filters and (</system-out>
		</testcase>
		<testcase name="Mutant #164" file="src/poodle/mutate.py" line="190">
			<system-out>            &quot;all&quot; in line_filters[lineno] or file_mutant.mutator_name.lower() in line_filters[lineno]</system-out>
		</testcase>
		<testcase name="Mutant #165" file="src/poodle/mutate.py" line="190">
			<system-out>            &quot;all&quot; in line_filters[lineno] or file_mutant.mutator_name.lower() in line_filters[lineno]</system-out>
		</testcase>
		<testcase name="Mutant #166" file="src/poodle/mutate.py" line="190">
			<system-out>            &quot;all&quot; in line_filters[lineno] or file_mutant.mutator_name.lower() in line_filters[lineno]</system-out>
		</testcase>
		<testcase name="Mutant #167" file="src/poodle/mutate.py" line="190">
			<system-out>            &quot;all&quot; in line_filters[lineno] or file_mutant.mutator_name.lower() in line_filters[lineno]</system-out>
		</testcase>
		<testcase name="Mutant #168" file="src/poodle/mutate.py" line="191">
			<system-out>        ):</system-out>
		</testcase>
		<testcase name="Mutant #169" file="src/poodle/mutate.py" line="192">
			<system-out>            return True</system-out>
		</testcase>
		<testcase name="Mutant #170" file="src/poodle/mutate.py" line="193">
			<system-out>    return False</system-out>
		</testcase>
		<testcase name="Mutant #171" file="src/poodle/mutate.py" line="198">
			<system-out>    mut_lines = deepcopy(file_lines)</system-out>
		</testcase>
		<testcase name="Mutant #172" file="src/poodle/mutate.py" line="198">
			<system-out>    mut_lines = deepcopy(file_lines)</system-out>
		</testcase>
		<testcase name="Mutant #173" file="src/poodle/mutate.py" line="199">
			<system-out>    prefix = mut_lines[mutant.lineno - 1][: mutant.col_offset]</system-out>
		</testcase>
		<testcase name="Mutant #174" file="src/poodle/mutate.py" line="199">
			<failure type="failure" message="bad_survived">--- src/poodle/mutate.py
+++ src/poodle/mutate.py
@@ -196,7 +196,7 @@
 def mutate_lines(mutant: Mutant, file_lines: list[str]) -&gt; list[str]:
     &quot;&quot;&quot;Apply mutation to list of lines from file.&quot;&quot;&quot;
     mut_lines = deepcopy(file_lines)
-    prefix = mut_lines[mutant.lineno - 1][: mutant.col_offset]
+    prefix = mut_lines[mutant.lineno - 2][: mutant.col_offset]
     suffix = mut_lines[mutant.end_lineno - 1][mutant.end_col_offset :]
 
     mut_lines[mutant.lineno - 1] = prefix + mutant.text + suffix
</failure>
			<system-out>    prefix = mut_lines[mutant.lineno - 1][: mutant.col_offset]</system-out>
		</testcase>
		<testcase name="Mutant #175" file="src/poodle/mutate.py" line="199">
			<system-out>    prefix = mut_lines[mutant.lineno - 1][: mutant.col_offset]</system-out>
		</testcase>
		<testcase name="Mutant #176" file="src/poodle/mutate.py" line="200">
			<system-out>    suffix = mut_lines[mutant.end_lineno - 1][mutant.end_col_offset :]</system-out>
		</testcase>
		<testcase name="Mutant #177" file="src/poodle/mutate.py" line="200">
			<failure type="failure" message="bad_survived">--- src/poodle/mutate.py
+++ src/poodle/mutate.py
@@ -197,7 +197,7 @@
     &quot;&quot;&quot;Apply mutation to list of lines from file.&quot;&quot;&quot;
     mut_lines = deepcopy(file_lines)
     prefix = mut_lines[mutant.lineno - 1][: mutant.col_offset]
-    suffix = mut_lines[mutant.end_lineno - 1][mutant.end_col_offset :]
+    suffix = mut_lines[mutant.end_lineno - 2][mutant.end_col_offset :]
 
     mut_lines[mutant.lineno - 1] = prefix + mutant.text + suffix
     for _ in range(mutant.lineno, mutant.end_lineno):
</failure>
			<system-out>    suffix = mut_lines[mutant.end_lineno - 1][mutant.end_col_offset :]</system-out>
		</testcase>
		<testcase name="Mutant #178" file="src/poodle/mutate.py" line="200">
			<system-out>    suffix = mut_lines[mutant.end_lineno - 1][mutant.end_col_offset :]</system-out>
		</testcase>
		<testcase name="Mutant #179" file="src/poodle/mutate.py" line="202">
			<system-out>    mut_lines[mutant.lineno - 1] = prefix + mutant.text + suffix</system-out>
		</testcase>
		<testcase name="Mutant #180" file="src/poodle/mutate.py" line="202">
			<failure type="failure" message="bad_survived">--- src/poodle/mutate.py
+++ src/poodle/mutate.py
@@ -199,7 +199,7 @@
     prefix = mut_lines[mutant.lineno - 1][: mutant.col_offset]
     suffix = mut_lines[mutant.end_lineno - 1][mutant.end_col_offset :]
 
-    mut_lines[mutant.lineno - 1] = prefix + mutant.text + suffix
+    mut_lines[mutant.lineno - 2] = prefix + mutant.text + suffix
     for _ in range(mutant.lineno, mutant.end_lineno):
         mut_lines.pop(mutant.lineno)
 
</failure>
			<system-out>    mut_lines[mutant.lineno - 1] = prefix + mutant.text + suffix</system-out>
		</testcase>
		<testcase name="Mutant #181" file="src/poodle/mutate.py" line="202">
			<system-out>    mut_lines[mutant.lineno - 1] = prefix + mutant.text + suffix</system-out>
		</testcase>
		<testcase name="Mutant #182" file="src/poodle/mutate.py" line="202">
			<system-out>    mut_lines[mutant.lineno - 1] = prefix + mutant.text + suffix</system-out>
		</testcase>
		<testcase name="Mutant #183" file="src/poodle/mutate.py" line="202">
			<system-out>    mut_lines[mutant.lineno - 1] = prefix + mutant.text + suffix</system-out>
		</testcase>
		<testcase name="Mutant #184" file="src/poodle/config.py" line="14">
			<system-out>default_log_format = &quot;%(levelname)s [%(process)d] %(name)s.%(funcName)s:%(lineno)d - %(message)s&quot;</system-out>
		</testcase>
		<testcase name="Mutant #185" file="src/poodle/config.py" line="14">
			<system-out>default_log_format = &quot;%(levelname)s [%(process)d] %(name)s.%(funcName)s:%(lineno)d - %(message)s&quot;</system-out>
		</testcase>
		<testcase name="Mutant #186" file="src/poodle/config.py" line="15">
			<system-out>default_log_level = logging.WARN</system-out>
		</testcase>
		<testcase name="Mutant #187" file="src/poodle/config.py" line="17">
			<system-out>default_source_folders = [Path(&quot;src&quot;), Path(&quot;lib&quot;)]</system-out>
		</testcase>
		<testcase name="Mutant #188" file="src/poodle/config.py" line="17">
			<system-out>default_source_folders = [Path(&quot;src&quot;), Path(&quot;lib&quot;)]</system-out>
		</testcase>
		<testcase name="Mutant #189" file="src/poodle/config.py" line="17">
			<system-out>default_source_folders = [Path(&quot;src&quot;), Path(&quot;lib&quot;)]</system-out>
		</testcase>
		<testcase name="Mutant #190" file="src/poodle/config.py" line="18">
			<system-out>default_file_filters = [r&quot;^test_.*\.py&quot;, r&quot;_test\.py$&quot;]</system-out>
		</testcase>
		<testcase name="Mutant #191" file="src/poodle/config.py" line="18">
			<system-out>default_file_filters = [r&quot;^test_.*\.py&quot;, r&quot;_test\.py$&quot;]</system-out>
		</testcase>
		<testcase name="Mutant #192" file="src/poodle/config.py" line="18">
			<system-out>default_file_filters = [r&quot;^test_.*\.py&quot;, r&quot;_test\.py$&quot;]</system-out>
		</testcase>
		<testcase name="Mutant #193" file="src/poodle/config.py" line="19">
			<system-out>default_file_copy_filters = [r&quot;^test_.*\.py&quot;, r&quot;_test\.py$&quot;, r&quot;^\.&quot;, r&quot;^__pycache__$&quot;, r&quot;.*\.egg-info$&quot;]</system-out>
		</testcase>
		<testcase name="Mutant #194" file="src/poodle/config.py" line="19">
			<system-out>default_file_copy_filters = [r&quot;^test_.*\.py&quot;, r&quot;_test\.py$&quot;, r&quot;^\.&quot;, r&quot;^__pycache__$&quot;, r&quot;.*\.egg-info$&quot;]</system-out>
		</testcase>
		<testcase name="Mutant #195" file="src/poodle/config.py" line="19">
			<system-out>default_file_copy_filters = [r&quot;^test_.*\.py&quot;, r&quot;_test\.py$&quot;, r&quot;^\.&quot;, r&quot;^__pycache__$&quot;, r&quot;.*\.egg-info$&quot;]</system-out>
		</testcase>
		<testcase name="Mutant #196" file="src/poodle/config.py" line="19">
			<system-out>default_file_copy_filters = [r&quot;^test_.*\.py&quot;, r&quot;_test\.py$&quot;, r&quot;^\.&quot;, r&quot;^__pycache__$&quot;, r&quot;.*\.egg-info$&quot;]</system-out>
		</testcase>
		<testcase name="Mutant #197" file="src/poodle/config.py" line="19">
			<system-out>default_file_copy_filters = [r&quot;^test_.*\.py&quot;, r&quot;_test\.py$&quot;, r&quot;^\.&quot;, r&quot;^__pycache__$&quot;, r&quot;.*\.egg-info$&quot;]</system-out>
		</testcase>
		<testcase name="Mutant #198" file="src/poodle/config.py" line="19">
			<system-out>default_file_copy_filters = [r&quot;^test_.*\.py&quot;, r&quot;_test\.py$&quot;, r&quot;^\.&quot;, r&quot;^__pycache__$&quot;, r&quot;.*\.egg-info$&quot;]</system-out>
		</testcase>
		<testcase name="Mutant #199" file="src/poodle/config.py" line="20">
			<system-out>default_work_folder = Path(&quot;.poodle-temp&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #200" file="src/poodle/config.py" line="20">
			<system-out>default_work_folder = Path(&quot;.poodle-temp&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #201" file="src/poodle/config.py" line="22">
			<system-out>default_mutator_opts: dict[str, Any] = {}</system-out>
		</testcase>
		<testcase name="Mutant #202" file="src/poodle/config.py" line="24">
			<system-out>default_min_timeout = 10</system-out>
		</testcase>
		<testcase name="Mutant #203" file="src/poodle/config.py" line="24">
			<system-out>default_min_timeout = 10</system-out>
		</testcase>
		<testcase name="Mutant #204" file="src/poodle/config.py" line="25">
			<system-out>default_timeout_multiplier = 10</system-out>
		</testcase>
		<testcase name="Mutant #205" file="src/poodle/config.py" line="25">
			<system-out>default_timeout_multiplier = 10</system-out>
		</testcase>
		<testcase name="Mutant #206" file="src/poodle/config.py" line="26">
			<system-out>default_runner = &quot;command_line&quot;</system-out>
		</testcase>
		<testcase name="Mutant #207" file="src/poodle/config.py" line="26">
			<system-out>default_runner = &quot;command_line&quot;</system-out>
		</testcase>
		<testcase name="Mutant #208" file="src/poodle/config.py" line="27">
			<system-out>default_runner_opts: dict[str, Any] = {&quot;command_line&quot;: &quot;pytest -x --assert=plain -o pythonpath=&quot;}</system-out>
		</testcase>
		<testcase name="Mutant #209" file="src/poodle/config.py" line="27">
			<system-out>default_runner_opts: dict[str, Any] = {&quot;command_line&quot;: &quot;pytest -x --assert=plain -o pythonpath=&quot;}</system-out>
		</testcase>
		<testcase name="Mutant #210" file="src/poodle/config.py" line="27">
			<system-out>default_runner_opts: dict[str, Any] = {&quot;command_line&quot;: &quot;pytest -x --assert=plain -o pythonpath=&quot;}</system-out>
		</testcase>
		<testcase name="Mutant #211" file="src/poodle/config.py" line="29">
			<system-out>default_reporters = [&quot;summary&quot;, &quot;not_found&quot;]</system-out>
		</testcase>
		<testcase name="Mutant #212" file="src/poodle/config.py" line="29">
			<system-out>default_reporters = [&quot;summary&quot;, &quot;not_found&quot;]</system-out>
		</testcase>
		<testcase name="Mutant #213" file="src/poodle/config.py" line="29">
			<system-out>default_reporters = [&quot;summary&quot;, &quot;not_found&quot;]</system-out>
		</testcase>
		<testcase name="Mutant #214" file="src/poodle/config.py" line="30">
			<system-out>default_reporter_opts: dict[str, Any] = {}</system-out>
		</testcase>
		<testcase name="Mutant #215" file="src/poodle/config.py" line="35">
			<system-out>    if hasattr(os, &quot;sched_getaffinity&quot;):</system-out>
		</testcase>
		<testcase name="Mutant #216" file="src/poodle/config.py" line="36">
			<system-out>        return len(os.sched_getaffinity(0)) - 1</system-out>
		</testcase>
		<testcase name="Mutant #217" file="src/poodle/config.py" line="36">
			<system-out>        return len(os.sched_getaffinity(0)) - 1</system-out>
		</testcase>
		<testcase name="Mutant #218" file="src/poodle/config.py" line="36">
			<system-out>        return len(os.sched_getaffinity(0)) - 1</system-out>
		</testcase>
		<testcase name="Mutant #219" file="src/poodle/config.py" line="37">
			<failure type="failure" message="bad_survived">--- src/poodle/config.py
+++ src/poodle/config.py
@@ -34,7 +34,7 @@
     &quot;&quot;&quot;Calculate Default for max_workers as one less than available processors.&quot;&quot;&quot;
     if hasattr(os, &quot;sched_getaffinity&quot;):
         return len(os.sched_getaffinity(0)) - 1
-    cpu_count = os.cpu_count() or 1  # nomut: Number
+    cpu_count = os.cpu_count() or 2  # nomut: Number
     if cpu_count &gt; 1:
         return cpu_count - 1
     return cpu_count
</failure>
			<system-out>    cpu_count = os.cpu_count() or 1  # nomut: Number</system-out>
		</testcase>
		<testcase name="Mutant #220" file="src/poodle/config.py" line="37">
			<system-out>    cpu_count = os.cpu_count() or 1  # nomut: Number</system-out>
		</testcase>
		<testcase name="Mutant #221" file="src/poodle/config.py" line="37">
			<system-out>    cpu_count = os.cpu_count() or 1  # nomut: Number</system-out>
		</testcase>
		<testcase name="Mutant #222" file="src/poodle/config.py" line="38">
			<system-out>    if cpu_count &gt; 1:</system-out>
		</testcase>
		<testcase name="Mutant #223" file="src/poodle/config.py" line="38">
			<system-out>    if cpu_count &gt; 1:</system-out>
		</testcase>
		<testcase name="Mutant #224" file="src/poodle/config.py" line="39">
			<system-out>        return cpu_count - 1</system-out>
		</testcase>
		<testcase name="Mutant #225" file="src/poodle/config.py" line="39">
			<system-out>        return cpu_count - 1</system-out>
		</testcase>
		<testcase name="Mutant #226" file="src/poodle/config.py" line="52">
			<system-out>    config_file_path = get_config_file_path(cmd_config_file)</system-out>
		</testcase>
		<testcase name="Mutant #227" file="src/poodle/config.py" line="53">
			<system-out>    config_file_data = get_config_file_data(config_file_path)</system-out>
		</testcase>
		<testcase name="Mutant #228" file="src/poodle/config.py" line="55">
			<system-out>    log_format = get_str_from_config(&quot;log_format&quot;, config_file_data, default=default_log_format)</system-out>
		</testcase>
		<testcase name="Mutant #229" file="src/poodle/config.py" line="55">
			<system-out>    log_format = get_str_from_config(&quot;log_format&quot;, config_file_data, default=default_log_format)</system-out>
		</testcase>
		<testcase name="Mutant #230" file="src/poodle/config.py" line="56">
			<failure type="failure" message="bad_survived">--- src/poodle/config.py
+++ src/poodle/config.py
@@ -53,7 +53,7 @@
     config_file_data = get_config_file_data(config_file_path)
 
     log_format = get_str_from_config(&quot;log_format&quot;, config_file_data, default=default_log_format)
-    log_level: int | str = get_any_from_config(
+    log_level: int &amp; str = get_any_from_config(
         &quot;log_level&quot;,
         config_file_data,
         default=default_log_level,
</failure>
			<system-out>    log_level: int | str = get_any_from_config(</system-out>
		</testcase>
		<testcase name="Mutant #231" file="src/poodle/config.py" line="57">
			<system-out>        &quot;log_level&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #232" file="src/poodle/config.py" line="61">
			<system-out>    )</system-out>
		</testcase>
		<testcase name="Mutant #233" file="src/poodle/config.py" line="64">
			<system-out>    file_filters = get_str_list_from_config(&quot;file_filters&quot;, config_file_data, default=default_file_filters)</system-out>
		</testcase>
		<testcase name="Mutant #234" file="src/poodle/config.py" line="64">
			<system-out>    file_filters = get_str_list_from_config(&quot;file_filters&quot;, config_file_data, default=default_file_filters)</system-out>
		</testcase>
		<testcase name="Mutant #235" file="src/poodle/config.py" line="65">
			<system-out>    file_filters += get_str_list_from_config(&quot;exclude&quot;, config_file_data, default=[])</system-out>
		</testcase>
		<testcase name="Mutant #236" file="src/poodle/config.py" line="65">
			<system-out>    file_filters += get_str_list_from_config(&quot;exclude&quot;, config_file_data, default=[])</system-out>
		</testcase>
		<testcase name="Mutant #237" file="src/poodle/config.py" line="65">
			<system-out>    file_filters += get_str_list_from_config(&quot;exclude&quot;, config_file_data, default=[])</system-out>
		</testcase>
		<testcase name="Mutant #238" file="src/poodle/config.py" line="66">
			<system-out>    file_filters += cmd_excludes</system-out>
		</testcase>
		<testcase name="Mutant #239" file="src/poodle/config.py" line="66">
			<system-out>    file_filters += cmd_excludes</system-out>
		</testcase>
		<testcase name="Mutant #240" file="src/poodle/config.py" line="71">
			<system-out>        only_files=get_str_list_from_config(&quot;only_files&quot;, config_file_data, default=[], command_line=cmd_only_files),</system-out>
		</testcase>
		<testcase name="Mutant #241" file="src/poodle/config.py" line="74">
			<system-out>            &quot;file_copy_filters&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #242" file="src/poodle/config.py" line="78">
			<system-out>        work_folder=get_path_from_config(&quot;work_folder&quot;, config_file_data, default=default_work_folder),</system-out>
		</testcase>
		<testcase name="Mutant #243" file="src/poodle/config.py" line="80">
			<system-out>            &quot;max_workers&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #244" file="src/poodle/config.py" line="88">
			<system-out>            &quot;echo_enabled&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #245" file="src/poodle/config.py" line="90">
			<system-out>            default=True,</system-out>
		</testcase>
		<testcase name="Mutant #246" file="src/poodle/config.py" line="93">
			<system-out>        mutator_opts=get_dict_from_config(&quot;mutator_opts&quot;, config_file_data, default=default_mutator_opts),</system-out>
		</testcase>
		<testcase name="Mutant #247" file="src/poodle/config.py" line="94">
			<system-out>        skip_mutators=get_str_list_from_config(&quot;skip_mutators&quot;, config_file_data, default=[]),</system-out>
		</testcase>
		<testcase name="Mutant #248" file="src/poodle/config.py" line="95">
			<system-out>        add_mutators=get_any_list_from_config(&quot;add_mutators&quot;, config_file_data),</system-out>
		</testcase>
		<testcase name="Mutant #249" file="src/poodle/config.py" line="96">
			<system-out>        min_timeout=get_int_from_config(&quot;min_timeout&quot;, config_file_data) or default_min_timeout,</system-out>
		</testcase>
		<testcase name="Mutant #250" file="src/poodle/config.py" line="96">
			<system-out>        min_timeout=get_int_from_config(&quot;min_timeout&quot;, config_file_data) or default_min_timeout,</system-out>
		</testcase>
		<testcase name="Mutant #251" file="src/poodle/config.py" line="97">
			<system-out>        timeout_multiplier=get_int_from_config(&quot;timeout_multiplier&quot;, config_file_data) or default_timeout_multiplier,</system-out>
		</testcase>
		<testcase name="Mutant #252" file="src/poodle/config.py" line="97">
			<system-out>        timeout_multiplier=get_int_from_config(&quot;timeout_multiplier&quot;, config_file_data) or default_timeout_multiplier,</system-out>
		</testcase>
		<testcase name="Mutant #253" file="src/poodle/config.py" line="98">
			<system-out>        runner=get_str_from_config(&quot;runner&quot;, config_file_data, default=default_runner),</system-out>
		</testcase>
		<testcase name="Mutant #254" file="src/poodle/config.py" line="99">
			<system-out>        runner_opts=get_dict_from_config(&quot;runner_opts&quot;, config_file_data, default=default_runner_opts),</system-out>
		</testcase>
		<testcase name="Mutant #255" file="src/poodle/config.py" line="100">
			<system-out>        reporters=get_str_list_from_config(&quot;reporters&quot;, config_file_data, default=default_reporters),</system-out>
		</testcase>
		<testcase name="Mutant #256" file="src/poodle/config.py" line="101">
			<system-out>        reporter_opts=get_dict_from_config(&quot;reporter_opts&quot;, config_file_data, default=default_reporter_opts),</system-out>
		</testcase>
		<testcase name="Mutant #257" file="src/poodle/config.py" line="109">
			<system-out>            &quot;q&quot;: logging.ERROR,</system-out>
		</testcase>
		<testcase name="Mutant #258" file="src/poodle/config.py" line="110">
			<system-out>            &quot;v&quot;: logging.INFO,</system-out>
		</testcase>
		<testcase name="Mutant #259" file="src/poodle/config.py" line="111">
			<system-out>            &quot;vv&quot;: logging.DEBUG,</system-out>
		</testcase>
		<testcase name="Mutant #260" file="src/poodle/config.py" line="120">
			<system-out>            &quot;q&quot;: False,</system-out>
		</testcase>
		<testcase name="Mutant #261" file="src/poodle/config.py" line="120">
			<system-out>            &quot;q&quot;: False,</system-out>
		</testcase>
		<testcase name="Mutant #262" file="src/poodle/config.py" line="121">
			<system-out>            &quot;v&quot;: True,</system-out>
		</testcase>
		<testcase name="Mutant #263" file="src/poodle/config.py" line="121">
			<system-out>            &quot;v&quot;: True,</system-out>
		</testcase>
		<testcase name="Mutant #264" file="src/poodle/config.py" line="122">
			<system-out>            &quot;vv&quot;: True,</system-out>
		</testcase>
		<testcase name="Mutant #265" file="src/poodle/config.py" line="122">
			<system-out>            &quot;vv&quot;: True,</system-out>
		</testcase>
		<testcase name="Mutant #266" file="src/poodle/config.py" line="135">
			<system-out>        if not config_file.is_file():</system-out>
		</testcase>
		<testcase name="Mutant #267" file="src/poodle/config.py" line="136">
			<system-out>            msg = f&quot;Config file not found: --config_file='{config_file}'&quot;</system-out>
		</testcase>
		<testcase name="Mutant #268" file="src/poodle/config.py" line="136">
			<system-out>            msg = f&quot;Config file not found: --config_file='{config_file}'&quot;</system-out>
		</testcase>
		<testcase name="Mutant #269" file="src/poodle/config.py" line="141">
			<system-out>        &quot;poodle.toml&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #270" file="src/poodle/config.py" line="142">
			<system-out>        &quot;pyproject.toml&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #271" file="src/poodle/config.py" line="143">
			<system-out>    ]  # TODO: [&quot;poodle.toml&quot;, &quot;tox.ini&quot;, &quot;setup.cfg&quot;, &quot;pyproject.toml&quot;]</system-out>
		</testcase>
		<testcase name="Mutant #272" file="src/poodle/config.py" line="146">
			<system-out>        path = Path(file)</system-out>
		</testcase>
		<testcase name="Mutant #273" file="src/poodle/config.py" line="155">
			<system-out>    if not config_file:</system-out>
		</testcase>
		<testcase name="Mutant #274" file="src/poodle/config.py" line="158">
			<system-out>    if config_file.suffix == &quot;.toml&quot;:</system-out>
		</testcase>
		<testcase name="Mutant #275" file="src/poodle/config.py" line="158">
			<system-out>    if config_file.suffix == &quot;.toml&quot;:</system-out>
		</testcase>
		<testcase name="Mutant #276" file="src/poodle/config.py" line="164">
			<system-out>    msg = f&quot;Config file type not supported: --config_file='{config_file}'&quot;</system-out>
		</testcase>
		<testcase name="Mutant #277" file="src/poodle/config.py" line="164">
			<system-out>    msg = f&quot;Config file type not supported: --config_file='{config_file}'&quot;</system-out>
		</testcase>
		<testcase name="Mutant #278" file="src/poodle/config.py" line="170">
			<system-out>    config_data = tomllib.load(config_file.open(mode=&quot;rb&quot;))</system-out>
		</testcase>
		<testcase name="Mutant #279" file="src/poodle/config.py" line="170">
			<system-out>    config_data = tomllib.load(config_file.open(mode=&quot;rb&quot;))</system-out>
		</testcase>
		<testcase name="Mutant #280" file="src/poodle/config.py" line="171">
			<system-out>    config_data = config_data.get(&quot;tool&quot;, config_data)</system-out>
		</testcase>
		<testcase name="Mutant #281" file="src/poodle/config.py" line="171">
			<system-out>    config_data = config_data.get(&quot;tool&quot;, config_data)</system-out>
		</testcase>
		<testcase name="Mutant #282" file="src/poodle/config.py" line="172">
			<system-out>    return config_data.get(&quot;poodle&quot;, {})</system-out>
		</testcase>
		<testcase name="Mutant #283" file="src/poodle/config.py" line="181">
			<system-out>        option_name=&quot;source_folders&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #284" file="src/poodle/config.py" line="185">
			<system-out>    )</system-out>
		</testcase>
		<testcase name="Mutant #285" file="src/poodle/config.py" line="187">
			<system-out>    if not source_folders:</system-out>
		</testcase>
		<testcase name="Mutant #286" file="src/poodle/config.py" line="188">
			<system-out>        raise PoodleInputError(&quot;No source folder found to mutate.&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #287" file="src/poodle/config.py" line="191">
			<system-out>        if not source.is_dir():</system-out>
		</testcase>
		<testcase name="Mutant #288" file="src/poodle/config.py" line="192">
			<failure type="failure" message="bad_survived">--- src/poodle/config.py
+++ src/poodle/config.py
@@ -189,7 +189,7 @@
 
     for source in source_folders:
         if not source.is_dir():
-            msg = f&quot;Source '{source}' must be a folder.&quot;
+            msg = f&quot;XXSource '{source}' must be a folder.XX&quot;
             raise PoodleInputError(msg)
 
     return source_folders
</failure>
			<system-out>            msg = f&quot;Source '{source}' must be a folder.&quot;</system-out>
		</testcase>
		<testcase name="Mutant #289" file="src/poodle/config.py" line="192">
			<system-out>            msg = f&quot;Source '{source}' must be a folder.&quot;</system-out>
		</testcase>
		<testcase name="Mutant #290" file="src/poodle/config.py" line="208">
			<system-out>    value, _ = get_option_from_config(option_name=option_name, config_data=config_data, command_line=command_line)</system-out>
		</testcase>
		<testcase name="Mutant #291" file="src/poodle/config.py" line="214">
			<system-out>        return value.upper() == &quot;TRUE&quot;</system-out>
		</testcase>
		<testcase name="Mutant #292" file="src/poodle/config.py" line="214">
			<system-out>        return value.upper() == &quot;TRUE&quot;</system-out>
		</testcase>
		<testcase name="Mutant #293" file="src/poodle/config.py" line="229">
			<system-out>    value, source = get_option_from_config(option_name=option_name, config_data=config_data, command_line=command_line)</system-out>
		</testcase>
		<testcase name="Mutant #294" file="src/poodle/config.py" line="231">
			<system-out>    if value is None:</system-out>
		</testcase>
		<testcase name="Mutant #295" file="src/poodle/config.py" line="237">
			<system-out>        msg = f&quot;{option_name} from {source} must be a valid StrPath&quot;</system-out>
		</testcase>
		<testcase name="Mutant #296" file="src/poodle/config.py" line="237">
			<system-out>        msg = f&quot;{option_name} from {source} must be a valid StrPath&quot;</system-out>
		</testcase>
		<testcase name="Mutant #297" file="src/poodle/config.py" line="253">
			<system-out>    default_fix = default or []</system-out>
		</testcase>
		<testcase name="Mutant #298" file="src/poodle/config.py" line="253">
			<system-out>    default_fix = default or []</system-out>
		</testcase>
		<testcase name="Mutant #299" file="src/poodle/config.py" line="254">
			<system-out>    command_line_fix = command_line or ()</system-out>
		</testcase>
		<testcase name="Mutant #300" file="src/poodle/config.py" line="254">
			<system-out>    command_line_fix = command_line or ()</system-out>
		</testcase>
		<testcase name="Mutant #301" file="src/poodle/config.py" line="260">
			<system-out>    )</system-out>
		</testcase>
		<testcase name="Mutant #302" file="src/poodle/config.py" line="262">
			<system-out>    if not values:</system-out>
		</testcase>
		<testcase name="Mutant #303" file="src/poodle/config.py" line="274">
			<system-out>        msg = f&quot;{option_name} from {source} must be a valid Iterable[StrPath]&quot;</system-out>
		</testcase>
		<testcase name="Mutant #304" file="src/poodle/config.py" line="274">
			<system-out>        msg = f&quot;{option_name} from {source} must be a valid Iterable[StrPath]&quot;</system-out>
		</testcase>
		<testcase name="Mutant #305" file="src/poodle/config.py" line="288">
			<system-out>    value, _ = get_option_from_config(option_name=option_name, config_data=config_data, command_line=command_line)</system-out>
		</testcase>
		<testcase name="Mutant #306" file="src/poodle/config.py" line="290">
			<system-out>    if value is None:</system-out>
		</testcase>
		<testcase name="Mutant #307" file="src/poodle/config.py" line="306">
			<system-out>    default_fix = default or []</system-out>
		</testcase>
		<testcase name="Mutant #308" file="src/poodle/config.py" line="306">
			<system-out>    default_fix = default or []</system-out>
		</testcase>
		<testcase name="Mutant #309" file="src/poodle/config.py" line="307">
			<system-out>    command_line_fix = command_line or ()</system-out>
		</testcase>
		<testcase name="Mutant #310" file="src/poodle/config.py" line="307">
			<system-out>    command_line_fix = command_line or ()</system-out>
		</testcase>
		<testcase name="Mutant #311" file="src/poodle/config.py" line="313">
			<system-out>    )</system-out>
		</testcase>
		<testcase name="Mutant #312" file="src/poodle/config.py" line="315">
			<system-out>    if values is None:</system-out>
		</testcase>
		<testcase name="Mutant #313" file="src/poodle/config.py" line="337">
			<system-out>    value, source = get_option_from_config(option_name=option_name, config_data=config_data, command_line=command_line)</system-out>
		</testcase>
		<testcase name="Mutant #314" file="src/poodle/config.py" line="339">
			<system-out>    if value is None:</system-out>
		</testcase>
		<testcase name="Mutant #315" file="src/poodle/config.py" line="345">
			<system-out>        msg = f&quot;{option_name} from {source} must be a valid int&quot;</system-out>
		</testcase>
		<testcase name="Mutant #316" file="src/poodle/config.py" line="345">
			<system-out>        msg = f&quot;{option_name} from {source} must be a valid int&quot;</system-out>
		</testcase>
		<testcase name="Mutant #317" file="src/poodle/config.py" line="352">
			<system-out>    default: str = &quot;&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #318" file="src/poodle/config.py" line="353">
			<system-out>    command_line: str = &quot;&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #319" file="src/poodle/config.py" line="359">
			<system-out>    value, _ = get_option_from_config(option_name=option_name, config_data=config_data, command_line=command_line)</system-out>
		</testcase>
		<testcase name="Mutant #320" file="src/poodle/config.py" line="361">
			<system-out>    if value is None:</system-out>
		</testcase>
		<testcase name="Mutant #321" file="src/poodle/config.py" line="379">
			<system-out>    default_fix = default or []</system-out>
		</testcase>
		<testcase name="Mutant #322" file="src/poodle/config.py" line="379">
			<system-out>    default_fix = default or []</system-out>
		</testcase>
		<testcase name="Mutant #323" file="src/poodle/config.py" line="380">
			<system-out>    command_line_fix = command_line or ()</system-out>
		</testcase>
		<testcase name="Mutant #324" file="src/poodle/config.py" line="380">
			<system-out>    command_line_fix = command_line or ()</system-out>
		</testcase>
		<testcase name="Mutant #325" file="src/poodle/config.py" line="386">
			<system-out>    )</system-out>
		</testcase>
		<testcase name="Mutant #326" file="src/poodle/config.py" line="388">
			<system-out>    if not values:</system-out>
		</testcase>
		<testcase name="Mutant #327" file="src/poodle/config.py" line="397">
			<system-out>        msg = f&quot;{option_name} from {source} must be a valid Iterable[str]&quot;</system-out>
		</testcase>
		<testcase name="Mutant #328" file="src/poodle/config.py" line="397">
			<system-out>        msg = f&quot;{option_name} from {source} must be a valid Iterable[str]&quot;</system-out>
		</testcase>
		<testcase name="Mutant #329" file="src/poodle/config.py" line="414">
			<system-out>    if command_line or command_line is False:</system-out>
		</testcase>
		<testcase name="Mutant #330" file="src/poodle/config.py" line="414">
			<system-out>    if command_line or command_line is False:</system-out>
		</testcase>
		<testcase name="Mutant #331" file="src/poodle/config.py" line="414">
			<system-out>    if command_line or command_line is False:</system-out>
		</testcase>
		<testcase name="Mutant #332" file="src/poodle/config.py" line="415">
			<system-out>        return command_line, &quot;Command Line&quot;</system-out>
		</testcase>
		<testcase name="Mutant #333" file="src/poodle/config.py" line="418">
			<system-out>        return getattr(poodle_config, option_name), &quot;poodle_config.py&quot;</system-out>
		</testcase>
		<testcase name="Mutant #334" file="src/poodle/config.py" line="420">
			<system-out>    if option_name in config_data:</system-out>
		</testcase>
		<testcase name="Mutant #335" file="src/poodle/config.py" line="421">
			<system-out>        return config_data[option_name], &quot;config file&quot;</system-out>
		</testcase>
		<testcase name="Mutant #336" file="src/poodle/config.py" line="439">
			<system-out>    default = default or {}</system-out>
		</testcase>
		<testcase name="Mutant #337" file="src/poodle/config.py" line="439">
			<system-out>    default = default or {}</system-out>
		</testcase>
		<testcase name="Mutant #338" file="src/poodle/config.py" line="440">
			<system-out>    command_line = command_line or {}</system-out>
		</testcase>
		<testcase name="Mutant #339" file="src/poodle/config.py" line="440">
			<system-out>    command_line = command_line or {}</system-out>
		</testcase>
		<testcase name="Mutant #340" file="src/poodle/config.py" line="442">
			<system-out>    option_value = default</system-out>
		</testcase>
		<testcase name="Mutant #341" file="src/poodle/config.py" line="444">
			<system-out>    if option_name in config_data:</system-out>
		</testcase>
		<testcase name="Mutant #342" file="src/poodle/config.py" line="448">
			<system-out>            msg = f&quot;{option_name} in config file must be a valid dict&quot;</system-out>
		</testcase>
		<testcase name="Mutant #343" file="src/poodle/config.py" line="448">
			<system-out>            msg = f&quot;{option_name} in config file must be a valid dict&quot;</system-out>
		</testcase>
		<testcase name="Mutant #344" file="src/poodle/config.py" line="455">
			<system-out>            msg = f&quot;poodle_config.{option_name} must be a valid dict&quot;</system-out>
		</testcase>
		<testcase name="Mutant #345" file="src/poodle/config.py" line="455">
			<system-out>            msg = f&quot;poodle_config.{option_name} must be a valid dict&quot;</system-out>
		</testcase>
		<testcase name="Mutant #346" file="src/poodle/cli.py" line="14">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -11,7 +11,7 @@
 from .config import build_config
 
 CONTEXT_SETTINGS = {
-    &quot;max_content_width&quot;: 200,
+    &quot;XXmax_content_widthXX&quot;: 200,
 }
 
 
</failure>
			<system-out>    &quot;max_content_width&quot;: 200,</system-out>
		</testcase>
		<testcase name="Mutant #347" file="src/poodle/cli.py" line="14">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -11,7 +11,7 @@
 from .config import build_config
 
 CONTEXT_SETTINGS = {
-    &quot;max_content_width&quot;: 200,
+    &quot;max_content_width&quot;: 201,
 }
 
 
</failure>
			<system-out>    &quot;max_content_width&quot;: 200,</system-out>
		</testcase>
		<testcase name="Mutant #348" file="src/poodle/cli.py" line="15">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -10,9 +10,7 @@
 from . import PoodleInputError, core
 from .config import build_config
 
-CONTEXT_SETTINGS = {
-    &quot;max_content_width&quot;: 200,
-}
+CONTEXT_SETTINGS = None
 
 
 @click.command(context_settings=CONTEXT_SETTINGS)
</failure>
			<system-out>}</system-out>
		</testcase>
		<testcase name="Mutant #349" file="src/poodle/cli.py" line="18">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -14,8 +14,6 @@
     &quot;max_content_width&quot;: 200,
 }
 
-
-@click.command(context_settings=CONTEXT_SETTINGS)
 @click.argument(&quot;source&quot;, type=click.Path(exists=True, path_type=Path), nargs=-1)
 @click.option(&quot;-C&quot;, &quot;--config_file&quot;, help=&quot;Configuration File.&quot;, type=click.Path(exists=True, path_type=Path))
 @click.option(&quot;-q&quot;, &quot;verbosity&quot;, help=&quot;Quiet mode: disabled normal output, and loglevel=ERROR&quot;, flag_value=&quot;q&quot;)
</failure>
			<system-out>@click.command(context_settings=CONTEXT_SETTINGS)</system-out>
		</testcase>
		<testcase name="Mutant #350" file="src/poodle/cli.py" line="19">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -16,7 +16,7 @@
 
 
 @click.command(context_settings=CONTEXT_SETTINGS)
-@click.argument(&quot;source&quot;, type=click.Path(exists=True, path_type=Path), nargs=-1)
+@click.argument(&quot;XXsourceXX&quot;, type=click.Path(exists=True, path_type=Path), nargs=-1)
 @click.option(&quot;-C&quot;, &quot;--config_file&quot;, help=&quot;Configuration File.&quot;, type=click.Path(exists=True, path_type=Path))
 @click.option(&quot;-q&quot;, &quot;verbosity&quot;, help=&quot;Quiet mode: disabled normal output, and loglevel=ERROR&quot;, flag_value=&quot;q&quot;)
 @click.option(&quot;-v&quot;, &quot;verbosity&quot;, help=&quot;Verbose mode: loglevel=INFO&quot;, flag_value=&quot;v&quot;)
</failure>
			<system-out>@click.argument(&quot;source&quot;, type=click.Path(exists=True, path_type=Path), nargs=-1)</system-out>
		</testcase>
		<testcase name="Mutant #351" file="src/poodle/cli.py" line="19">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -16,7 +16,7 @@
 
 
 @click.command(context_settings=CONTEXT_SETTINGS)
-@click.argument(&quot;source&quot;, type=click.Path(exists=True, path_type=Path), nargs=-1)
+@click.argument(&quot;source&quot;, type=click.Path(exists=False, path_type=Path), nargs=-1)
 @click.option(&quot;-C&quot;, &quot;--config_file&quot;, help=&quot;Configuration File.&quot;, type=click.Path(exists=True, path_type=Path))
 @click.option(&quot;-q&quot;, &quot;verbosity&quot;, help=&quot;Quiet mode: disabled normal output, and loglevel=ERROR&quot;, flag_value=&quot;q&quot;)
 @click.option(&quot;-v&quot;, &quot;verbosity&quot;, help=&quot;Verbose mode: loglevel=INFO&quot;, flag_value=&quot;v&quot;)
</failure>
			<system-out>@click.argument(&quot;source&quot;, type=click.Path(exists=True, path_type=Path), nargs=-1)</system-out>
		</testcase>
		<testcase name="Mutant #352" file="src/poodle/cli.py" line="19">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -16,7 +16,7 @@
 
 
 @click.command(context_settings=CONTEXT_SETTINGS)
-@click.argument(&quot;source&quot;, type=click.Path(exists=True, path_type=Path), nargs=-1)
+@click.argument(&quot;source&quot;, type=click.Path(exists=True, path_type=Path), nargs=+1)
 @click.option(&quot;-C&quot;, &quot;--config_file&quot;, help=&quot;Configuration File.&quot;, type=click.Path(exists=True, path_type=Path))
 @click.option(&quot;-q&quot;, &quot;verbosity&quot;, help=&quot;Quiet mode: disabled normal output, and loglevel=ERROR&quot;, flag_value=&quot;q&quot;)
 @click.option(&quot;-v&quot;, &quot;verbosity&quot;, help=&quot;Verbose mode: loglevel=INFO&quot;, flag_value=&quot;v&quot;)
</failure>
			<system-out>@click.argument(&quot;source&quot;, type=click.Path(exists=True, path_type=Path), nargs=-1)</system-out>
		</testcase>
		<testcase name="Mutant #353" file="src/poodle/cli.py" line="19">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -16,7 +16,7 @@
 
 
 @click.command(context_settings=CONTEXT_SETTINGS)
-@click.argument(&quot;source&quot;, type=click.Path(exists=True, path_type=Path), nargs=-1)
+@click.argument(&quot;source&quot;, type=click.Path(exists=True, path_type=Path), nargs=-2)
 @click.option(&quot;-C&quot;, &quot;--config_file&quot;, help=&quot;Configuration File.&quot;, type=click.Path(exists=True, path_type=Path))
 @click.option(&quot;-q&quot;, &quot;verbosity&quot;, help=&quot;Quiet mode: disabled normal output, and loglevel=ERROR&quot;, flag_value=&quot;q&quot;)
 @click.option(&quot;-v&quot;, &quot;verbosity&quot;, help=&quot;Verbose mode: loglevel=INFO&quot;, flag_value=&quot;v&quot;)
</failure>
			<system-out>@click.argument(&quot;source&quot;, type=click.Path(exists=True, path_type=Path), nargs=-1)</system-out>
		</testcase>
		<testcase name="Mutant #354" file="src/poodle/cli.py" line="19">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -16,7 +16,7 @@
 
 
 @click.command(context_settings=CONTEXT_SETTINGS)
-@click.argument(&quot;source&quot;, type=click.Path(exists=True, path_type=Path), nargs=-1)
+
 @click.option(&quot;-C&quot;, &quot;--config_file&quot;, help=&quot;Configuration File.&quot;, type=click.Path(exists=True, path_type=Path))
 @click.option(&quot;-q&quot;, &quot;verbosity&quot;, help=&quot;Quiet mode: disabled normal output, and loglevel=ERROR&quot;, flag_value=&quot;q&quot;)
 @click.option(&quot;-v&quot;, &quot;verbosity&quot;, help=&quot;Verbose mode: loglevel=INFO&quot;, flag_value=&quot;v&quot;)
</failure>
			<system-out>@click.argument(&quot;source&quot;, type=click.Path(exists=True, path_type=Path), nargs=-1)</system-out>
		</testcase>
		<testcase name="Mutant #355" file="src/poodle/cli.py" line="20">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -17,7 +17,7 @@
 
 @click.command(context_settings=CONTEXT_SETTINGS)
 @click.argument(&quot;source&quot;, type=click.Path(exists=True, path_type=Path), nargs=-1)
-@click.option(&quot;-C&quot;, &quot;--config_file&quot;, help=&quot;Configuration File.&quot;, type=click.Path(exists=True, path_type=Path))
+@click.option(&quot;XX-CXX&quot;, &quot;--config_file&quot;, help=&quot;Configuration File.&quot;, type=click.Path(exists=True, path_type=Path))
 @click.option(&quot;-q&quot;, &quot;verbosity&quot;, help=&quot;Quiet mode: disabled normal output, and loglevel=ERROR&quot;, flag_value=&quot;q&quot;)
 @click.option(&quot;-v&quot;, &quot;verbosity&quot;, help=&quot;Verbose mode: loglevel=INFO&quot;, flag_value=&quot;v&quot;)
 @click.option(&quot;-vv&quot;, &quot;verbosity&quot;, help=&quot;Very Verbose mode: loglevel=DEBUG&quot;, flag_value=&quot;vv&quot;)
</failure>
			<system-out>@click.option(&quot;-C&quot;, &quot;--config_file&quot;, help=&quot;Configuration File.&quot;, type=click.Path(exists=True, path_type=Path))</system-out>
		</testcase>
		<testcase name="Mutant #356" file="src/poodle/cli.py" line="20">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -17,7 +17,7 @@
 
 @click.command(context_settings=CONTEXT_SETTINGS)
 @click.argument(&quot;source&quot;, type=click.Path(exists=True, path_type=Path), nargs=-1)
-@click.option(&quot;-C&quot;, &quot;--config_file&quot;, help=&quot;Configuration File.&quot;, type=click.Path(exists=True, path_type=Path))
+@click.option(&quot;-C&quot;, &quot;XX--config_fileXX&quot;, help=&quot;Configuration File.&quot;, type=click.Path(exists=True, path_type=Path))
 @click.option(&quot;-q&quot;, &quot;verbosity&quot;, help=&quot;Quiet mode: disabled normal output, and loglevel=ERROR&quot;, flag_value=&quot;q&quot;)
 @click.option(&quot;-v&quot;, &quot;verbosity&quot;, help=&quot;Verbose mode: loglevel=INFO&quot;, flag_value=&quot;v&quot;)
 @click.option(&quot;-vv&quot;, &quot;verbosity&quot;, help=&quot;Very Verbose mode: loglevel=DEBUG&quot;, flag_value=&quot;vv&quot;)
</failure>
			<system-out>@click.option(&quot;-C&quot;, &quot;--config_file&quot;, help=&quot;Configuration File.&quot;, type=click.Path(exists=True, path_type=Path))</system-out>
		</testcase>
		<testcase name="Mutant #357" file="src/poodle/cli.py" line="20">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -17,7 +17,7 @@
 
 @click.command(context_settings=CONTEXT_SETTINGS)
 @click.argument(&quot;source&quot;, type=click.Path(exists=True, path_type=Path), nargs=-1)
-@click.option(&quot;-C&quot;, &quot;--config_file&quot;, help=&quot;Configuration File.&quot;, type=click.Path(exists=True, path_type=Path))
+@click.option(&quot;-C&quot;, &quot;--config_file&quot;, help=&quot;XXConfiguration File.XX&quot;, type=click.Path(exists=True, path_type=Path))
 @click.option(&quot;-q&quot;, &quot;verbosity&quot;, help=&quot;Quiet mode: disabled normal output, and loglevel=ERROR&quot;, flag_value=&quot;q&quot;)
 @click.option(&quot;-v&quot;, &quot;verbosity&quot;, help=&quot;Verbose mode: loglevel=INFO&quot;, flag_value=&quot;v&quot;)
 @click.option(&quot;-vv&quot;, &quot;verbosity&quot;, help=&quot;Very Verbose mode: loglevel=DEBUG&quot;, flag_value=&quot;vv&quot;)
</failure>
			<system-out>@click.option(&quot;-C&quot;, &quot;--config_file&quot;, help=&quot;Configuration File.&quot;, type=click.Path(exists=True, path_type=Path))</system-out>
		</testcase>
		<testcase name="Mutant #358" file="src/poodle/cli.py" line="20">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -17,7 +17,7 @@
 
 @click.command(context_settings=CONTEXT_SETTINGS)
 @click.argument(&quot;source&quot;, type=click.Path(exists=True, path_type=Path), nargs=-1)
-@click.option(&quot;-C&quot;, &quot;--config_file&quot;, help=&quot;Configuration File.&quot;, type=click.Path(exists=True, path_type=Path))
+@click.option(&quot;-C&quot;, &quot;--config_file&quot;, help=&quot;Configuration File.&quot;, type=click.Path(exists=False, path_type=Path))
 @click.option(&quot;-q&quot;, &quot;verbosity&quot;, help=&quot;Quiet mode: disabled normal output, and loglevel=ERROR&quot;, flag_value=&quot;q&quot;)
 @click.option(&quot;-v&quot;, &quot;verbosity&quot;, help=&quot;Verbose mode: loglevel=INFO&quot;, flag_value=&quot;v&quot;)
 @click.option(&quot;-vv&quot;, &quot;verbosity&quot;, help=&quot;Very Verbose mode: loglevel=DEBUG&quot;, flag_value=&quot;vv&quot;)
</failure>
			<system-out>@click.option(&quot;-C&quot;, &quot;--config_file&quot;, help=&quot;Configuration File.&quot;, type=click.Path(exists=True, path_type=Path))</system-out>
		</testcase>
		<testcase name="Mutant #359" file="src/poodle/cli.py" line="20">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -17,7 +17,7 @@
 
 @click.command(context_settings=CONTEXT_SETTINGS)
 @click.argument(&quot;source&quot;, type=click.Path(exists=True, path_type=Path), nargs=-1)
-@click.option(&quot;-C&quot;, &quot;--config_file&quot;, help=&quot;Configuration File.&quot;, type=click.Path(exists=True, path_type=Path))
+
 @click.option(&quot;-q&quot;, &quot;verbosity&quot;, help=&quot;Quiet mode: disabled normal output, and loglevel=ERROR&quot;, flag_value=&quot;q&quot;)
 @click.option(&quot;-v&quot;, &quot;verbosity&quot;, help=&quot;Verbose mode: loglevel=INFO&quot;, flag_value=&quot;v&quot;)
 @click.option(&quot;-vv&quot;, &quot;verbosity&quot;, help=&quot;Very Verbose mode: loglevel=DEBUG&quot;, flag_value=&quot;vv&quot;)
</failure>
			<system-out>@click.option(&quot;-C&quot;, &quot;--config_file&quot;, help=&quot;Configuration File.&quot;, type=click.Path(exists=True, path_type=Path))</system-out>
		</testcase>
		<testcase name="Mutant #360" file="src/poodle/cli.py" line="21">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -18,7 +18,7 @@
 @click.command(context_settings=CONTEXT_SETTINGS)
 @click.argument(&quot;source&quot;, type=click.Path(exists=True, path_type=Path), nargs=-1)
 @click.option(&quot;-C&quot;, &quot;--config_file&quot;, help=&quot;Configuration File.&quot;, type=click.Path(exists=True, path_type=Path))
-@click.option(&quot;-q&quot;, &quot;verbosity&quot;, help=&quot;Quiet mode: disabled normal output, and loglevel=ERROR&quot;, flag_value=&quot;q&quot;)
+@click.option(&quot;XX-qXX&quot;, &quot;verbosity&quot;, help=&quot;Quiet mode: disabled normal output, and loglevel=ERROR&quot;, flag_value=&quot;q&quot;)
 @click.option(&quot;-v&quot;, &quot;verbosity&quot;, help=&quot;Verbose mode: loglevel=INFO&quot;, flag_value=&quot;v&quot;)
 @click.option(&quot;-vv&quot;, &quot;verbosity&quot;, help=&quot;Very Verbose mode: loglevel=DEBUG&quot;, flag_value=&quot;vv&quot;)
 @click.option(&quot;-P&quot;, &quot;--max_workers&quot;, type=int, help=&quot;Maximum number of parallel workers.&quot;)
</failure>
			<system-out>@click.option(&quot;-q&quot;, &quot;verbosity&quot;, help=&quot;Quiet mode: disabled normal output, and loglevel=ERROR&quot;, flag_value=&quot;q&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #361" file="src/poodle/cli.py" line="21">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -18,7 +18,7 @@
 @click.command(context_settings=CONTEXT_SETTINGS)
 @click.argument(&quot;source&quot;, type=click.Path(exists=True, path_type=Path), nargs=-1)
 @click.option(&quot;-C&quot;, &quot;--config_file&quot;, help=&quot;Configuration File.&quot;, type=click.Path(exists=True, path_type=Path))
-@click.option(&quot;-q&quot;, &quot;verbosity&quot;, help=&quot;Quiet mode: disabled normal output, and loglevel=ERROR&quot;, flag_value=&quot;q&quot;)
+@click.option(&quot;-q&quot;, &quot;XXverbosityXX&quot;, help=&quot;Quiet mode: disabled normal output, and loglevel=ERROR&quot;, flag_value=&quot;q&quot;)
 @click.option(&quot;-v&quot;, &quot;verbosity&quot;, help=&quot;Verbose mode: loglevel=INFO&quot;, flag_value=&quot;v&quot;)
 @click.option(&quot;-vv&quot;, &quot;verbosity&quot;, help=&quot;Very Verbose mode: loglevel=DEBUG&quot;, flag_value=&quot;vv&quot;)
 @click.option(&quot;-P&quot;, &quot;--max_workers&quot;, type=int, help=&quot;Maximum number of parallel workers.&quot;)
</failure>
			<system-out>@click.option(&quot;-q&quot;, &quot;verbosity&quot;, help=&quot;Quiet mode: disabled normal output, and loglevel=ERROR&quot;, flag_value=&quot;q&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #362" file="src/poodle/cli.py" line="21">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -18,7 +18,7 @@
 @click.command(context_settings=CONTEXT_SETTINGS)
 @click.argument(&quot;source&quot;, type=click.Path(exists=True, path_type=Path), nargs=-1)
 @click.option(&quot;-C&quot;, &quot;--config_file&quot;, help=&quot;Configuration File.&quot;, type=click.Path(exists=True, path_type=Path))
-@click.option(&quot;-q&quot;, &quot;verbosity&quot;, help=&quot;Quiet mode: disabled normal output, and loglevel=ERROR&quot;, flag_value=&quot;q&quot;)
+@click.option(&quot;-q&quot;, &quot;verbosity&quot;, help=&quot;XXQuiet mode: disabled normal output, and loglevel=ERRORXX&quot;, flag_value=&quot;q&quot;)
 @click.option(&quot;-v&quot;, &quot;verbosity&quot;, help=&quot;Verbose mode: loglevel=INFO&quot;, flag_value=&quot;v&quot;)
 @click.option(&quot;-vv&quot;, &quot;verbosity&quot;, help=&quot;Very Verbose mode: loglevel=DEBUG&quot;, flag_value=&quot;vv&quot;)
 @click.option(&quot;-P&quot;, &quot;--max_workers&quot;, type=int, help=&quot;Maximum number of parallel workers.&quot;)
</failure>
			<system-out>@click.option(&quot;-q&quot;, &quot;verbosity&quot;, help=&quot;Quiet mode: disabled normal output, and loglevel=ERROR&quot;, flag_value=&quot;q&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #363" file="src/poodle/cli.py" line="21">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -18,7 +18,7 @@
 @click.command(context_settings=CONTEXT_SETTINGS)
 @click.argument(&quot;source&quot;, type=click.Path(exists=True, path_type=Path), nargs=-1)
 @click.option(&quot;-C&quot;, &quot;--config_file&quot;, help=&quot;Configuration File.&quot;, type=click.Path(exists=True, path_type=Path))
-@click.option(&quot;-q&quot;, &quot;verbosity&quot;, help=&quot;Quiet mode: disabled normal output, and loglevel=ERROR&quot;, flag_value=&quot;q&quot;)
+@click.option(&quot;-q&quot;, &quot;verbosity&quot;, help=&quot;Quiet mode: disabled normal output, and loglevel=ERROR&quot;, flag_value=&quot;XXqXX&quot;)
 @click.option(&quot;-v&quot;, &quot;verbosity&quot;, help=&quot;Verbose mode: loglevel=INFO&quot;, flag_value=&quot;v&quot;)
 @click.option(&quot;-vv&quot;, &quot;verbosity&quot;, help=&quot;Very Verbose mode: loglevel=DEBUG&quot;, flag_value=&quot;vv&quot;)
 @click.option(&quot;-P&quot;, &quot;--max_workers&quot;, type=int, help=&quot;Maximum number of parallel workers.&quot;)
</failure>
			<system-out>@click.option(&quot;-q&quot;, &quot;verbosity&quot;, help=&quot;Quiet mode: disabled normal output, and loglevel=ERROR&quot;, flag_value=&quot;q&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #364" file="src/poodle/cli.py" line="21">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -18,7 +18,7 @@
 @click.command(context_settings=CONTEXT_SETTINGS)
 @click.argument(&quot;source&quot;, type=click.Path(exists=True, path_type=Path), nargs=-1)
 @click.option(&quot;-C&quot;, &quot;--config_file&quot;, help=&quot;Configuration File.&quot;, type=click.Path(exists=True, path_type=Path))
-@click.option(&quot;-q&quot;, &quot;verbosity&quot;, help=&quot;Quiet mode: disabled normal output, and loglevel=ERROR&quot;, flag_value=&quot;q&quot;)
+
 @click.option(&quot;-v&quot;, &quot;verbosity&quot;, help=&quot;Verbose mode: loglevel=INFO&quot;, flag_value=&quot;v&quot;)
 @click.option(&quot;-vv&quot;, &quot;verbosity&quot;, help=&quot;Very Verbose mode: loglevel=DEBUG&quot;, flag_value=&quot;vv&quot;)
 @click.option(&quot;-P&quot;, &quot;--max_workers&quot;, type=int, help=&quot;Maximum number of parallel workers.&quot;)
</failure>
			<system-out>@click.option(&quot;-q&quot;, &quot;verbosity&quot;, help=&quot;Quiet mode: disabled normal output, and loglevel=ERROR&quot;, flag_value=&quot;q&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #365" file="src/poodle/cli.py" line="22">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -19,7 +19,7 @@
 @click.argument(&quot;source&quot;, type=click.Path(exists=True, path_type=Path), nargs=-1)
 @click.option(&quot;-C&quot;, &quot;--config_file&quot;, help=&quot;Configuration File.&quot;, type=click.Path(exists=True, path_type=Path))
 @click.option(&quot;-q&quot;, &quot;verbosity&quot;, help=&quot;Quiet mode: disabled normal output, and loglevel=ERROR&quot;, flag_value=&quot;q&quot;)
-@click.option(&quot;-v&quot;, &quot;verbosity&quot;, help=&quot;Verbose mode: loglevel=INFO&quot;, flag_value=&quot;v&quot;)
+@click.option(&quot;XX-vXX&quot;, &quot;verbosity&quot;, help=&quot;Verbose mode: loglevel=INFO&quot;, flag_value=&quot;v&quot;)
 @click.option(&quot;-vv&quot;, &quot;verbosity&quot;, help=&quot;Very Verbose mode: loglevel=DEBUG&quot;, flag_value=&quot;vv&quot;)
 @click.option(&quot;-P&quot;, &quot;--max_workers&quot;, type=int, help=&quot;Maximum number of parallel workers.&quot;)
 @click.option(
</failure>
			<system-out>@click.option(&quot;-v&quot;, &quot;verbosity&quot;, help=&quot;Verbose mode: loglevel=INFO&quot;, flag_value=&quot;v&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #366" file="src/poodle/cli.py" line="22">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -19,7 +19,7 @@
 @click.argument(&quot;source&quot;, type=click.Path(exists=True, path_type=Path), nargs=-1)
 @click.option(&quot;-C&quot;, &quot;--config_file&quot;, help=&quot;Configuration File.&quot;, type=click.Path(exists=True, path_type=Path))
 @click.option(&quot;-q&quot;, &quot;verbosity&quot;, help=&quot;Quiet mode: disabled normal output, and loglevel=ERROR&quot;, flag_value=&quot;q&quot;)
-@click.option(&quot;-v&quot;, &quot;verbosity&quot;, help=&quot;Verbose mode: loglevel=INFO&quot;, flag_value=&quot;v&quot;)
+@click.option(&quot;-v&quot;, &quot;XXverbosityXX&quot;, help=&quot;Verbose mode: loglevel=INFO&quot;, flag_value=&quot;v&quot;)
 @click.option(&quot;-vv&quot;, &quot;verbosity&quot;, help=&quot;Very Verbose mode: loglevel=DEBUG&quot;, flag_value=&quot;vv&quot;)
 @click.option(&quot;-P&quot;, &quot;--max_workers&quot;, type=int, help=&quot;Maximum number of parallel workers.&quot;)
 @click.option(
</failure>
			<system-out>@click.option(&quot;-v&quot;, &quot;verbosity&quot;, help=&quot;Verbose mode: loglevel=INFO&quot;, flag_value=&quot;v&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #367" file="src/poodle/cli.py" line="22">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -19,7 +19,7 @@
 @click.argument(&quot;source&quot;, type=click.Path(exists=True, path_type=Path), nargs=-1)
 @click.option(&quot;-C&quot;, &quot;--config_file&quot;, help=&quot;Configuration File.&quot;, type=click.Path(exists=True, path_type=Path))
 @click.option(&quot;-q&quot;, &quot;verbosity&quot;, help=&quot;Quiet mode: disabled normal output, and loglevel=ERROR&quot;, flag_value=&quot;q&quot;)
-@click.option(&quot;-v&quot;, &quot;verbosity&quot;, help=&quot;Verbose mode: loglevel=INFO&quot;, flag_value=&quot;v&quot;)
+@click.option(&quot;-v&quot;, &quot;verbosity&quot;, help=&quot;XXVerbose mode: loglevel=INFOXX&quot;, flag_value=&quot;v&quot;)
 @click.option(&quot;-vv&quot;, &quot;verbosity&quot;, help=&quot;Very Verbose mode: loglevel=DEBUG&quot;, flag_value=&quot;vv&quot;)
 @click.option(&quot;-P&quot;, &quot;--max_workers&quot;, type=int, help=&quot;Maximum number of parallel workers.&quot;)
 @click.option(
</failure>
			<system-out>@click.option(&quot;-v&quot;, &quot;verbosity&quot;, help=&quot;Verbose mode: loglevel=INFO&quot;, flag_value=&quot;v&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #368" file="src/poodle/cli.py" line="22">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -19,7 +19,7 @@
 @click.argument(&quot;source&quot;, type=click.Path(exists=True, path_type=Path), nargs=-1)
 @click.option(&quot;-C&quot;, &quot;--config_file&quot;, help=&quot;Configuration File.&quot;, type=click.Path(exists=True, path_type=Path))
 @click.option(&quot;-q&quot;, &quot;verbosity&quot;, help=&quot;Quiet mode: disabled normal output, and loglevel=ERROR&quot;, flag_value=&quot;q&quot;)
-@click.option(&quot;-v&quot;, &quot;verbosity&quot;, help=&quot;Verbose mode: loglevel=INFO&quot;, flag_value=&quot;v&quot;)
+@click.option(&quot;-v&quot;, &quot;verbosity&quot;, help=&quot;Verbose mode: loglevel=INFO&quot;, flag_value=&quot;XXvXX&quot;)
 @click.option(&quot;-vv&quot;, &quot;verbosity&quot;, help=&quot;Very Verbose mode: loglevel=DEBUG&quot;, flag_value=&quot;vv&quot;)
 @click.option(&quot;-P&quot;, &quot;--max_workers&quot;, type=int, help=&quot;Maximum number of parallel workers.&quot;)
 @click.option(
</failure>
			<system-out>@click.option(&quot;-v&quot;, &quot;verbosity&quot;, help=&quot;Verbose mode: loglevel=INFO&quot;, flag_value=&quot;v&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #369" file="src/poodle/cli.py" line="22">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -19,7 +19,7 @@
 @click.argument(&quot;source&quot;, type=click.Path(exists=True, path_type=Path), nargs=-1)
 @click.option(&quot;-C&quot;, &quot;--config_file&quot;, help=&quot;Configuration File.&quot;, type=click.Path(exists=True, path_type=Path))
 @click.option(&quot;-q&quot;, &quot;verbosity&quot;, help=&quot;Quiet mode: disabled normal output, and loglevel=ERROR&quot;, flag_value=&quot;q&quot;)
-@click.option(&quot;-v&quot;, &quot;verbosity&quot;, help=&quot;Verbose mode: loglevel=INFO&quot;, flag_value=&quot;v&quot;)
+
 @click.option(&quot;-vv&quot;, &quot;verbosity&quot;, help=&quot;Very Verbose mode: loglevel=DEBUG&quot;, flag_value=&quot;vv&quot;)
 @click.option(&quot;-P&quot;, &quot;--max_workers&quot;, type=int, help=&quot;Maximum number of parallel workers.&quot;)
 @click.option(
</failure>
			<system-out>@click.option(&quot;-v&quot;, &quot;verbosity&quot;, help=&quot;Verbose mode: loglevel=INFO&quot;, flag_value=&quot;v&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #370" file="src/poodle/cli.py" line="23">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -20,7 +20,7 @@
 @click.option(&quot;-C&quot;, &quot;--config_file&quot;, help=&quot;Configuration File.&quot;, type=click.Path(exists=True, path_type=Path))
 @click.option(&quot;-q&quot;, &quot;verbosity&quot;, help=&quot;Quiet mode: disabled normal output, and loglevel=ERROR&quot;, flag_value=&quot;q&quot;)
 @click.option(&quot;-v&quot;, &quot;verbosity&quot;, help=&quot;Verbose mode: loglevel=INFO&quot;, flag_value=&quot;v&quot;)
-@click.option(&quot;-vv&quot;, &quot;verbosity&quot;, help=&quot;Very Verbose mode: loglevel=DEBUG&quot;, flag_value=&quot;vv&quot;)
+@click.option(&quot;XX-vvXX&quot;, &quot;verbosity&quot;, help=&quot;Very Verbose mode: loglevel=DEBUG&quot;, flag_value=&quot;vv&quot;)
 @click.option(&quot;-P&quot;, &quot;--max_workers&quot;, type=int, help=&quot;Maximum number of parallel workers.&quot;)
 @click.option(
     &quot;--exclude&quot;, &quot;excludes&quot;, multiple=True, help=&quot;Add a regex filter for which files NOT to mutate.  Multiple allowed.&quot;
</failure>
			<system-out>@click.option(&quot;-vv&quot;, &quot;verbosity&quot;, help=&quot;Very Verbose mode: loglevel=DEBUG&quot;, flag_value=&quot;vv&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #371" file="src/poodle/cli.py" line="23">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -20,7 +20,7 @@
 @click.option(&quot;-C&quot;, &quot;--config_file&quot;, help=&quot;Configuration File.&quot;, type=click.Path(exists=True, path_type=Path))
 @click.option(&quot;-q&quot;, &quot;verbosity&quot;, help=&quot;Quiet mode: disabled normal output, and loglevel=ERROR&quot;, flag_value=&quot;q&quot;)
 @click.option(&quot;-v&quot;, &quot;verbosity&quot;, help=&quot;Verbose mode: loglevel=INFO&quot;, flag_value=&quot;v&quot;)
-@click.option(&quot;-vv&quot;, &quot;verbosity&quot;, help=&quot;Very Verbose mode: loglevel=DEBUG&quot;, flag_value=&quot;vv&quot;)
+@click.option(&quot;-vv&quot;, &quot;XXverbosityXX&quot;, help=&quot;Very Verbose mode: loglevel=DEBUG&quot;, flag_value=&quot;vv&quot;)
 @click.option(&quot;-P&quot;, &quot;--max_workers&quot;, type=int, help=&quot;Maximum number of parallel workers.&quot;)
 @click.option(
     &quot;--exclude&quot;, &quot;excludes&quot;, multiple=True, help=&quot;Add a regex filter for which files NOT to mutate.  Multiple allowed.&quot;
</failure>
			<system-out>@click.option(&quot;-vv&quot;, &quot;verbosity&quot;, help=&quot;Very Verbose mode: loglevel=DEBUG&quot;, flag_value=&quot;vv&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #372" file="src/poodle/cli.py" line="23">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -20,7 +20,7 @@
 @click.option(&quot;-C&quot;, &quot;--config_file&quot;, help=&quot;Configuration File.&quot;, type=click.Path(exists=True, path_type=Path))
 @click.option(&quot;-q&quot;, &quot;verbosity&quot;, help=&quot;Quiet mode: disabled normal output, and loglevel=ERROR&quot;, flag_value=&quot;q&quot;)
 @click.option(&quot;-v&quot;, &quot;verbosity&quot;, help=&quot;Verbose mode: loglevel=INFO&quot;, flag_value=&quot;v&quot;)
-@click.option(&quot;-vv&quot;, &quot;verbosity&quot;, help=&quot;Very Verbose mode: loglevel=DEBUG&quot;, flag_value=&quot;vv&quot;)
+@click.option(&quot;-vv&quot;, &quot;verbosity&quot;, help=&quot;XXVery Verbose mode: loglevel=DEBUGXX&quot;, flag_value=&quot;vv&quot;)
 @click.option(&quot;-P&quot;, &quot;--max_workers&quot;, type=int, help=&quot;Maximum number of parallel workers.&quot;)
 @click.option(
     &quot;--exclude&quot;, &quot;excludes&quot;, multiple=True, help=&quot;Add a regex filter for which files NOT to mutate.  Multiple allowed.&quot;
</failure>
			<system-out>@click.option(&quot;-vv&quot;, &quot;verbosity&quot;, help=&quot;Very Verbose mode: loglevel=DEBUG&quot;, flag_value=&quot;vv&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #373" file="src/poodle/cli.py" line="23">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -20,7 +20,7 @@
 @click.option(&quot;-C&quot;, &quot;--config_file&quot;, help=&quot;Configuration File.&quot;, type=click.Path(exists=True, path_type=Path))
 @click.option(&quot;-q&quot;, &quot;verbosity&quot;, help=&quot;Quiet mode: disabled normal output, and loglevel=ERROR&quot;, flag_value=&quot;q&quot;)
 @click.option(&quot;-v&quot;, &quot;verbosity&quot;, help=&quot;Verbose mode: loglevel=INFO&quot;, flag_value=&quot;v&quot;)
-@click.option(&quot;-vv&quot;, &quot;verbosity&quot;, help=&quot;Very Verbose mode: loglevel=DEBUG&quot;, flag_value=&quot;vv&quot;)
+@click.option(&quot;-vv&quot;, &quot;verbosity&quot;, help=&quot;Very Verbose mode: loglevel=DEBUG&quot;, flag_value=&quot;XXvvXX&quot;)
 @click.option(&quot;-P&quot;, &quot;--max_workers&quot;, type=int, help=&quot;Maximum number of parallel workers.&quot;)
 @click.option(
     &quot;--exclude&quot;, &quot;excludes&quot;, multiple=True, help=&quot;Add a regex filter for which files NOT to mutate.  Multiple allowed.&quot;
</failure>
			<system-out>@click.option(&quot;-vv&quot;, &quot;verbosity&quot;, help=&quot;Very Verbose mode: loglevel=DEBUG&quot;, flag_value=&quot;vv&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #374" file="src/poodle/cli.py" line="23">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -20,7 +20,7 @@
 @click.option(&quot;-C&quot;, &quot;--config_file&quot;, help=&quot;Configuration File.&quot;, type=click.Path(exists=True, path_type=Path))
 @click.option(&quot;-q&quot;, &quot;verbosity&quot;, help=&quot;Quiet mode: disabled normal output, and loglevel=ERROR&quot;, flag_value=&quot;q&quot;)
 @click.option(&quot;-v&quot;, &quot;verbosity&quot;, help=&quot;Verbose mode: loglevel=INFO&quot;, flag_value=&quot;v&quot;)
-@click.option(&quot;-vv&quot;, &quot;verbosity&quot;, help=&quot;Very Verbose mode: loglevel=DEBUG&quot;, flag_value=&quot;vv&quot;)
+
 @click.option(&quot;-P&quot;, &quot;--max_workers&quot;, type=int, help=&quot;Maximum number of parallel workers.&quot;)
 @click.option(
     &quot;--exclude&quot;, &quot;excludes&quot;, multiple=True, help=&quot;Add a regex filter for which files NOT to mutate.  Multiple allowed.&quot;
</failure>
			<system-out>@click.option(&quot;-vv&quot;, &quot;verbosity&quot;, help=&quot;Very Verbose mode: loglevel=DEBUG&quot;, flag_value=&quot;vv&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #375" file="src/poodle/cli.py" line="24">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -21,7 +21,7 @@
 @click.option(&quot;-q&quot;, &quot;verbosity&quot;, help=&quot;Quiet mode: disabled normal output, and loglevel=ERROR&quot;, flag_value=&quot;q&quot;)
 @click.option(&quot;-v&quot;, &quot;verbosity&quot;, help=&quot;Verbose mode: loglevel=INFO&quot;, flag_value=&quot;v&quot;)
 @click.option(&quot;-vv&quot;, &quot;verbosity&quot;, help=&quot;Very Verbose mode: loglevel=DEBUG&quot;, flag_value=&quot;vv&quot;)
-@click.option(&quot;-P&quot;, &quot;--max_workers&quot;, type=int, help=&quot;Maximum number of parallel workers.&quot;)
+@click.option(&quot;XX-PXX&quot;, &quot;--max_workers&quot;, type=int, help=&quot;Maximum number of parallel workers.&quot;)
 @click.option(
     &quot;--exclude&quot;, &quot;excludes&quot;, multiple=True, help=&quot;Add a regex filter for which files NOT to mutate.  Multiple allowed.&quot;
 )
</failure>
			<system-out>@click.option(&quot;-P&quot;, &quot;--max_workers&quot;, type=int, help=&quot;Maximum number of parallel workers.&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #376" file="src/poodle/cli.py" line="24">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -21,7 +21,7 @@
 @click.option(&quot;-q&quot;, &quot;verbosity&quot;, help=&quot;Quiet mode: disabled normal output, and loglevel=ERROR&quot;, flag_value=&quot;q&quot;)
 @click.option(&quot;-v&quot;, &quot;verbosity&quot;, help=&quot;Verbose mode: loglevel=INFO&quot;, flag_value=&quot;v&quot;)
 @click.option(&quot;-vv&quot;, &quot;verbosity&quot;, help=&quot;Very Verbose mode: loglevel=DEBUG&quot;, flag_value=&quot;vv&quot;)
-@click.option(&quot;-P&quot;, &quot;--max_workers&quot;, type=int, help=&quot;Maximum number of parallel workers.&quot;)
+@click.option(&quot;-P&quot;, &quot;XX--max_workersXX&quot;, type=int, help=&quot;Maximum number of parallel workers.&quot;)
 @click.option(
     &quot;--exclude&quot;, &quot;excludes&quot;, multiple=True, help=&quot;Add a regex filter for which files NOT to mutate.  Multiple allowed.&quot;
 )
</failure>
			<system-out>@click.option(&quot;-P&quot;, &quot;--max_workers&quot;, type=int, help=&quot;Maximum number of parallel workers.&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #377" file="src/poodle/cli.py" line="24">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -21,7 +21,7 @@
 @click.option(&quot;-q&quot;, &quot;verbosity&quot;, help=&quot;Quiet mode: disabled normal output, and loglevel=ERROR&quot;, flag_value=&quot;q&quot;)
 @click.option(&quot;-v&quot;, &quot;verbosity&quot;, help=&quot;Verbose mode: loglevel=INFO&quot;, flag_value=&quot;v&quot;)
 @click.option(&quot;-vv&quot;, &quot;verbosity&quot;, help=&quot;Very Verbose mode: loglevel=DEBUG&quot;, flag_value=&quot;vv&quot;)
-@click.option(&quot;-P&quot;, &quot;--max_workers&quot;, type=int, help=&quot;Maximum number of parallel workers.&quot;)
+@click.option(&quot;-P&quot;, &quot;--max_workers&quot;, type=int, help=&quot;XXMaximum number of parallel workers.XX&quot;)
 @click.option(
     &quot;--exclude&quot;, &quot;excludes&quot;, multiple=True, help=&quot;Add a regex filter for which files NOT to mutate.  Multiple allowed.&quot;
 )
</failure>
			<system-out>@click.option(&quot;-P&quot;, &quot;--max_workers&quot;, type=int, help=&quot;Maximum number of parallel workers.&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #378" file="src/poodle/cli.py" line="24">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -21,7 +21,7 @@
 @click.option(&quot;-q&quot;, &quot;verbosity&quot;, help=&quot;Quiet mode: disabled normal output, and loglevel=ERROR&quot;, flag_value=&quot;q&quot;)
 @click.option(&quot;-v&quot;, &quot;verbosity&quot;, help=&quot;Verbose mode: loglevel=INFO&quot;, flag_value=&quot;v&quot;)
 @click.option(&quot;-vv&quot;, &quot;verbosity&quot;, help=&quot;Very Verbose mode: loglevel=DEBUG&quot;, flag_value=&quot;vv&quot;)
-@click.option(&quot;-P&quot;, &quot;--max_workers&quot;, type=int, help=&quot;Maximum number of parallel workers.&quot;)
+
 @click.option(
     &quot;--exclude&quot;, &quot;excludes&quot;, multiple=True, help=&quot;Add a regex filter for which files NOT to mutate.  Multiple allowed.&quot;
 )
</failure>
			<system-out>@click.option(&quot;-P&quot;, &quot;--max_workers&quot;, type=int, help=&quot;Maximum number of parallel workers.&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #379" file="src/poodle/cli.py" line="26">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -23,7 +23,7 @@
 @click.option(&quot;-vv&quot;, &quot;verbosity&quot;, help=&quot;Very Verbose mode: loglevel=DEBUG&quot;, flag_value=&quot;vv&quot;)
 @click.option(&quot;-P&quot;, &quot;--max_workers&quot;, type=int, help=&quot;Maximum number of parallel workers.&quot;)
 @click.option(
-    &quot;--exclude&quot;, &quot;excludes&quot;, multiple=True, help=&quot;Add a regex filter for which files NOT to mutate.  Multiple allowed.&quot;
+    &quot;XX--excludeXX&quot;, &quot;excludes&quot;, multiple=True, help=&quot;Add a regex filter for which files NOT to mutate.  Multiple allowed.&quot;
 )
 @click.option(
     &quot;--only&quot;,
</failure>
			<system-out>    &quot;--exclude&quot;, &quot;excludes&quot;, multiple=True, help=&quot;Add a regex filter for which files NOT to mutate.  Multiple allowed.&quot;</system-out>
		</testcase>
		<testcase name="Mutant #380" file="src/poodle/cli.py" line="26">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -23,7 +23,7 @@
 @click.option(&quot;-vv&quot;, &quot;verbosity&quot;, help=&quot;Very Verbose mode: loglevel=DEBUG&quot;, flag_value=&quot;vv&quot;)
 @click.option(&quot;-P&quot;, &quot;--max_workers&quot;, type=int, help=&quot;Maximum number of parallel workers.&quot;)
 @click.option(
-    &quot;--exclude&quot;, &quot;excludes&quot;, multiple=True, help=&quot;Add a regex filter for which files NOT to mutate.  Multiple allowed.&quot;
+    &quot;--exclude&quot;, &quot;XXexcludesXX&quot;, multiple=True, help=&quot;Add a regex filter for which files NOT to mutate.  Multiple allowed.&quot;
 )
 @click.option(
     &quot;--only&quot;,
</failure>
			<system-out>    &quot;--exclude&quot;, &quot;excludes&quot;, multiple=True, help=&quot;Add a regex filter for which files NOT to mutate.  Multiple allowed.&quot;</system-out>
		</testcase>
		<testcase name="Mutant #381" file="src/poodle/cli.py" line="26">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -23,7 +23,7 @@
 @click.option(&quot;-vv&quot;, &quot;verbosity&quot;, help=&quot;Very Verbose mode: loglevel=DEBUG&quot;, flag_value=&quot;vv&quot;)
 @click.option(&quot;-P&quot;, &quot;--max_workers&quot;, type=int, help=&quot;Maximum number of parallel workers.&quot;)
 @click.option(
-    &quot;--exclude&quot;, &quot;excludes&quot;, multiple=True, help=&quot;Add a regex filter for which files NOT to mutate.  Multiple allowed.&quot;
+    &quot;--exclude&quot;, &quot;excludes&quot;, multiple=False, help=&quot;Add a regex filter for which files NOT to mutate.  Multiple allowed.&quot;
 )
 @click.option(
     &quot;--only&quot;,
</failure>
			<system-out>    &quot;--exclude&quot;, &quot;excludes&quot;, multiple=True, help=&quot;Add a regex filter for which files NOT to mutate.  Multiple allowed.&quot;</system-out>
		</testcase>
		<testcase name="Mutant #382" file="src/poodle/cli.py" line="26">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -23,7 +23,7 @@
 @click.option(&quot;-vv&quot;, &quot;verbosity&quot;, help=&quot;Very Verbose mode: loglevel=DEBUG&quot;, flag_value=&quot;vv&quot;)
 @click.option(&quot;-P&quot;, &quot;--max_workers&quot;, type=int, help=&quot;Maximum number of parallel workers.&quot;)
 @click.option(
-    &quot;--exclude&quot;, &quot;excludes&quot;, multiple=True, help=&quot;Add a regex filter for which files NOT to mutate.  Multiple allowed.&quot;
+    &quot;--exclude&quot;, &quot;excludes&quot;, multiple=True, help=&quot;XXAdd a regex filter for which files NOT to mutate.  Multiple allowed.XX&quot;
 )
 @click.option(
     &quot;--only&quot;,
</failure>
			<system-out>    &quot;--exclude&quot;, &quot;excludes&quot;, multiple=True, help=&quot;Add a regex filter for which files NOT to mutate.  Multiple allowed.&quot;</system-out>
		</testcase>
		<testcase name="Mutant #383" file="src/poodle/cli.py" line="27">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -22,9 +22,7 @@
 @click.option(&quot;-v&quot;, &quot;verbosity&quot;, help=&quot;Verbose mode: loglevel=INFO&quot;, flag_value=&quot;v&quot;)
 @click.option(&quot;-vv&quot;, &quot;verbosity&quot;, help=&quot;Very Verbose mode: loglevel=DEBUG&quot;, flag_value=&quot;vv&quot;)
 @click.option(&quot;-P&quot;, &quot;--max_workers&quot;, type=int, help=&quot;Maximum number of parallel workers.&quot;)
-@click.option(
-    &quot;--exclude&quot;, &quot;excludes&quot;, multiple=True, help=&quot;Add a regex filter for which files NOT to mutate.  Multiple allowed.&quot;
-)
+
 @click.option(
     &quot;--only&quot;,
     &quot;only_files&quot;,
</failure>
			<system-out>)</system-out>
		</testcase>
		<testcase name="Mutant #384" file="src/poodle/cli.py" line="29">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -26,7 +26,7 @@
     &quot;--exclude&quot;, &quot;excludes&quot;, multiple=True, help=&quot;Add a regex filter for which files NOT to mutate.  Multiple allowed.&quot;
 )
 @click.option(
-    &quot;--only&quot;,
+    &quot;XX--onlyXX&quot;,
     &quot;only_files&quot;,
     multiple=True,
     help=&quot;Glob pattern for files to mutate.  If specified, no other files will be mutated.  Multiple allowed.&quot;,
</failure>
			<system-out>    &quot;--only&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #385" file="src/poodle/cli.py" line="30">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -27,7 +27,7 @@
 )
 @click.option(
     &quot;--only&quot;,
-    &quot;only_files&quot;,
+    &quot;XXonly_filesXX&quot;,
     multiple=True,
     help=&quot;Glob pattern for files to mutate.  If specified, no other files will be mutated.  Multiple allowed.&quot;,
 )
</failure>
			<system-out>    &quot;only_files&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #386" file="src/poodle/cli.py" line="31">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -28,7 +28,7 @@
 @click.option(
     &quot;--only&quot;,
     &quot;only_files&quot;,
-    multiple=True,
+    multiple=False,
     help=&quot;Glob pattern for files to mutate.  If specified, no other files will be mutated.  Multiple allowed.&quot;,
 )
 # @click.option(&quot;-R&quot;, &quot;--runner&quot;, help=&quot;Runner Name or Module Name for runner to use&quot;)
</failure>
			<system-out>    multiple=True,</system-out>
		</testcase>
		<testcase name="Mutant #387" file="src/poodle/cli.py" line="32">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -29,7 +29,7 @@
     &quot;--only&quot;,
     &quot;only_files&quot;,
     multiple=True,
-    help=&quot;Glob pattern for files to mutate.  If specified, no other files will be mutated.  Multiple allowed.&quot;,
+    help=&quot;XXGlob pattern for files to mutate.  If specified, no other files will be mutated.  Multiple allowed.XX&quot;,
 )
 # @click.option(&quot;-R&quot;, &quot;--runner&quot;, help=&quot;Runner Name or Module Name for runner to use&quot;)
 def main(
</failure>
			<system-out>    help=&quot;Glob pattern for files to mutate.  If specified, no other files will be mutated.  Multiple allowed.&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #388" file="src/poodle/cli.py" line="33">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -25,12 +25,7 @@
 @click.option(
     &quot;--exclude&quot;, &quot;excludes&quot;, multiple=True, help=&quot;Add a regex filter for which files NOT to mutate.  Multiple allowed.&quot;
 )
-@click.option(
-    &quot;--only&quot;,
-    &quot;only_files&quot;,
-    multiple=True,
-    help=&quot;Glob pattern for files to mutate.  If specified, no other files will be mutated.  Multiple allowed.&quot;,
-)
+
 # @click.option(&quot;-R&quot;, &quot;--runner&quot;, help=&quot;Runner Name or Module Name for runner to use&quot;)
 def main(
     source: tuple[Path],
</failure>
			<system-out>)</system-out>
		</testcase>
		<testcase name="Mutant #389" file="src/poodle/cli.py" line="45">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -42,7 +42,7 @@
 ) -&gt; None:
     &quot;&quot;&quot;Poodle Mutation Test Tool.&quot;&quot;&quot;
     try:
-        config = build_config(source, config_file, verbosity, max_workers, excludes, only_files)
+        config = None
     except PoodleInputError as err:
         click.echo(err.args)
         sys.exit(4)
</failure>
			<system-out>        config = build_config(source, config_file, verbosity, max_workers, excludes, only_files)</system-out>
		</testcase>
		<testcase name="Mutant #390" file="src/poodle/cli.py" line="48">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -45,7 +45,7 @@
         config = build_config(source, config_file, verbosity, max_workers, excludes, only_files)
     except PoodleInputError as err:
         click.echo(err.args)
-        sys.exit(4)
+        sys.exit(5)
 
     try:
         core.main(config)
</failure>
			<system-out>        sys.exit(4)</system-out>
		</testcase>
		<testcase name="Mutant #391" file="src/poodle/cli.py" line="53">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -50,7 +50,7 @@
     try:
         core.main(config)
     except KeyboardInterrupt:
-        click.echo(&quot;Aborted due to Keyboard Interrupt!&quot;)
+        click.echo(&quot;XXAborted due to Keyboard Interrupt!XX&quot;)
         sys.exit(2)
 
 
</failure>
			<system-out>        click.echo(&quot;Aborted due to Keyboard Interrupt!&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #392" file="src/poodle/cli.py" line="54">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -51,7 +51,7 @@
         core.main(config)
     except KeyboardInterrupt:
         click.echo(&quot;Aborted due to Keyboard Interrupt!&quot;)
-        sys.exit(2)
+        sys.exit(3)
 
 
 # pytest return codes
</failure>
			<system-out>        sys.exit(2)</system-out>
		</testcase>
		<testcase name="Mutant #393" file="src/poodle/cli.py" line="65">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -62,6 +62,6 @@
 # Exit code 4: pytest command line usage error
 # Exit code 5: No tests were collected
 
-if __name__ == &quot;__main__&quot;:
+if __name__ != &quot;__main__&quot;:
     main()
 
</failure>
			<system-out>if __name__ == &quot;__main__&quot;:</system-out>
		</testcase>
		<testcase name="Mutant #394" file="src/poodle/cli.py" line="65">
			<failure type="failure" message="bad_survived">--- src/poodle/cli.py
+++ src/poodle/cli.py
@@ -62,6 +62,6 @@
 # Exit code 4: pytest command line usage error
 # Exit code 5: No tests were collected
 
-if __name__ == &quot;__main__&quot;:
+if __name__ == &quot;XX__main__XX&quot;:
     main()
 
</failure>
			<system-out>if __name__ == &quot;__main__&quot;:</system-out>
		</testcase>
		<testcase name="Mutant #395" file="src/poodle/runners/command_line.py" line="21">
			<system-out>    run_env = os.environ.copy()</system-out>
		</testcase>
		<testcase name="Mutant #396" file="src/poodle/runners/command_line.py" line="24">
			<system-out>            str(run_folder.resolve() / mutant.source_folder),</system-out>
		</testcase>
		<testcase name="Mutant #397" file="src/poodle/runners/command_line.py" line="25">
			<system-out>            run_env.get(&quot;PYTHONPATH&quot;, &quot;&quot;),</system-out>
		</testcase>
		<testcase name="Mutant #398" file="src/poodle/runners/command_line.py" line="25">
			<system-out>            run_env.get(&quot;PYTHONPATH&quot;, &quot;&quot;),</system-out>
		</testcase>
		<testcase name="Mutant #399" file="src/poodle/runners/command_line.py" line="27">
			<system-out>    )</system-out>
		</testcase>
		<testcase name="Mutant #400" file="src/poodle/runners/command_line.py" line="30">
			<system-out>            &quot;PYTHONDONTWRITEBYTECODE&quot;: &quot;1&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #401" file="src/poodle/runners/command_line.py" line="30">
			<system-out>            &quot;PYTHONDONTWRITEBYTECODE&quot;: &quot;1&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #402" file="src/poodle/runners/command_line.py" line="31">
			<system-out>            &quot;PYTHONPATH&quot;: python_path,</system-out>
		</testcase>
		<testcase name="Mutant #403" file="src/poodle/runners/command_line.py" line="32">
			<system-out>            &quot;MUT_SOURCE_FILE&quot;: str(mutant.source_file),</system-out>
		</testcase>
		<testcase name="Mutant #404" file="src/poodle/runners/command_line.py" line="33">
			<system-out>            &quot;MUT_LINENO&quot;: str(mutant.lineno),</system-out>
		</testcase>
		<testcase name="Mutant #405" file="src/poodle/runners/command_line.py" line="34">
			<system-out>            &quot;MUT_END_LINENO&quot;: str(mutant.end_lineno),</system-out>
		</testcase>
		<testcase name="Mutant #406" file="src/poodle/runners/command_line.py" line="35">
			<system-out>            &quot;MUT_COL_OFFSET&quot;: str(mutant.col_offset),</system-out>
		</testcase>
		<testcase name="Mutant #407" file="src/poodle/runners/command_line.py" line="36">
			<system-out>            &quot;MUT_END_COL_OFFSET&quot;: str(mutant.end_col_offset),</system-out>
		</testcase>
		<testcase name="Mutant #408" file="src/poodle/runners/command_line.py" line="37">
			<system-out>            &quot;MUT_TEXT&quot;: str(mutant.text),</system-out>
		</testcase>
		<testcase name="Mutant #409" file="src/poodle/runners/command_line.py" line="40">
			<system-out>    if &quot;command_line_env&quot; in config.runner_opts:</system-out>
		</testcase>
		<testcase name="Mutant #410" file="src/poodle/runners/command_line.py" line="40">
			<system-out>    if &quot;command_line_env&quot; in config.runner_opts:</system-out>
		</testcase>
		<testcase name="Mutant #411" file="src/poodle/runners/command_line.py" line="41">
			<system-out>        run_env.update(config.runner_opts[&quot;command_line_env&quot;])</system-out>
		</testcase>
		<testcase name="Mutant #412" file="src/poodle/runners/command_line.py" line="45">
			<system-out>            shlex.split(config.runner_opts[&quot;command_line&quot;]),  # noqa: S603</system-out>
		</testcase>
		<testcase name="Mutant #413" file="src/poodle/runners/command_line.py" line="47">
			<system-out>            capture_output=True,</system-out>
		</testcase>
		<testcase name="Mutant #414" file="src/poodle/runners/command_line.py" line="48">
			<system-out>            check=False,</system-out>
		</testcase>
		<testcase name="Mutant #415" file="src/poodle/runners/command_line.py" line="50">
			<system-out>        )</system-out>
		</testcase>
		<testcase name="Mutant #416" file="src/poodle/runners/command_line.py" line="53">
			<system-out>            passed=False,</system-out>
		</testcase>
		<testcase name="Mutant #417" file="src/poodle/runners/command_line.py" line="55">
			<system-out>            reason_desc=f&quot;TimeoutExpired {te}&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #418" file="src/poodle/runners/command_line.py" line="58">
			<system-out>    if result.returncode == 1:</system-out>
		</testcase>
		<testcase name="Mutant #419" file="src/poodle/runners/command_line.py" line="58">
			<system-out>    if result.returncode == 1:</system-out>
		</testcase>
		<testcase name="Mutant #420" file="src/poodle/runners/command_line.py" line="60">
			<system-out>            passed=True,</system-out>
		</testcase>
		<testcase name="Mutant #421" file="src/poodle/runners/command_line.py" line="62">
			<system-out>            reason_desc=result.stdout.decode(&quot;utf-8&quot;, errors=&quot;replace&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #422" file="src/poodle/runners/command_line.py" line="62">
			<failure type="failure" message="bad_survived">--- src/poodle/runners/command_line.py
+++ src/poodle/runners/command_line.py
@@ -59,7 +59,7 @@
         return MutantTrialResult(
             passed=True,
             reason_code=MutantTrialResult.RC_FOUND,
-            reason_desc=result.stdout.decode(&quot;utf-8&quot;, errors=&quot;replace&quot;)
+            reason_desc=result.stdout.decode(&quot;utf-8&quot;, errors=&quot;XXreplaceXX&quot;)
             + &quot;\n&quot;
             + result.stderr.decode(&quot;utf-8&quot;, errors=&quot;replace&quot;),
         )
</failure>
			<system-out>            reason_desc=result.stdout.decode(&quot;utf-8&quot;, errors=&quot;replace&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #423" file="src/poodle/runners/command_line.py" line="63">
			<system-out>            + &quot;\n&quot;</system-out>
		</testcase>
		<testcase name="Mutant #424" file="src/poodle/runners/command_line.py" line="63">
			<system-out>            + &quot;\n&quot;</system-out>
		</testcase>
		<testcase name="Mutant #425" file="src/poodle/runners/command_line.py" line="64">
			<system-out>            + result.stderr.decode(&quot;utf-8&quot;, errors=&quot;replace&quot;),</system-out>
		</testcase>
		<testcase name="Mutant #426" file="src/poodle/runners/command_line.py" line="64">
			<system-out>            + result.stderr.decode(&quot;utf-8&quot;, errors=&quot;replace&quot;),</system-out>
		</testcase>
		<testcase name="Mutant #427" file="src/poodle/runners/command_line.py" line="64">
			<failure type="failure" message="bad_survived">--- src/poodle/runners/command_line.py
+++ src/poodle/runners/command_line.py
@@ -61,7 +61,7 @@
             reason_code=MutantTrialResult.RC_FOUND,
             reason_desc=result.stdout.decode(&quot;utf-8&quot;, errors=&quot;replace&quot;)
             + &quot;\n&quot;
-            + result.stderr.decode(&quot;utf-8&quot;, errors=&quot;replace&quot;),
+            + result.stderr.decode(&quot;utf-8&quot;, errors=&quot;XXreplaceXX&quot;),
         )
     if result.returncode == 0:
         return MutantTrialResult(
</failure>
			<system-out>            + result.stderr.decode(&quot;utf-8&quot;, errors=&quot;replace&quot;),</system-out>
		</testcase>
		<testcase name="Mutant #428" file="src/poodle/runners/command_line.py" line="66">
			<system-out>    if result.returncode == 0:</system-out>
		</testcase>
		<testcase name="Mutant #429" file="src/poodle/runners/command_line.py" line="66">
			<system-out>    if result.returncode == 0:</system-out>
		</testcase>
		<testcase name="Mutant #430" file="src/poodle/runners/command_line.py" line="68">
			<system-out>            passed=False,</system-out>
		</testcase>
		<testcase name="Mutant #431" file="src/poodle/runners/command_line.py" line="72">
			<system-out>        passed=True,</system-out>
		</testcase>
		<testcase name="Mutant #432" file="src/poodle/runners/command_line.py" line="74">
			<system-out>        reason_desc=result.stdout.decode(&quot;utf-8&quot;, errors=&quot;replace&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #433" file="src/poodle/runners/command_line.py" line="74">
			<failure type="failure" message="bad_survived">--- src/poodle/runners/command_line.py
+++ src/poodle/runners/command_line.py
@@ -71,7 +71,7 @@
     return MutantTrialResult(
         passed=True,
         reason_code=MutantTrialResult.RC_OTHER,
-        reason_desc=result.stdout.decode(&quot;utf-8&quot;, errors=&quot;replace&quot;)
+        reason_desc=result.stdout.decode(&quot;utf-8&quot;, errors=&quot;XXreplaceXX&quot;)
         + &quot;\n&quot;
         + result.stderr.decode(&quot;utf-8&quot;, errors=&quot;replace&quot;),
     )
</failure>
			<system-out>        reason_desc=result.stdout.decode(&quot;utf-8&quot;, errors=&quot;replace&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #434" file="src/poodle/runners/command_line.py" line="75">
			<system-out>        + &quot;\n&quot;</system-out>
		</testcase>
		<testcase name="Mutant #435" file="src/poodle/runners/command_line.py" line="75">
			<system-out>        + &quot;\n&quot;</system-out>
		</testcase>
		<testcase name="Mutant #436" file="src/poodle/runners/command_line.py" line="76">
			<system-out>        + result.stderr.decode(&quot;utf-8&quot;, errors=&quot;replace&quot;),</system-out>
		</testcase>
		<testcase name="Mutant #437" file="src/poodle/runners/command_line.py" line="76">
			<system-out>        + result.stderr.decode(&quot;utf-8&quot;, errors=&quot;replace&quot;),</system-out>
		</testcase>
		<testcase name="Mutant #438" file="src/poodle/runners/command_line.py" line="76">
			<failure type="failure" message="bad_survived">--- src/poodle/runners/command_line.py
+++ src/poodle/runners/command_line.py
@@ -73,6 +73,6 @@
         reason_code=MutantTrialResult.RC_OTHER,
         reason_desc=result.stdout.decode(&quot;utf-8&quot;, errors=&quot;replace&quot;)
         + &quot;\n&quot;
-        + result.stderr.decode(&quot;utf-8&quot;, errors=&quot;replace&quot;),
+        + result.stderr.decode(&quot;utf-8&quot;, errors=&quot;XXreplaceXX&quot;),
     )
 
</failure>
			<system-out>        + result.stderr.decode(&quot;utf-8&quot;, errors=&quot;replace&quot;),</system-out>
		</testcase>
		<testcase name="Mutant #439" file="src/poodle/mutators/constant.py" line="18">
			<failure type="failure" message="bad_survived">--- src/poodle/mutators/constant.py
+++ src/poodle/mutators/constant.py
@@ -15,7 +15,7 @@
     # int       3, 0o3 0x3, 0b11
     # float     3.0
 
-    mutator_name = &quot;Number&quot;
+    mutator_name = &quot;XXNumberXX&quot;
     mutants: list[FileMutation]
 
     def create_mutations(self, parsed_ast: ast.Module, *_, **__) -&gt; list[FileMutation]:
</failure>
			<system-out>    mutator_name = &quot;Number&quot;</system-out>
		</testcase>
		<testcase name="Mutant #440" file="src/poodle/mutators/constant.py" line="18">
			<failure type="failure" message="bad_survived">--- src/poodle/mutators/constant.py
+++ src/poodle/mutators/constant.py
@@ -15,7 +15,7 @@
     # int       3, 0o3 0x3, 0b11
     # float     3.0
 
-    mutator_name = &quot;Number&quot;
+    mutator_name = None
     mutants: list[FileMutation]
 
     def create_mutations(self, parsed_ast: ast.Module, *_, **__) -&gt; list[FileMutation]:
</failure>
			<system-out>    mutator_name = &quot;Number&quot;</system-out>
		</testcase>
		<testcase name="Mutant #441" file="src/poodle/mutators/constant.py" line="23">
			<system-out>        self.mutants = []</system-out>
		</testcase>
		<testcase name="Mutant #442" file="src/poodle/mutators/constant.py" line="30">
			<system-out>            self.mutants.append(self.create_file_mutation(node, str(node.value + 1)))</system-out>
		</testcase>
		<testcase name="Mutant #443" file="src/poodle/mutators/constant.py" line="30">
			<system-out>            self.mutants.append(self.create_file_mutation(node, str(node.value + 1)))</system-out>
		</testcase>
		<testcase name="Mutant #444" file="src/poodle/mutators/constant.py" line="31">
			<system-out>            self.mutants.append(self.create_file_mutation(node, str(node.value - 1)))</system-out>
		</testcase>
		<testcase name="Mutant #445" file="src/poodle/mutators/constant.py" line="31">
			<system-out>            self.mutants.append(self.create_file_mutation(node, str(node.value - 1)))</system-out>
		</testcase>
		<testcase name="Mutant #446" file="src/poodle/mutators/constant.py" line="33">
			<system-out>            self.mutants.append(self.create_file_mutation(node, str(node.value + 1j)))</system-out>
		</testcase>
		<testcase name="Mutant #447" file="src/poodle/mutators/constant.py" line="33">
			<system-out>            self.mutants.append(self.create_file_mutation(node, str(node.value + 1j)))</system-out>
		</testcase>
		<testcase name="Mutant #448" file="src/poodle/mutators/constant.py" line="34">
			<system-out>            self.mutants.append(self.create_file_mutation(node, str(node.value - 1j)))</system-out>
		</testcase>
		<testcase name="Mutant #449" file="src/poodle/mutators/constant.py" line="34">
			<system-out>            self.mutants.append(self.create_file_mutation(node, str(node.value - 1j)))</system-out>
		</testcase>
		<testcase name="Mutant #450" file="src/poodle/mutators/constant.py" line="36">
			<system-out>            if node.value == 0:</system-out>
		</testcase>
		<testcase name="Mutant #451" file="src/poodle/mutators/constant.py" line="36">
			<system-out>            if node.value == 0:</system-out>
		</testcase>
		<testcase name="Mutant #452" file="src/poodle/mutators/constant.py" line="37">
			<system-out>                self.mutants.append(self.create_file_mutation(node, str(1.0)))</system-out>
		</testcase>
		<testcase name="Mutant #453" file="src/poodle/mutators/constant.py" line="39">
			<system-out>                self.mutants.append(self.create_file_mutation(node, str(node.value * 2)))</system-out>
		</testcase>
		<testcase name="Mutant #454" file="src/poodle/mutators/constant.py" line="39">
			<system-out>                self.mutants.append(self.create_file_mutation(node, str(node.value * 2)))</system-out>
		</testcase>
		<testcase name="Mutant #455" file="src/poodle/mutators/constant.py" line="40">
			<system-out>                self.mutants.append(self.create_file_mutation(node, str(node.value / 2)))</system-out>
		</testcase>
		<testcase name="Mutant #456" file="src/poodle/mutators/constant.py" line="40">
			<system-out>                self.mutants.append(self.create_file_mutation(node, str(node.value / 2)))</system-out>
		</testcase>
		<testcase name="Mutant #457" file="src/poodle/mutators/constant.py" line="46">
			<failure type="failure" message="bad_survived">--- src/poodle/mutators/constant.py
+++ src/poodle/mutators/constant.py
@@ -43,7 +43,7 @@
 class StringMutator(ast.NodeVisitor, Mutator):
     &quot;&quot;&quot;Mutate String.&quot;&quot;&quot;
 
-    mutator_name = &quot;String&quot;
+    mutator_name = &quot;XXStringXX&quot;
     mutants: list[FileMutation]
 
     def create_mutations(self, parsed_ast: ast.Module, *_, **__) -&gt; list[FileMutation]:
</failure>
			<system-out>    mutator_name = &quot;String&quot;</system-out>
		</testcase>
		<testcase name="Mutant #458" file="src/poodle/mutators/constant.py" line="46">
			<failure type="failure" message="bad_survived">--- src/poodle/mutators/constant.py
+++ src/poodle/mutators/constant.py
@@ -43,7 +43,7 @@
 class StringMutator(ast.NodeVisitor, Mutator):
     &quot;&quot;&quot;Mutate String.&quot;&quot;&quot;
 
-    mutator_name = &quot;String&quot;
+    mutator_name = None
     mutants: list[FileMutation]
 
     def create_mutations(self, parsed_ast: ast.Module, *_, **__) -&gt; list[FileMutation]:
</failure>
			<system-out>    mutator_name = &quot;String&quot;</system-out>
		</testcase>
		<testcase name="Mutant #459" file="src/poodle/mutators/constant.py" line="51">
			<system-out>        self.mutants = []</system-out>
		</testcase>
		<testcase name="Mutant #460" file="src/poodle/mutators/constant.py" line="62">
			<system-out>            node.value = f&quot;XX{node.value}XX&quot;</system-out>
		</testcase>
		<testcase name="Mutant #461" file="src/poodle/mutators/constant.py" line="62">
			<system-out>            node.value = f&quot;XX{node.value}XX&quot;</system-out>
		</testcase>
		<testcase name="Mutant #462" file="src/poodle/mutators/constant.py" line="72">
			<failure type="failure" message="bad_survived">--- src/poodle/mutators/constant.py
+++ src/poodle/mutators/constant.py
@@ -69,7 +69,7 @@
     continue, break, False, True, None
     &quot;&quot;&quot;
 
-    mutator_name = &quot;Keyword&quot;
+    mutator_name = &quot;XXKeywordXX&quot;
     mutants: list[FileMutation]
 
     def create_mutations(self, parsed_ast: ast.Module, *_, **__) -&gt; list[FileMutation]:
</failure>
			<system-out>    mutator_name = &quot;Keyword&quot;</system-out>
		</testcase>
		<testcase name="Mutant #463" file="src/poodle/mutators/constant.py" line="72">
			<failure type="failure" message="bad_survived">--- src/poodle/mutators/constant.py
+++ src/poodle/mutators/constant.py
@@ -69,7 +69,7 @@
     continue, break, False, True, None
     &quot;&quot;&quot;
 
-    mutator_name = &quot;Keyword&quot;
+    mutator_name = None
     mutants: list[FileMutation]
 
     def create_mutations(self, parsed_ast: ast.Module, *_, **__) -&gt; list[FileMutation]:
</failure>
			<system-out>    mutator_name = &quot;Keyword&quot;</system-out>
		</testcase>
		<testcase name="Mutant #464" file="src/poodle/mutators/constant.py" line="77">
			<system-out>        self.mutants = []</system-out>
		</testcase>
		<testcase name="Mutant #465" file="src/poodle/mutators/constant.py" line="84">
			<system-out>        self.mutants.append(self.create_file_mutation(node, &quot;continue&quot;))</system-out>
		</testcase>
		<testcase name="Mutant #466" file="src/poodle/mutators/constant.py" line="88">
			<system-out>        self.mutants.append(self.create_file_mutation(node, &quot;break&quot;))</system-out>
		</testcase>
		<testcase name="Mutant #467" file="src/poodle/mutators/constant.py" line="95">
			<system-out>        if node.value is True:</system-out>
		</testcase>
		<testcase name="Mutant #468" file="src/poodle/mutators/constant.py" line="95">
			<system-out>        if node.value is True:</system-out>
		</testcase>
		<testcase name="Mutant #469" file="src/poodle/mutators/constant.py" line="96">
			<system-out>            self.mutants.append(self.create_file_mutation(node, &quot;False&quot;))</system-out>
		</testcase>
		<testcase name="Mutant #470" file="src/poodle/mutators/constant.py" line="97">
			<system-out>        if node.value is False:</system-out>
		</testcase>
		<testcase name="Mutant #471" file="src/poodle/mutators/constant.py" line="97">
			<system-out>        if node.value is False:</system-out>
		</testcase>
		<testcase name="Mutant #472" file="src/poodle/mutators/constant.py" line="98">
			<system-out>            self.mutants.append(self.create_file_mutation(node, &quot;True&quot;))</system-out>
		</testcase>
		<testcase name="Mutant #473" file="src/poodle/mutators/constant.py" line="99">
			<system-out>        if node.value is None:</system-out>
		</testcase>
		<testcase name="Mutant #474" file="src/poodle/mutators/constant.py" line="100">
			<system-out>            self.mutants.append(self.create_file_mutation(node, &quot;' '&quot;))</system-out>
		</testcase>
		<testcase name="Mutant #475" file="src/poodle/mutators/calls.py" line="14">
			<system-out>    mutator_name = &quot;FuncCall&quot;</system-out>
		</testcase>
		<testcase name="Mutant #476" file="src/poodle/mutators/calls.py" line="14">
			<system-out>    mutator_name = &quot;FuncCall&quot;</system-out>
		</testcase>
		<testcase name="Mutant #477" file="src/poodle/mutators/calls.py" line="19">
			<system-out>        self.mutants = []</system-out>
		</testcase>
		<testcase name="Mutant #478" file="src/poodle/mutators/calls.py" line="25">
			<system-out>        self.mutants.append(self.create_file_mutation(node, &quot;None&quot;))</system-out>
		</testcase>
		<testcase name="Mutant #479" file="src/poodle/mutators/calls.py" line="31">
			<system-out>    mutator_name = &quot;DictArray&quot;</system-out>
		</testcase>
		<testcase name="Mutant #480" file="src/poodle/mutators/calls.py" line="31">
			<system-out>    mutator_name = &quot;DictArray&quot;</system-out>
		</testcase>
		<testcase name="Mutant #481" file="src/poodle/mutators/calls.py" line="36">
			<system-out>        self.mutants = []</system-out>
		</testcase>
		<testcase name="Mutant #482" file="src/poodle/mutators/calls.py" line="46">
			<system-out>        self.mutants.append(self.create_file_mutation(node, &quot;None&quot;))</system-out>
		</testcase>
		<testcase name="Mutant #483" file="src/poodle/mutators/calls.py" line="52">
			<system-out>    mutator_name = &quot;Lambda&quot;</system-out>
		</testcase>
		<testcase name="Mutant #484" file="src/poodle/mutators/calls.py" line="52">
			<system-out>    mutator_name = &quot;Lambda&quot;</system-out>
		</testcase>
		<testcase name="Mutant #485" file="src/poodle/mutators/calls.py" line="57">
			<system-out>        self.mutants = []</system-out>
		</testcase>
		<testcase name="Mutant #486" file="src/poodle/mutators/calls.py" line="63">
			<system-out>        if isinstance(node.body, ast.Constant) and node.body.value is None:</system-out>
		</testcase>
		<testcase name="Mutant #487" file="src/poodle/mutators/calls.py" line="63">
			<system-out>        if isinstance(node.body, ast.Constant) and node.body.value is None:</system-out>
		</testcase>
		<testcase name="Mutant #488" file="src/poodle/mutators/calls.py" line="64">
			<system-out>            node.body = ast.Constant(&quot;&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #489" file="src/poodle/mutators/calls.py" line="64">
			<system-out>            node.body = ast.Constant(&quot;&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #490" file="src/poodle/mutators/calls.py" line="67">
			<system-out>            node.body = ast.Constant(None)</system-out>
		</testcase>
		<testcase name="Mutant #491" file="src/poodle/mutators/calls.py" line="74">
			<system-out>    mutator_name = &quot;Return&quot;</system-out>
		</testcase>
		<testcase name="Mutant #492" file="src/poodle/mutators/calls.py" line="74">
			<system-out>    mutator_name = &quot;Return&quot;</system-out>
		</testcase>
		<testcase name="Mutant #493" file="src/poodle/mutators/calls.py" line="79">
			<system-out>        self.mutants = []</system-out>
		</testcase>
		<testcase name="Mutant #494" file="src/poodle/mutators/calls.py" line="85">
			<system-out>        if node.value is None:</system-out>
		</testcase>
		<testcase name="Mutant #495" file="src/poodle/mutators/calls.py" line="87">
			<system-out>        if isinstance(node.value, ast.Constant) and node.value.value is None:</system-out>
		</testcase>
		<testcase name="Mutant #496" file="src/poodle/mutators/calls.py" line="87">
			<system-out>        if isinstance(node.value, ast.Constant) and node.value.value is None:</system-out>
		</testcase>
		<testcase name="Mutant #497" file="src/poodle/mutators/calls.py" line="88">
			<system-out>            node.value = ast.Constant(&quot;&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #498" file="src/poodle/mutators/calls.py" line="88">
			<system-out>            node.value = ast.Constant(&quot;&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #499" file="src/poodle/mutators/calls.py" line="91">
			<system-out>            node.value = ast.Constant(None)</system-out>
		</testcase>
		<testcase name="Mutant #500" file="src/poodle/mutators/calls.py" line="98">
			<system-out>    mutator_name = &quot;Decorator&quot;</system-out>
		</testcase>
		<testcase name="Mutant #501" file="src/poodle/mutators/calls.py" line="98">
			<system-out>    mutator_name = &quot;Decorator&quot;</system-out>
		</testcase>
		<testcase name="Mutant #502" file="src/poodle/mutators/calls.py" line="103">
			<system-out>        self.mutants = []</system-out>
		</testcase>
		<testcase name="Mutant #503" file="src/poodle/mutators/calls.py" line="111">
			<system-out>                new_node = deepcopy(node)</system-out>
		</testcase>
		<testcase name="Mutant #504" file="src/poodle/mutators/calls.py" line="111">
			<system-out>                new_node = deepcopy(node)</system-out>
		</testcase>
		<testcase name="Mutant #505" file="src/poodle/mutators/unary_op.py" line="20">
			<failure type="failure" message="bad_survived">--- src/poodle/mutators/unary_op.py
+++ src/poodle/mutators/unary_op.py
@@ -17,7 +17,7 @@
     # ast.Not       not
     # ast.Invert    ~
 
-    mutator_name = &quot;UnaryOp&quot;
+    mutator_name = &quot;XXUnaryOpXX&quot;
     mutants: list[FileMutation]
 
     def create_mutations(self, parsed_ast: ast.Module, *_, **__) -&gt; list[FileMutation]:
</failure>
			<system-out>    mutator_name = &quot;UnaryOp&quot;</system-out>
		</testcase>
		<testcase name="Mutant #506" file="src/poodle/mutators/unary_op.py" line="20">
			<failure type="failure" message="bad_survived">--- src/poodle/mutators/unary_op.py
+++ src/poodle/mutators/unary_op.py
@@ -17,7 +17,7 @@
     # ast.Not       not
     # ast.Invert    ~
 
-    mutator_name = &quot;UnaryOp&quot;
+    mutator_name = None
     mutants: list[FileMutation]
 
     def create_mutations(self, parsed_ast: ast.Module, *_, **__) -&gt; list[FileMutation]:
</failure>
			<system-out>    mutator_name = &quot;UnaryOp&quot;</system-out>
		</testcase>
		<testcase name="Mutant #507" file="src/poodle/mutators/unary_op.py" line="25">
			<system-out>        self.mutants = []</system-out>
		</testcase>
		<testcase name="Mutant #508" file="src/poodle/mutators/compare.py" line="42">
			<system-out>    }</system-out>
		</testcase>
		<testcase name="Mutant #509" file="src/poodle/mutators/compare.py" line="44">
			<system-out>    mutator_name = &quot;Compare&quot;</system-out>
		</testcase>
		<testcase name="Mutant #510" file="src/poodle/mutators/compare.py" line="44">
			<system-out>    mutator_name = &quot;Compare&quot;</system-out>
		</testcase>
		<testcase name="Mutant #511" file="src/poodle/mutators/compare.py" line="49">
			<system-out>        self.mutants: list[FileMutation] = []</system-out>
		</testcase>
		<testcase name="Mutant #512" file="src/poodle/mutators/compare.py" line="52">
			<system-out>            r&quot;__name__ == '__main__'&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #513" file="src/poodle/mutators/compare.py" line="53">
			<system-out>        ]</system-out>
		</testcase>
		<testcase name="Mutant #514" file="src/poodle/mutators/compare.py" line="55">
			<system-out>        self.filter_patterns += self.config.mutator_opts.get(&quot;compare_filters&quot;, [])</system-out>
		</testcase>
		<testcase name="Mutant #515" file="src/poodle/mutators/compare.py" line="55">
			<system-out>        self.filter_patterns += self.config.mutator_opts.get(&quot;compare_filters&quot;, [])</system-out>
		</testcase>
		<testcase name="Mutant #516" file="src/poodle/mutators/compare.py" line="55">
			<system-out>        self.filter_patterns += self.config.mutator_opts.get(&quot;compare_filters&quot;, [])</system-out>
		</testcase>
		<testcase name="Mutant #517" file="src/poodle/mutators/compare.py" line="59">
			<system-out>        self.mutants = []</system-out>
		</testcase>
		<testcase name="Mutant #518" file="src/poodle/mutators/compare.py" line="66">
			<system-out>        text = ast.unparse(node)</system-out>
		</testcase>
		<testcase name="Mutant #519" file="src/poodle/mutators/compare.py" line="73">
			<system-out>                mut = deepcopy(node)</system-out>
		</testcase>
		<testcase name="Mutant #520" file="src/poodle/mutators/compare.py" line="73">
			<system-out>                mut = deepcopy(node)</system-out>
		</testcase>
		<testcase name="Mutant #521" file="src/poodle/mutators/compare.py" line="74">
			<system-out>                mut.ops[idx] = new_op()</system-out>
		</testcase>
		<testcase name="Mutant #522" file="src/poodle/mutators/compare.py" line="82">
			<system-out>        text = ast.unparse(node)</system-out>
		</testcase>
		<testcase name="Mutant #523" file="src/poodle/mutators/compare.py" line="88">
			<system-out>            mut = deepcopy(node)</system-out>
		</testcase>
		<testcase name="Mutant #524" file="src/poodle/mutators/compare.py" line="88">
			<system-out>            mut = deepcopy(node)</system-out>
		</testcase>
		<testcase name="Mutant #525" file="src/poodle/mutators/compare.py" line="89">
			<system-out>            mut.op = new_op()</system-out>
		</testcase>
		<testcase name="Mutant #526" file="src/poodle/mutators/operators.py" line="32">
			<system-out>        &quot;min&quot;: {</system-out>
		</testcase>
		<testcase name="Mutant #527" file="src/poodle/mutators/operators.py" line="46">
			<system-out>        &quot;std&quot;: {</system-out>
		</testcase>
		<testcase name="Mutant #528" file="src/poodle/mutators/operators.py" line="60">
			<system-out>        &quot;max&quot;: {</system-out>
		</testcase>
		<testcase name="Mutant #529" file="src/poodle/mutators/operators.py" line="74">
			<system-out>    }</system-out>
		</testcase>
		<testcase name="Mutant #530" file="src/poodle/mutators/operators.py" line="79">
			<system-out>        self.mutants: list[FileMutation] = []</system-out>
		</testcase>
		<testcase name="Mutant #531" file="src/poodle/mutators/operators.py" line="81">
			<system-out>        level = self.config.mutator_opts.get(&quot;operator_level&quot;, &quot;std&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #532" file="src/poodle/mutators/operators.py" line="81">
			<system-out>        level = self.config.mutator_opts.get(&quot;operator_level&quot;, &quot;std&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #533" file="src/poodle/mutators/operators.py" line="81">
			<system-out>        level = self.config.mutator_opts.get(&quot;operator_level&quot;, &quot;std&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #534" file="src/poodle/mutators/operators.py" line="82">
			<system-out>        if level not in self.type_map_levels:</system-out>
		</testcase>
		<testcase name="Mutant #535" file="src/poodle/mutators/operators.py" line="83">
			<system-out>            echo(f&quot;WARN: Invalid value operator_opts.operator_level={level}.  Using Default value 'std'&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #536" file="src/poodle/mutators/operators.py" line="84">
			<system-out>            level = &quot;std&quot;</system-out>
		</testcase>
		<testcase name="Mutant #537" file="src/poodle/mutators/operators.py" line="84">
			<system-out>            level = &quot;std&quot;</system-out>
		</testcase>
		<testcase name="Mutant #538" file="src/poodle/mutators/operators.py" line="86">
			<system-out>        self.type_map: dict[type, list[type]] = self.type_map_levels[level]</system-out>
		</testcase>
		<testcase name="Mutant #539" file="src/poodle/mutators/operators.py" line="90">
			<system-out>        self.mutants = []</system-out>
		</testcase>
		<testcase name="Mutant #540" file="src/poodle/mutators/operators.py" line="99">
			<system-out>    mutator_name = &quot;BinOp&quot;</system-out>
		</testcase>
		<testcase name="Mutant #541" file="src/poodle/mutators/operators.py" line="99">
			<system-out>    mutator_name = &quot;BinOp&quot;</system-out>
		</testcase>
		<testcase name="Mutant #542" file="src/poodle/mutators/operators.py" line="106">
			<system-out>        if type(node.op) in self.type_map:</system-out>
		</testcase>
		<testcase name="Mutant #543" file="src/poodle/mutators/operators.py" line="107">
			<system-out>            mut_types = self.type_map[type(node.op)]</system-out>
		</testcase>
		<testcase name="Mutant #544" file="src/poodle/mutators/operators.py" line="118">
			<system-out>    mutator_name = &quot;AugAssign&quot;</system-out>
		</testcase>
		<testcase name="Mutant #545" file="src/poodle/mutators/operators.py" line="118">
			<system-out>    mutator_name = &quot;AugAssign&quot;</system-out>
		</testcase>
		<testcase name="Mutant #546" file="src/poodle/mutators/operators.py" line="124">
			<system-out>        if type(node.op) in self.type_map:</system-out>
		</testcase>
		<testcase name="Mutant #547" file="src/poodle/mutators/operators.py" line="125">
			<system-out>            mut_types = self.type_map[type(node.op)]</system-out>
		</testcase>
		<testcase name="Mutant #548" file="src/poodle/reporters/basic.py" line="20">
			<system-out>    echo(&quot;&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #549" file="src/poodle/reporters/basic.py" line="21">
			<system-out>    summary = testing_results.summary</system-out>
		</testcase>
		<testcase name="Mutant #550" file="src/poodle/reporters/basic.py" line="22">
			<failure type="failure" message="bad_survived">--- src/poodle/reporters/basic.py
+++ src/poodle/reporters/basic.py
@@ -19,7 +19,7 @@
     &quot;&quot;&quot;Echo quick summary to console.&quot;&quot;&quot;
     echo(&quot;&quot;)
     summary = testing_results.summary
-    if summary.trials &lt; 1:
+    if summary.trials &lt;= 1:
         echo(click.style(&quot;!!! No mutants found to test !!!&quot;, fg=&quot;yellow&quot;))
         return
 
</failure>
			<system-out>    if summary.trials &lt; 1:</system-out>
		</testcase>
		<testcase name="Mutant #551" file="src/poodle/reporters/basic.py" line="22">
			<failure type="failure" message="bad_survived">--- src/poodle/reporters/basic.py
+++ src/poodle/reporters/basic.py
@@ -19,7 +19,7 @@
     &quot;&quot;&quot;Echo quick summary to console.&quot;&quot;&quot;
     echo(&quot;&quot;)
     summary = testing_results.summary
-    if summary.trials &lt; 1:
+    if summary.trials &lt; 2:
         echo(click.style(&quot;!!! No mutants found to test !!!&quot;, fg=&quot;yellow&quot;))
         return
 
</failure>
			<system-out>    if summary.trials &lt; 1:</system-out>
		</testcase>
		<testcase name="Mutant #552" file="src/poodle/reporters/basic.py" line="23">
			<system-out>        echo(click.style(&quot;!!! No mutants found to test !!!&quot;, fg=&quot;yellow&quot;))</system-out>
		</testcase>
		<testcase name="Mutant #553" file="src/poodle/reporters/basic.py" line="23">
			<system-out>        echo(click.style(&quot;!!! No mutants found to test !!!&quot;, fg=&quot;yellow&quot;))</system-out>
		</testcase>
		<testcase name="Mutant #554" file="src/poodle/reporters/basic.py" line="26">
			<system-out>    echo(click.style(&quot;*** Results Summary ***&quot;, fg=&quot;green&quot;))</system-out>
		</testcase>
		<testcase name="Mutant #555" file="src/poodle/reporters/basic.py" line="26">
			<system-out>    echo(click.style(&quot;*** Results Summary ***&quot;, fg=&quot;green&quot;))</system-out>
		</testcase>
		<testcase name="Mutant #556" file="src/poodle/reporters/basic.py" line="27">
			<system-out>    echo(f&quot;Testing found {summary.success_rate:.1%} of Mutants.&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #557" file="src/poodle/reporters/basic.py" line="29">
			<system-out>        echo(f&quot; - {summary.not_found} mutant(s) were not found.&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #558" file="src/poodle/reporters/basic.py" line="31">
			<system-out>        echo(f&quot; - {summary.timeout} mutant(s) caused trial to timeout.&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #559" file="src/poodle/reporters/basic.py" line="33">
			<system-out>        echo(f&quot; - {summary.errors} mutant(s) could not be tested due to an error.&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #560" file="src/poodle/reporters/basic.py" line="37">
			<failure type="failure" message="bad_survived">--- src/poodle/reporters/basic.py
+++ src/poodle/reporters/basic.py
@@ -34,7 +34,7 @@
 
 
 display_reason_code = {
-    MutantTrialResult.RC_FOUND: &quot;FOUND&quot;,
+    MutantTrialResult.RC_FOUND: &quot;XXFOUNDXX&quot;,
     MutantTrialResult.RC_INCOMPLETE: &quot;Testing Incomplete&quot;,
     MutantTrialResult.RC_NOT_FOUND: &quot;Mutant Not Found&quot;,
     MutantTrialResult.RC_TIMEOUT: &quot;Trial Exceeded Timeout&quot;,
</failure>
			<system-out>    MutantTrialResult.RC_FOUND: &quot;FOUND&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #561" file="src/poodle/reporters/basic.py" line="38">
			<failure type="failure" message="bad_survived">--- src/poodle/reporters/basic.py
+++ src/poodle/reporters/basic.py
@@ -35,7 +35,7 @@
 
 display_reason_code = {
     MutantTrialResult.RC_FOUND: &quot;FOUND&quot;,
-    MutantTrialResult.RC_INCOMPLETE: &quot;Testing Incomplete&quot;,
+    MutantTrialResult.RC_INCOMPLETE: &quot;XXTesting IncompleteXX&quot;,
     MutantTrialResult.RC_NOT_FOUND: &quot;Mutant Not Found&quot;,
     MutantTrialResult.RC_TIMEOUT: &quot;Trial Exceeded Timeout&quot;,
 }
</failure>
			<system-out>    MutantTrialResult.RC_INCOMPLETE: &quot;Testing Incomplete&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #562" file="src/poodle/reporters/basic.py" line="39">
			<system-out>    MutantTrialResult.RC_NOT_FOUND: &quot;Mutant Not Found&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #563" file="src/poodle/reporters/basic.py" line="40">
			<failure type="failure" message="bad_survived">--- src/poodle/reporters/basic.py
+++ src/poodle/reporters/basic.py
@@ -37,7 +37,7 @@
     MutantTrialResult.RC_FOUND: &quot;FOUND&quot;,
     MutantTrialResult.RC_INCOMPLETE: &quot;Testing Incomplete&quot;,
     MutantTrialResult.RC_NOT_FOUND: &quot;Mutant Not Found&quot;,
-    MutantTrialResult.RC_TIMEOUT: &quot;Trial Exceeded Timeout&quot;,
+    MutantTrialResult.RC_TIMEOUT: &quot;XXTrial Exceeded TimeoutXX&quot;,
 }
 
 
</failure>
			<system-out>    MutantTrialResult.RC_TIMEOUT: &quot;Trial Exceeded Timeout&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #564" file="src/poodle/reporters/basic.py" line="41">
			<system-out>}</system-out>
		</testcase>
		<testcase name="Mutant #565" file="src/poodle/reporters/basic.py" line="46">
			<system-out>    out_lines = []</system-out>
		</testcase>
		<testcase name="Mutant #566" file="src/poodle/reporters/basic.py" line="48">
			<system-out>    failed_trials = [trial for trial in testing_results.mutant_trials if not trial.result.passed]</system-out>
		</testcase>
		<testcase name="Mutant #567" file="src/poodle/reporters/basic.py" line="48">
			<system-out>    failed_trials = [trial for trial in testing_results.mutant_trials if not trial.result.passed]</system-out>
		</testcase>
		<testcase name="Mutant #568" file="src/poodle/reporters/basic.py" line="49">
			<system-out>    if not failed_trials:</system-out>
		</testcase>
		<testcase name="Mutant #569" file="src/poodle/reporters/basic.py" line="55">
			<failure type="failure" message="bad_survived">--- src/poodle/reporters/basic.py
+++ src/poodle/reporters/basic.py
@@ -52,7 +52,7 @@
     failed_trials.sort(
         key=lambda trial: (
             trial.mutant.source_folder,
-            str(trial.mutant.source_file) or &quot;&quot;,
+            str(trial.mutant.source_file) or &quot;XXXX&quot;,
             trial.mutant.lineno,
             trial.mutant.mutator_name,
         )
</failure>
			<system-out>            str(trial.mutant.source_file) or &quot;&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #570" file="src/poodle/reporters/basic.py" line="55">
			<failure type="failure" message="bad_survived">--- src/poodle/reporters/basic.py
+++ src/poodle/reporters/basic.py
@@ -52,7 +52,7 @@
     failed_trials.sort(
         key=lambda trial: (
             trial.mutant.source_folder,
-            str(trial.mutant.source_file) or &quot;&quot;,
+            str(trial.mutant.source_file) and &quot;&quot;,
             trial.mutant.lineno,
             trial.mutant.mutator_name,
         )
</failure>
			<system-out>            str(trial.mutant.source_file) or &quot;&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #571" file="src/poodle/reporters/basic.py" line="58">
			<system-out>        )</system-out>
		</testcase>
		<testcase name="Mutant #572" file="src/poodle/reporters/basic.py" line="61">
			<system-out>    out_lines.append(&quot;&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #573" file="src/poodle/reporters/basic.py" line="62">
			<system-out>    out_lines.append(click.style(&quot;*** Mutants Not Found ***&quot;, fg=&quot;yellow&quot;))</system-out>
		</testcase>
		<testcase name="Mutant #574" file="src/poodle/reporters/basic.py" line="62">
			<system-out>    out_lines.append(click.style(&quot;*** Mutants Not Found ***&quot;, fg=&quot;yellow&quot;))</system-out>
		</testcase>
		<testcase name="Mutant #575" file="src/poodle/reporters/basic.py" line="64">
			<system-out>        mutant = trial.mutant</system-out>
		</testcase>
		<testcase name="Mutant #576" file="src/poodle/reporters/basic.py" line="65">
			<system-out>        result = trial.result</system-out>
		</testcase>
		<testcase name="Mutant #577" file="src/poodle/reporters/basic.py" line="67">
			<system-out>        out_lines.append(&quot;&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #578" file="src/poodle/reporters/basic.py" line="68">
			<system-out>        out_lines.append(f&quot;Mutant Trial Result: {display_reason_code.get(result.reason_code, result.reason_code)}&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #579" file="src/poodle/reporters/basic.py" line="69">
			<system-out>        out_lines.append(f&quot;Mutator: {mutant.mutator_name}&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #580" file="src/poodle/reporters/basic.py" line="74">
			<system-out>            file_lines = mutant.source_file.read_text(&quot;utf-8&quot;).splitlines(keepends=True)</system-out>
		</testcase>
		<testcase name="Mutant #581" file="src/poodle/reporters/basic.py" line="74">
			<system-out>            file_lines = mutant.source_file.read_text(&quot;utf-8&quot;).splitlines(keepends=True)</system-out>
		</testcase>
		<testcase name="Mutant #582" file="src/poodle/reporters/basic.py" line="74">
			<system-out>            file_lines = mutant.source_file.read_text(&quot;utf-8&quot;).splitlines(keepends=True)</system-out>
		</testcase>
		<testcase name="Mutant #583" file="src/poodle/reporters/basic.py" line="75">
			<system-out>            file_name = str(mutant.source_file.resolve())</system-out>
		</testcase>
		<testcase name="Mutant #584" file="src/poodle/reporters/basic.py" line="81">
			<system-out>                    tofile=f&quot;[Mutant] {file_name}:{mutant.lineno}&quot;,</system-out>
		</testcase>
		<testcase name="Mutant #585" file="src/poodle/reporters/basic.py" line="83">
			<system-out>            )</system-out>
		</testcase>
		<testcase name="Mutant #586" file="src/poodle/reporters/basic.py" line="85">
			<system-out>            out_lines.append(&quot;&quot;.join(diff))</system-out>
		</testcase>
		<testcase name="Mutant #587" file="src/poodle/reporters/basic.py" line="88">
			<system-out>                f&quot;source_file={mutant.source_file} lineno={mutant.lineno} col_offset={mutant.col_offset} &quot;</system-out>
		</testcase>
		<testcase name="Mutant #588" file="src/poodle/reporters/basic.py" line="89">
			<system-out>                f&quot;end_lineno={mutant.end_lineno} end_col_offset={mutant.end_col_offset}&quot;</system-out>
		</testcase>
		<testcase name="Mutant #589" file="src/poodle/reporters/basic.py" line="91">
			<system-out>            out_lines.append(&quot;text:&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #590" file="src/poodle/reporters/basic.py" line="94">
			<failure type="failure" message="bad_survived">--- src/poodle/reporters/basic.py
+++ src/poodle/reporters/basic.py
@@ -91,7 +91,7 @@
             out_lines.append(&quot;text:&quot;)
             out_lines.append(mutant.text)
 
-    not_found_file = config.reporter_opts.get(&quot;not_found_file&quot;)
+    not_found_file = config.reporter_opts.get(&quot;XXnot_found_fileXX&quot;)
     if not_found_file:
         Path(not_found_file).write_text(&quot;\n&quot;.join(out_lines))
     else:
</failure>
			<system-out>    not_found_file = config.reporter_opts.get(&quot;not_found_file&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #591" file="src/poodle/reporters/basic.py" line="94">
			<failure type="failure" message="bad_survived">--- src/poodle/reporters/basic.py
+++ src/poodle/reporters/basic.py
@@ -91,7 +91,7 @@
             out_lines.append(&quot;text:&quot;)
             out_lines.append(mutant.text)
 
-    not_found_file = config.reporter_opts.get(&quot;not_found_file&quot;)
+    not_found_file = None
     if not_found_file:
         Path(not_found_file).write_text(&quot;\n&quot;.join(out_lines))
     else:
</failure>
			<system-out>    not_found_file = config.reporter_opts.get(&quot;not_found_file&quot;)</system-out>
		</testcase>
		<testcase name="Mutant #592" file="src/poodle/reporters/basic.py" line="96">
			<failure type="failure" message="bad_survived">--- src/poodle/reporters/basic.py
+++ src/poodle/reporters/basic.py
@@ -93,7 +93,7 @@
 
     not_found_file = config.reporter_opts.get(&quot;not_found_file&quot;)
     if not_found_file:
-        Path(not_found_file).write_text(&quot;\n&quot;.join(out_lines))
+        Path(not_found_file).write_text(&quot;XX\nXX&quot;.join(out_lines))
     else:
         for line in out_lines:
             echo(line)
</failure>
			<system-out>        Path(not_found_file).write_text(&quot;\n&quot;.join(out_lines))</system-out>
		</testcase>
		<testcase name="Mutant #593" file="src/poodle/reporters/basic.py" line="99">
			<system-out>            echo(line)</system-out>
		</testcase>
		<testcase name="Mutant #594" file="src/poodle/data_types/data.py" line="14">
			<system-out>@dataclass</system-out>
		</testcase>
		<testcase name="Mutant #595" file="src/poodle/data_types/data.py" line="44">
			<system-out>@dataclass</system-out>
		</testcase>
		<testcase name="Mutant #596" file="src/poodle/data_types/data.py" line="56">
			<system-out>@dataclass</system-out>
		</testcase>
		<testcase name="Mutant #597" file="src/poodle/data_types/data.py" line="64">
			<system-out>@dataclass</system-out>
		</testcase>
		<testcase name="Mutant #598" file="src/poodle/data_types/data.py" line="70">
			<failure type="failure" message="bad_survived">--- src/poodle/data_types/data.py
+++ src/poodle/data_types/data.py
@@ -67,7 +67,7 @@
 
     passed: bool
     reason_code: str
-    reason_desc: str | None = None
+    reason_desc: str &amp; None = None
 
     RC_FOUND = &quot;mutant_found&quot;
     RC_NOT_FOUND = &quot;mutant_not_found&quot;
</failure>
			<system-out>    reason_desc: str | None = None</system-out>
		</testcase>
		<testcase name="Mutant #599" file="src/poodle/data_types/data.py" line="70">
			<system-out>    reason_desc: str | None = None</system-out>
		</testcase>
		<testcase name="Mutant #600" file="src/poodle/data_types/data.py" line="72">
			<system-out>    RC_FOUND = &quot;mutant_found&quot;</system-out>
		</testcase>
		<testcase name="Mutant #601" file="src/poodle/data_types/data.py" line="72">
			<system-out>    RC_FOUND = &quot;mutant_found&quot;</system-out>
		</testcase>
		<testcase name="Mutant #602" file="src/poodle/data_types/data.py" line="73">
			<system-out>    RC_NOT_FOUND = &quot;mutant_not_found&quot;</system-out>
		</testcase>
		<testcase name="Mutant #603" file="src/poodle/data_types/data.py" line="73">
			<system-out>    RC_NOT_FOUND = &quot;mutant_not_found&quot;</system-out>
		</testcase>
		<testcase name="Mutant #604" file="src/poodle/data_types/data.py" line="74">
			<system-out>    RC_TIMEOUT = &quot;timeout&quot;</system-out>
		</testcase>
		<testcase name="Mutant #605" file="src/poodle/data_types/data.py" line="74">
			<system-out>    RC_TIMEOUT = &quot;timeout&quot;</system-out>
		</testcase>
		<testcase name="Mutant #606" file="src/poodle/data_types/data.py" line="75">
			<system-out>    RC_INCOMPLETE = &quot;incomplete&quot;</system-out>
		</testcase>
		<testcase name="Mutant #607" file="src/poodle/data_types/data.py" line="75">
			<system-out>    RC_INCOMPLETE = &quot;incomplete&quot;</system-out>
		</testcase>
		<testcase name="Mutant #608" file="src/poodle/data_types/data.py" line="76">
			<system-out>    RC_OTHER = &quot;other&quot;</system-out>
		</testcase>
		<testcase name="Mutant #609" file="src/poodle/data_types/data.py" line="76">
			<system-out>    RC_OTHER = &quot;other&quot;</system-out>
		</testcase>
		<testcase name="Mutant #610" file="src/poodle/data_types/data.py" line="79">
			<system-out>@dataclass</system-out>
		</testcase>
		<testcase name="Mutant #611" file="src/poodle/data_types/data.py" line="88">
			<system-out>@dataclass</system-out>
		</testcase>
		<testcase name="Mutant #612" file="src/poodle/data_types/data.py" line="92">
			<failure type="failure" message="bad_survived">--- src/poodle/data_types/data.py
+++ src/poodle/data_types/data.py
@@ -89,7 +89,7 @@
 class TestingSummary:
     &quot;&quot;&quot;Summary Statistics for a Test Run.&quot;&quot;&quot;
 
-    trials: int = 0
+    trials: int = 1
     tested: int = 0
     found: int = 0
     not_found: int = 0
</failure>
			<system-out>    trials: int = 0</system-out>
		</testcase>
		<testcase name="Mutant #613" file="src/poodle/data_types/data.py" line="92">
			<failure type="failure" message="bad_survived">--- src/poodle/data_types/data.py
+++ src/poodle/data_types/data.py
@@ -89,7 +89,7 @@
 class TestingSummary:
     &quot;&quot;&quot;Summary Statistics for a Test Run.&quot;&quot;&quot;
 
-    trials: int = 0
+    trials: int = None
     tested: int = 0
     found: int = 0
     not_found: int = 0
</failure>
			<system-out>    trials: int = 0</system-out>
		</testcase>
		<testcase name="Mutant #614" file="src/poodle/data_types/data.py" line="93">
			<failure type="failure" message="bad_survived">--- src/poodle/data_types/data.py
+++ src/poodle/data_types/data.py
@@ -90,7 +90,7 @@
     &quot;&quot;&quot;Summary Statistics for a Test Run.&quot;&quot;&quot;
 
     trials: int = 0
-    tested: int = 0
+    tested: int = 1
     found: int = 0
     not_found: int = 0
     timeout: int = 0
</failure>
			<system-out>    tested: int = 0</system-out>
		</testcase>
		<testcase name="Mutant #615" file="src/poodle/data_types/data.py" line="93">
			<system-out>    tested: int = 0</system-out>
		</testcase>
		<testcase name="Mutant #616" file="src/poodle/data_types/data.py" line="94">
			<system-out>    found: int = 0</system-out>
		</testcase>
		<testcase name="Mutant #617" file="src/poodle/data_types/data.py" line="94">
			<system-out>    found: int = 0</system-out>
		</testcase>
		<testcase name="Mutant #618" file="src/poodle/data_types/data.py" line="95">
			<system-out>    not_found: int = 0</system-out>
		</testcase>
		<testcase name="Mutant #619" file="src/poodle/data_types/data.py" line="95">
			<system-out>    not_found: int = 0</system-out>
		</testcase>
		<testcase name="Mutant #620" file="src/poodle/data_types/data.py" line="96">
			<system-out>    timeout: int = 0</system-out>
		</testcase>
		<testcase name="Mutant #621" file="src/poodle/data_types/data.py" line="96">
			<system-out>    timeout: int = 0</system-out>
		</testcase>
		<testcase name="Mutant #622" file="src/poodle/data_types/data.py" line="97">
			<failure type="failure" message="bad_survived">--- src/poodle/data_types/data.py
+++ src/poodle/data_types/data.py
@@ -94,7 +94,7 @@
     found: int = 0
     not_found: int = 0
     timeout: int = 0
-    errors: int = 0
+    errors: int = 1
     success_rate: float = 0.0
 
     def __iadd__(self, result: MutantTrialResult) -&gt; Self:
</failure>
			<system-out>    errors: int = 0</system-out>
		</testcase>
		<testcase name="Mutant #623" file="src/poodle/data_types/data.py" line="97">
			<system-out>    errors: int = 0</system-out>
		</testcase>
		<testcase name="Mutant #624" file="src/poodle/data_types/data.py" line="98">
			<system-out>    success_rate: float = 0.0</system-out>
		</testcase>
		<testcase name="Mutant #625" file="src/poodle/data_types/data.py" line="98">
			<system-out>    success_rate: float = 0.0</system-out>
		</testcase>
		<testcase name="Mutant #626" file="src/poodle/data_types/data.py" line="103">
			<system-out>            self.tested += 1</system-out>
		</testcase>
		<testcase name="Mutant #627" file="src/poodle/data_types/data.py" line="103">
			<system-out>            self.tested += 1</system-out>
		</testcase>
		<testcase name="Mutant #628" file="src/poodle/data_types/data.py" line="103">
			<system-out>            self.tested += 1</system-out>
		</testcase>
		<testcase name="Mutant #629" file="src/poodle/data_types/data.py" line="105">
			<system-out>                self.found += 1</system-out>
		</testcase>
		<testcase name="Mutant #630" file="src/poodle/data_types/data.py" line="105">
			<system-out>                self.found += 1</system-out>
		</testcase>
		<testcase name="Mutant #631" file="src/poodle/data_types/data.py" line="105">
			<system-out>                self.found += 1</system-out>
		</testcase>
		<testcase name="Mutant #632" file="src/poodle/data_types/data.py" line="106">
			<system-out>            elif result.reason_code == MutantTrialResult.RC_NOT_FOUND:</system-out>
		</testcase>
		<testcase name="Mutant #633" file="src/poodle/data_types/data.py" line="107">
			<system-out>                self.not_found += 1</system-out>
		</testcase>
		<testcase name="Mutant #634" file="src/poodle/data_types/data.py" line="107">
			<system-out>                self.not_found += 1</system-out>
		</testcase>
		<testcase name="Mutant #635" file="src/poodle/data_types/data.py" line="107">
			<system-out>                self.not_found += 1</system-out>
		</testcase>
		<testcase name="Mutant #636" file="src/poodle/data_types/data.py" line="108">
			<system-out>            elif result.reason_code == MutantTrialResult.RC_TIMEOUT:</system-out>
		</testcase>
		<testcase name="Mutant #637" file="src/poodle/data_types/data.py" line="109">
			<system-out>                self.timeout += 1</system-out>
		</testcase>
		<testcase name="Mutant #638" file="src/poodle/data_types/data.py" line="109">
			<system-out>                self.timeout += 1</system-out>
		</testcase>
		<testcase name="Mutant #639" file="src/poodle/data_types/data.py" line="109">
			<system-out>                self.timeout += 1</system-out>
		</testcase>
		<testcase name="Mutant #640" file="src/poodle/data_types/data.py" line="111">
			<system-out>                self.errors += 1</system-out>
		</testcase>
		<testcase name="Mutant #641" file="src/poodle/data_types/data.py" line="111">
			<system-out>                self.errors += 1</system-out>
		</testcase>
		<testcase name="Mutant #642" file="src/poodle/data_types/data.py" line="111">
			<system-out>                self.errors += 1</system-out>
		</testcase>
		<testcase name="Mutant #643" file="src/poodle/data_types/data.py" line="113">
			<failure type="failure" message="bad_survived">--- src/poodle/data_types/data.py
+++ src/poodle/data_types/data.py
@@ -110,7 +110,7 @@
             else:
                 self.errors += 1
 
-        if self.trials &gt; 0:
+        if self.trials &gt;= 0:
             self.success_rate = self.found / self.trials
 
         return self
</failure>
			<system-out>        if self.trials &gt; 0:</system-out>
		</testcase>
		<testcase name="Mutant #644" file="src/poodle/data_types/data.py" line="113">
			<failure type="failure" message="bad_survived">--- src/poodle/data_types/data.py
+++ src/poodle/data_types/data.py
@@ -110,7 +110,7 @@
             else:
                 self.errors += 1
 
-        if self.trials &gt; 0:
+        if self.trials &gt; 1:
             self.success_rate = self.found / self.trials
 
         return self
</failure>
			<system-out>        if self.trials &gt; 0:</system-out>
		</testcase>
		<testcase name="Mutant #645" file="src/poodle/data_types/data.py" line="114">
			<system-out>            self.success_rate = self.found / self.trials</system-out>
		</testcase>
		<testcase name="Mutant #646" file="src/poodle/data_types/data.py" line="114">
			<system-out>            self.success_rate = self.found / self.trials</system-out>
		</testcase>
		<testcase name="Mutant #647" file="src/poodle/data_types/data.py" line="119">
			<system-out>@dataclass</system-out>
		</testcase>
		<testcase name="Mutant #648" file="src/poodle/data_types/work.py" line="10">
			<failure type="failure" message="bad_survived">--- src/poodle/data_types/work.py
+++ src/poodle/data_types/work.py
@@ -7,7 +7,7 @@
 
 import click
 
-logger = logging.getLogger(__name__)
+logger = None
 
 if TYPE_CHECKING:
     from collections.abc import Generator
</failure>
			<system-out>logger = logging.getLogger(__name__)</system-out>
		</testcase>
		<testcase name="Mutant #649" file="src/poodle/data_types/work.py" line="25">
			<system-out>        self.config = config</system-out>
		</testcase>
		<testcase name="Mutant #650" file="src/poodle/data_types/work.py" line="26">
			<system-out>        self.folder_zips: dict[Path, Path] = {}</system-out>
		</testcase>
		<testcase name="Mutant #651" file="src/poodle/data_types/work.py" line="27">
			<failure type="failure" message="bad_survived">--- src/poodle/data_types/work.py
+++ src/poodle/data_types/work.py
@@ -24,7 +24,7 @@
         &quot;&quot;&quot;Init from PoodleConfig.&quot;&quot;&quot;
         self.config = config
         self.folder_zips: dict[Path, Path] = {}
-        self.mutators: list[Mutator | Callable] = []
+        self.mutators: list[Mutator &amp; Callable] = []
         self.runner: Callable = lambda *_, **__: None
         self.reporters: list[Callable] = []
 
</failure>
			<system-out>        self.mutators: list[Mutator | Callable] = []</system-out>
		</testcase>
		<testcase name="Mutant #652" file="src/poodle/data_types/work.py" line="27">
			<system-out>        self.mutators: list[Mutator | Callable] = []</system-out>
		</testcase>
		<testcase name="Mutant #653" file="src/poodle/data_types/work.py" line="28">
			<system-out>        self.runner: Callable = lambda *_, **__: None</system-out>
		</testcase>
		<testcase name="Mutant #654" file="src/poodle/data_types/work.py" line="28">
			<system-out>        self.runner: Callable = lambda *_, **__: None</system-out>
		</testcase>
		<testcase name="Mutant #655" file="src/poodle/data_types/work.py" line="29">
			<system-out>        self.reporters: list[Callable] = []</system-out>
		</testcase>
		<testcase name="Mutant #656" file="src/poodle/data_types/work.py" line="31">
			<system-out>        self.echo = click.echo if config.echo_enabled else lambda *_, **__: None</system-out>
		</testcase>
		<testcase name="Mutant #657" file="src/poodle/data_types/work.py" line="31">
			<system-out>        self.echo = click.echo if config.echo_enabled else lambda *_, **__: None</system-out>
		</testcase>
		<testcase name="Mutant #658" file="src/poodle/data_types/work.py" line="34">
			<system-out>            i = 1</system-out>
		</testcase>
		<testcase name="Mutant #659" file="src/poodle/data_types/work.py" line="34">
			<system-out>            i = 1</system-out>
		</testcase>
		<testcase name="Mutant #660" file="src/poodle/data_types/work.py" line="35">
			<system-out>            while True:</system-out>
		</testcase>
		<testcase name="Mutant #661" file="src/poodle/data_types/work.py" line="37">
			<system-out>                i += 1</system-out>
		</testcase>
		<testcase name="Mutant #662" file="src/poodle/data_types/work.py" line="37">
			<system-out>                i += 1</system-out>
		</testcase>
		<testcase name="Mutant #663" file="src/poodle/data_types/work.py" line="37">
			<system-out>                i += 1</system-out>
		</testcase>
		<testcase name="Mutant #664" file="src/poodle/data_types/work.py" line="39">
			<system-out>        self._num_gen = number_generator()</system-out>
		</testcase>
		<testcase name="Mutant #665" file="src/poodle/data_types/interfaces.py" line="34">
			<system-out>        self.config = config</system-out>
		</testcase>
		<testcase name="Mutant #666" file="src/poodle/data_types/interfaces.py" line="35">
			<system-out>        self.echo = echo</system-out>
		</testcase>
		<testcase name="Mutant #667" file="src/poodle/data_types/interfaces.py" line="37">
			<failure type="failure" message="bad_survived">--- src/poodle/data_types/interfaces.py
+++ src/poodle/data_types/interfaces.py
@@ -34,7 +34,7 @@
         self.config = config
         self.echo = echo
 
-    mutator_name = &quot;&quot;
+    mutator_name = &quot;XXXX&quot;
 
     @abstractmethod
     def create_mutations(self, parsed_ast: ast.Module, file_lines: list[str], *_, **__) -&gt; list[FileMutation]:
</failure>
			<system-out>    mutator_name = &quot;&quot;</system-out>
		</testcase>
		<testcase name="Mutant #668" file="src/poodle/data_types/interfaces.py" line="37">
			<failure type="failure" message="bad_survived">--- src/poodle/data_types/interfaces.py
+++ src/poodle/data_types/interfaces.py
@@ -34,7 +34,7 @@
         self.config = config
         self.echo = echo
 
-    mutator_name = &quot;&quot;
+    mutator_name = None
 
     @abstractmethod
     def create_mutations(self, parsed_ast: ast.Module, file_lines: list[str], *_, **__) -&gt; list[FileMutation]:
</failure>
			<system-out>    mutator_name = &quot;&quot;</system-out>
		</testcase>
		<testcase name="Mutant #669" file="src/poodle/data_types/interfaces.py" line="39">
			<system-out>    @abstractmethod</system-out>
		</testcase>
		<testcase name="Mutant #670" file="src/poodle/data_types/interfaces.py" line="46">
			<system-out>    @classmethod</system-out>
		</testcase>
		<testcase name="Mutant #671" file="src/poodle/data_types/interfaces.py" line="49">
			<system-out>        lineno, col_offset, end_lineno, end_col_offset = cls.get_location(node)</system-out>
		</testcase>
		<testcase name="Mutant #672" file="src/poodle/data_types/interfaces.py" line="60">
			<failure type="failure" message="bad_survived">--- src/poodle/data_types/interfaces.py
+++ src/poodle/data_types/interfaces.py
@@ -57,7 +57,6 @@
             text=text,
         )
 
-    @staticmethod
     def get_location(node: ast.AST) -&gt; tuple[int, int, int, int]:
         &quot;&quot;&quot;Get location lines and columns that encompasses node and all child nodes.&quot;&quot;&quot;
         lineno = node.lineno
</failure>
			<system-out>    @staticmethod</system-out>
		</testcase>
		<testcase name="Mutant #673" file="src/poodle/data_types/interfaces.py" line="63">
			<system-out>        lineno = node.lineno</system-out>
		</testcase>
		<testcase name="Mutant #674" file="src/poodle/data_types/interfaces.py" line="64">
			<system-out>        col_offset = node.col_offset</system-out>
		</testcase>
		<testcase name="Mutant #675" file="src/poodle/data_types/interfaces.py" line="65">
			<system-out>        end_lineno = node.end_lineno or node.lineno</system-out>
		</testcase>
		<testcase name="Mutant #676" file="src/poodle/data_types/interfaces.py" line="65">
			<system-out>        end_lineno = node.end_lineno or node.lineno</system-out>
		</testcase>
		<testcase name="Mutant #677" file="src/poodle/data_types/interfaces.py" line="66">
			<system-out>        end_col_offset = node.end_col_offset or node.col_offset</system-out>
		</testcase>
		<testcase name="Mutant #678" file="src/poodle/data_types/interfaces.py" line="66">
			<system-out>        end_col_offset = node.end_col_offset or node.col_offset</system-out>
		</testcase>
		<testcase name="Mutant #679" file="src/poodle/data_types/interfaces.py" line="69">
			<system-out>            if not hasattr(n, &quot;lineno&quot;):</system-out>
		</testcase>
		<testcase name="Mutant #680" file="src/poodle/data_types/interfaces.py" line="69">
			<system-out>            if not hasattr(n, &quot;lineno&quot;):</system-out>
		</testcase>
		<testcase name="Mutant #681" file="src/poodle/data_types/interfaces.py" line="70">
			<system-out>                continue</system-out>
		</testcase>
		<testcase name="Mutant #682" file="src/poodle/data_types/interfaces.py" line="72">
			<system-out>            if n.lineno &lt; lineno:</system-out>
		</testcase>
		<testcase name="Mutant #683" file="src/poodle/data_types/interfaces.py" line="73">
			<system-out>                lineno = n.lineno</system-out>
		</testcase>
		<testcase name="Mutant #684" file="src/poodle/data_types/interfaces.py" line="74">
			<system-out>                col_offset = n.col_offset</system-out>
		</testcase>
		<testcase name="Mutant #685" file="src/poodle/data_types/interfaces.py" line="75">
			<system-out>            elif n.lineno == lineno and n.col_offset &lt; col_offset:</system-out>
		</testcase>
		<testcase name="Mutant #686" file="src/poodle/data_types/interfaces.py" line="75">
			<failure type="failure" message="bad_survived">--- src/poodle/data_types/interfaces.py
+++ src/poodle/data_types/interfaces.py
@@ -72,7 +72,7 @@
             if n.lineno &lt; lineno:
                 lineno = n.lineno
                 col_offset = n.col_offset
-            elif n.lineno == lineno and n.col_offset &lt; col_offset:
+            elif n.lineno == lineno and n.col_offset &lt;= col_offset:
                 col_offset = n.col_offset
 
             if not hasattr(n, &quot;end_lineno&quot;) or not n.end_lineno:
</failure>
			<system-out>            elif n.lineno == lineno and n.col_offset &lt; col_offset:</system-out>
		</testcase>
		<testcase name="Mutant #687" file="src/poodle/data_types/interfaces.py" line="75">
			<system-out>            elif n.lineno == lineno and n.col_offset &lt; col_offset:</system-out>
		</testcase>
		<testcase name="Mutant #688" file="src/poodle/data_types/interfaces.py" line="76">
			<system-out>                col_offset = n.col_offset</system-out>
		</testcase>
		<testcase name="Mutant #689" file="src/poodle/data_types/interfaces.py" line="78">
			<system-out>            if not hasattr(n, &quot;end_lineno&quot;) or not n.end_lineno:</system-out>
		</testcase>
		<testcase name="Mutant #690" file="src/poodle/data_types/interfaces.py" line="78">
			<system-out>            if not hasattr(n, &quot;end_lineno&quot;) or not n.end_lineno:</system-out>
		</testcase>
		<testcase name="Mutant #691" file="src/poodle/data_types/interfaces.py" line="78">
			<system-out>            if not hasattr(n, &quot;end_lineno&quot;) or not n.end_lineno:</system-out>
		</testcase>
		<testcase name="Mutant #692" file="src/poodle/data_types/interfaces.py" line="78">
			<system-out>            if not hasattr(n, &quot;end_lineno&quot;) or not n.end_lineno:</system-out>
		</testcase>
		<testcase name="Mutant #693" file="src/poodle/data_types/interfaces.py" line="79">
			<system-out>                continue</system-out>
		</testcase>
		<testcase name="Mutant #694" file="src/poodle/data_types/interfaces.py" line="81">
			<system-out>            if n.end_lineno &gt; end_lineno:</system-out>
		</testcase>
		<testcase name="Mutant #695" file="src/poodle/data_types/interfaces.py" line="82">
			<system-out>                end_lineno = n.end_lineno</system-out>
		</testcase>
		<testcase name="Mutant #696" file="src/poodle/data_types/interfaces.py" line="84">
			<system-out>                    end_col_offset = n.end_col_offset</system-out>
		</testcase>
		<testcase name="Mutant #697" file="src/poodle/data_types/interfaces.py" line="85">
			<system-out>            elif n.end_lineno == end_lineno and n.end_col_offset and n.end_col_offset &gt; end_col_offset:</system-out>
		</testcase>
		<testcase name="Mutant #698" file="src/poodle/data_types/interfaces.py" line="85">
			<failure type="failure" message="bad_survived">--- src/poodle/data_types/interfaces.py
+++ src/poodle/data_types/interfaces.py
@@ -82,7 +82,7 @@
                 end_lineno = n.end_lineno
                 if n.end_col_offset:
                     end_col_offset = n.end_col_offset
-            elif n.end_lineno == end_lineno and n.end_col_offset and n.end_col_offset &gt; end_col_offset:
+            elif n.end_lineno == end_lineno and n.end_col_offset and n.end_col_offset &gt;= end_col_offset:
                 end_col_offset = n.end_col_offset
 
         return (lineno, col_offset, end_lineno, end_col_offset)
</failure>
			<system-out>            elif n.end_lineno == end_lineno and n.end_col_offset and n.end_col_offset &gt; end_col_offset:</system-out>
		</testcase>
		<testcase name="Mutant #699" file="src/poodle/data_types/interfaces.py" line="85">
			<system-out>            elif n.end_lineno == end_lineno and n.end_col_offset and n.end_col_offset &gt; end_col_offset:</system-out>
		</testcase>
		<testcase name="Mutant #700" file="src/poodle/data_types/interfaces.py" line="86">
			<system-out>                end_col_offset = n.end_col_offset</system-out>
		</testcase>
		<testcase name="Mutant #701" file="src/poodle/data_types/interfaces.py" line="90">
			<system-out>    @staticmethod</system-out>
		</testcase>
		<testcase name="Mutant #702" file="src/poodle/data_types/interfaces.py" line="95">
			<system-out>                child.parent = node  # type: ignore [attr-defined]</system-out>
		</testcase>
		<testcase name="Mutant #703" file="src/poodle/data_types/interfaces.py" line="97">
			<failure type="failure" message="bad_survived">--- src/poodle/data_types/interfaces.py
+++ src/poodle/data_types/interfaces.py
@@ -94,7 +94,6 @@
             for child in ast.iter_child_nodes(node):
                 child.parent = node  # type: ignore [attr-defined]
 
-    @classmethod
     def is_annotation(cls, node: ast.AST, child_node: ast.AST | None = None) -&gt; bool:
         &quot;&quot;&quot;Recursively search parent nodes to see if the starting node is part of an annotation.
 
</failure>
			<system-out>    @classmethod</system-out>
		</testcase>
		<testcase name="Mutant #704" file="src/poodle/data_types/interfaces.py" line="103">
			<system-out>        if not hasattr(node, &quot;parent&quot;) or not node.parent:</system-out>
		</testcase>
		<testcase name="Mutant #705" file="src/poodle/data_types/interfaces.py" line="103">
			<system-out>        if not hasattr(node, &quot;parent&quot;) or not node.parent:</system-out>
		</testcase>
		<testcase name="Mutant #706" file="src/poodle/data_types/interfaces.py" line="103">
			<system-out>        if not hasattr(node, &quot;parent&quot;) or not node.parent:</system-out>
		</testcase>
		<testcase name="Mutant #707" file="src/poodle/data_types/interfaces.py" line="103">
			<system-out>        if not hasattr(node, &quot;parent&quot;) or not node.parent:</system-out>
		</testcase>
		<testcase name="Mutant #708" file="src/poodle/data_types/interfaces.py" line="104">
			<system-out>            return False</system-out>
		</testcase>
		<testcase name="Mutant #709" file="src/poodle/data_types/interfaces.py" line="106">
			<system-out>        if hasattr(node, &quot;annotation&quot;) and node.annotation == child_node:</system-out>
		</testcase>
		<testcase name="Mutant #710" file="src/poodle/data_types/interfaces.py" line="106">
			<system-out>        if hasattr(node, &quot;annotation&quot;) and node.annotation == child_node:</system-out>
		</testcase>
		<testcase name="Mutant #711" file="src/poodle/data_types/interfaces.py" line="106">
			<system-out>        if hasattr(node, &quot;annotation&quot;) and node.annotation == child_node:</system-out>
		</testcase>
		<testcase name="Mutant #712" file="src/poodle/data_types/interfaces.py" line="107">
			<system-out>            return True</system-out>
		</testcase>
		<testcase name="Mutant #713" file="src/poodle/data_types/interfaces.py" line="109">
			<system-out>        if hasattr(node, &quot;returns&quot;) and node.returns == child_node:</system-out>
		</testcase>
		<testcase name="Mutant #714" file="src/poodle/data_types/interfaces.py" line="109">
			<system-out>        if hasattr(node, &quot;returns&quot;) and node.returns == child_node:</system-out>
		</testcase>
		<testcase name="Mutant #715" file="src/poodle/data_types/interfaces.py" line="109">
			<system-out>        if hasattr(node, &quot;returns&quot;) and node.returns == child_node:</system-out>
		</testcase>
		<testcase name="Mutant #716" file="src/poodle/data_types/interfaces.py" line="110">
			<system-out>            return True</system-out>
		</testcase>
	</testsuite>
</testsuites>

